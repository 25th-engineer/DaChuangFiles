{"content2":"机器学习H2O AI框架简介\n1.  H2O框架\n优势：自己实现分布式计算框架，算法种类全，有深度学习算法，同时可以通过Sparkling-water将 h2o 和spark 进行完美整合\na.底层数据层\n底层数据读取Hdfs数据  s3数据  SQL 数据  noSQL数据\ns3Amazon Simple Storage Service 亚马逊的云存储结构\nHive其实就是读取HDFS\nnoSQL：HBase\nHQL是一种类SQL语言，这种语言最终被转化为Map/Reduce.虽然Hive提供了SQL查询功能，但是Hive不能够进行交互查询--因为它只能够在Haoop上批量的执行Hadoop 便利全部数据速度慢 老版本不支持更新操作\nHbase的能够在它的数据库上实时运行，而不是运行MapReduce任务在Hbase中，行是key/value映射的集合，这个映射通过row-key来唯一标识。Hbase利用Hadoop的基础设施，可以利用通用的设备进行水平的扩展。\nHive可以用来进行统计查询，HBase可以用来进行实时查询\nb. 计算引擎层\nhadoop  spark\n在hadoop中使用mapreduce 所起的任务只是Map任务\n使用sparkling-water将H2O和Spark进行整合\nc. 核心运算层\n算法引擎：深度学习\n计算引擎：基于内存的MapReduce 使用分布式的fork/join框架（java并行框架） 内存管理引擎 ：采用列式压缩ColumnarCompression\nd．接口层\nSDK和 REST API\n快速查询R引擎  毫秒级评分引擎\nh2o-3/h2o-docs/src/dev/lifecycle.md\nH2OApp vs. H2OClientApp\nThe main class for Standalone H2O isH2OApp.（class）\nH2OApp uses a helper class calledH2OStarter（class）\nH2O.configureLogging();\nH2O.registerExtensions();\n// Fire up the H2O Cluster\nH2O.main(args);\nH2O.registerRestApis(relativeResourcePath);\nH2O.finalizeRegistration();\nwater is from h2o-core and hex is fromh2o-algos.\ne  核心组件\nMRTask ：Map/Reduce styledistributed computation\n里边有各种mapreduce方法\n(Dtask–TAICountedCompleted – countedCompleted – fork/jointask)\nChunk : ChunkType  ChunkName\n2.  H2O中的数据结构\nFrame   Frame are only composed of Vecs of the sameVectorGroup\nVec    是由多个Chunck组成 可以并行计算mapreduce  MRtask\nnewMRTask{} { final double _mean = vec.mean();\npublicvoid map( Chunk chk ) {\nfor(int row=0; row &lt; chk._len; row++ )\nif(chk.isNA(row) ) chk.set(row,_mean);\n}\n}.doAll(vec);\nChunck  1000 –100 0000个element  one cpu\nKey\nDKV  分布式Key/values存储\nAST : AbstractSyntax Tree"}
