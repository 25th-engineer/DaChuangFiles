{"content2":"HanLP 自然语言处理 for nodejs\n·支持中文分词（N-最短路分词、CRF分词、索引分词、用户自定义词典、词性标注），命名实体识别（中国人名、音译人名、日本人名、地名、实体机构名识别），关键词提取，自动摘要，短语提取，拼音转换，简繁转换，文本推荐，依存句法分析（MaxEnt依存句法分析、CRF依存句法分析）\n环境要求\njava 1.8\nnodejs >= 6\ndocker\n·build image\ncd node-hanlp\n./scripts/build-docker-image.sh\nOr pull image\ndocker pull samurais/hanlp-api:1.0.0\n·  start container\ndocker run -it --rm -p 3002:3000 samurais/hanlp-api:1.0.0\n·access service\nPOST /tokenizer HTTP/1.1\nHost: localhost:3002\nContent-Type: application/json\n{\n\"type\": \"nlp\",\n\"content\": \"刘德华和张学友创作了很多流行歌曲\"\n}\nRESPONSE\n{\n\"status\": \"success\",\n\"data\": [\n{\n\"word\": \"刘德华\",\n\"nature\": \"nr\",\n\"offset\": 0\n},\n{\n\"word\": \"和\",\n\"nature\": \"cc\",\n\"offset\": 0\n},\n{\n\"word\": \"张学友\",\n\"nature\": \"nr\",\n\"offset\": 0\n},\n{\n\"word\": \"创作\",\n\"nature\": \"v\",\n\"offset\": 0\n},\n{\n\"word\": \"了\",\n\"nature\": \"ule\",\n\"offset\": 0\n},\n{\n\"word\": \"很多\",\n\"nature\": \"m\",\n\"offset\": 0\n},\n{\n\"word\": \"流行歌曲\",\n\"nature\": \"n\",\n\"offset\": 0\n}\n]\n}\n·Other APIs\nl tokenizer 分词\nl keyword 关键词\nl summary 摘要\nl phrase 短语提取\nl query 关键词、摘要\nl conversion 简、繁、拼音转换\n源码\nnode module\n·Install\nnpm install node-hanlp\n·Config\n² 配置文件路径 node_modules/node-hanlp/lib/src-java/hanLP.proerties\n² 请修改root为您的目录路径\n² 词典文件目录 ./data\n² 请下载词典  pan.baidu.com/s/1pKUVNYF 放入 ./data (约800MB文件) 目录下\n·Usage\nconst Hanlp = require(\"node-hanlp\");\n//分词库初始化及配置\nconst HanLP = new Hanlp({\nCustomDict : true, //使用自定义词典\nNameRecognize : true, //中国人名识别\nTranslatedNameRecognize : true , //音译人名识别\nJapaneseNameRecognize : true, //日本人名识别\nPlaceRecognize : true , //地名识别\nOrgRecognize : true //机构名识别\n});\nlet words = HanLP.Tokenizer(\"商品和服务\");\n标准分词 HanLP.Tokenizer( text )\n@param String text [文本]\n@ruten Object\nlet words = HanLP.Tokenizer(\"商品和服务\");\n[\n{ word: '商品', nature: 'n', offset: 0 },\n{ word: '和', nature: 'cc', offset: 0 },\n{ word: '服务', nature: 'vn', offset: 0 }\n]\nNLP分词 HanLP.NLPTokenizer( text )\n@param String text [文本]\n@ruten Object\nlet words = HanLP.NLPTokenizer(\"中国科学院计算技术研究所的宗成庆教授正在教授自然语言处理课程\");\n[\n{ word: '中国科学院计算技术研究所', nature: 'nt', offset: 0 },\n{ word: '的', nature: 'ude1', offset: 0 },\n{ word: '宗成庆', nature: 'nr', offset: 0 },\n{ word: '教授', nature: 'nnt', offset: 0 },\n...\n]\n索引分词 HanLP.IndexTokenizer( text )\n@param String text [文本]\n@ruten Object\nlet words = HanLP.IndexTokenizer(\"主副食品\");\n[\n{ word: '主副食品', nature: 'n', offset: 0 },\n{ word: '主副食', nature: 'j', offset: 0 },\n{ word: '副食', nature: 'n', offset: 1 },\n{ word: '副食品', nature: 'n', offset: 1 },\n{ word: '食品', nature: 'n', offset: 2 }\n]\nCRF分词 HanLP.CRFTokenizer( text )\n@param String text [文本]\n@ruten Object\nlet words = HanLP.CRFTokenizer(\"你好，欢迎使用HanLP汉语处理包！\");\n[\n{ word: '你好', nature: 'vl', offset: 0 },\n{ word: '，', nature: 'w', offset: 0 },\n{ word: '欢迎', nature: 'v', offset: 0 },\n{ word: '使用', nature: 'v', offset: 0 },\n{ word: 'HanLP', nature: 'nz', offset: 0 },\n{ word: '汉语', nature: 'gi', offset: 0 },\n...\n]\n去除停用词分词 HanLP.NoStopWord( text )\n@param String text [文本]\n@ruten Object\nlet words = HanLP.NoStopWord(\"你好，欢迎使用HanLP汉语处理包！\");\n[\n{ word: '你好', nature: 'vl', offset: 0 },\n{ word: '欢迎', nature: 'v', offset: 0 },\n{ word: '使用', nature: 'v', offset: 0 },\n{ word: 'HanLP', nature: 'nz', offset: 0 },\n{ word: '汉语', nature: 'gi', offset: 0 },\n...\n]\n最短路分词 HanLP.ShortSegment( text )\n@param String text [文本]\n@ruten Object\nlet words = HanLP.ShortSegment(\"今天，liuzhijun案的关键人物,山西女商人dingshumiao在市二中院出庭受审。\");\n[\n{ word: '今天', nature: 't', offset: 0 },\n{ word: '，', nature: 'w', offset: 0 },\n{ word: 'liushijun', nature: 'nr', offset: 0 },\n{ word: '案', nature: 'ng', offset: 0 },\n{ word: '的', nature: 'ude1', offset: 0 },\n{ word: '关键', nature: 'n', offset: 0 },\n...\n]\nN-最短分词 HanLP.NShortSegment( text )\n@param String text [文本]\n@ruten Object\nlet words = HanLP.NShortSegment(\"刘喜杰石国祥会见吴亚琴先进事迹报告团成员\");\n[\n{ word: '刘喜杰', nature: 'nr', offset: 0 },\n{ word: '石国祥', nature: 'nr', offset: 0 },\n{ word: '会见', nature: 'v', offset: 0 },\n{ word: '吴亚琴', nature: 'nr', offset: 0 },\n{ word: '先进', nature: 'a', offset: 0 },\n...\n]\n极速词典分词 HanLP.SpeedTokenizer( text )\n@param String text [文本]\n@ruten Object\nlet words = HanLP.SpeedTokenizer(\"江西鄱阳湖干枯，中国最大淡水湖变成大草原\");\n[\n{ word: '江西', offset: 0 },\n{ word: '鄱阳湖', offset: 2 },\n{ word: '干枯', offset: 5 },\n{ word: '，', offset: 7 },\n{ word: '中国', offset: 8 },\n]\n关键词提取 HanLP.Keyword( text , nTop )\n@param String text [文本]\n@param Number nTop [关键词个数，默认5个]\n@ruten Object\nlet words = HanLP.Keyword(\"江西鄱阳湖干枯，中国最大淡水湖变成大草原\" , 3);\n[ '中国', '最大', '淡水湖' ]\n短语提取 HanLP.Phrase( text , nTop )\n@param String text [文本]\n@param Number nTop [短语个数，默认3个]\n@ruten Object\nlet words = HanLP.Phrase(\"江西鄱阳湖干枯，中国最大淡水湖变成大草原\" , 2 );\n[ '中国最大', '变成草原' ]\n提取文章摘要 HanLP.Summary( text , nTop )\n@param String text [文本]\n@param Number nTop [文章摘要条数，默认3条]\n@ruten Object\nlet text = \"据美国福克斯新闻报道，俄罗斯黑海舰队一艘护卫舰格里戈罗维奇海军上将号，正在驶向美国军舰发射导弹攻击叙利亚的区域。该护卫舰是俄罗斯最先进的护卫舰，2016年才刚服役，除防空、反舰导弹外，也可以发射巡航导弹。格里戈罗维奇海军上将号原定于本周访问叙利亚的塔尔图斯港。\"\nlet words = HanLP.Summary( text , 3);\n[\n'俄罗斯黑海舰队一艘护卫舰格里戈罗维奇海军上将号',\n'格里戈罗维奇海军上将号原定于本周访问叙利亚的塔尔图斯港',\n'正在驶向美国军舰发射导弹攻击叙利亚的区域'\n]\n文本推荐 HanLP.Suggester( list, words, Ntop )\n@param Array list 句子列表\n@param Array words 词语\n@param Number nTop 相似句子推荐个数，默认1个\n@ruten Object\n句子级别，从一系列句子中挑出与输入句子最相似的那一个\n语义距离 HanLP.WordDistance( words )\n@param Array words 词\n@ruten Object\n简繁转换 HanLP.ConversionFont( text , type )\n@param String text 文本\n@ruten String type 类型 jt简体|ft繁体，默认jt\n@ruten String\n拼音转换 HanLP.Pinyin( text , type )\n@param String text 文本\n@ruten String type 类型 类型 num数字音调|tone符号音调|outtone无音调|shengmu声母|yunmu韵母|head输入法头，默认outtone\n@ruten Object"}
