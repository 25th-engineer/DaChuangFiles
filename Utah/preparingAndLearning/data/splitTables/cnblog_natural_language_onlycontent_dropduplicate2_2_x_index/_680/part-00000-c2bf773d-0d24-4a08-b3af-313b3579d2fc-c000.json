{"content2":"自然语言处理\n1. Java自然语言处理 LingPipe\nLingPipe是一个自然语言处理的Java开源工具包。LingPipe目前已有很丰富的功能，包括主题分类（Top Classification）、命名实体识别（Named Entity Recognition）、词性标注（Part-of Speech Tagging）、句题检测（Sentence Detection）、查询拼写检查（Query Spell Checking）、兴趣短语检测（Interseting Phrase Detection）、聚类（Clustering）、字符语言建模（Character Language Modeling）、医学文献下载/解析/索引（MEDLINE Download, Parsing and Indexing）、数据库文本挖掘（Database Text Mining）、中文分词（Chinese Word Segmentation）、情感分析（Sentiment Analysis）、语言辨别（Language Identification）等API。\n下载链接：http://alias-i.com/lingpipe/web/download.html\n2.中文自然语言处理工具包 FudanNLP\nFudanNLP主要是为中文自然语言处理而开发的工具包，也包含为实现这些任务的机器学习算法和数据集。\n演示地址: http://jkx.fudan.edu.cn/nlp/query\nFudanNLP目前实现的内容如下：\n中文处理工具\n中文分词\n词性标注\n实体名识别\n句法分析\n时间表达式识别\n信息检索\n文 本分类\n新闻聚类\nLucene中文分词\n机 器学习\nAverage Perceptron\nPassive-aggressive Algorithm\nK-means\nExact Inference\n下载链接：http://code.google.com/p/fudannlp/downloads/list\n3.自然语言处理工具Apache OpenNLP\nOpenNLP 是一个机器学习工具包，用于处理自然语言文本。支持大多数常用的 NLP 任务，例如：标识化、句子切分、部分词性标注、名称抽取、组块、解析等。\n下载链接：http://opennlp.apache.org/\n4.自然语言处理工具 CRF++\nCRF++是著名的条件随机场开源工具，也是目前综合性能最佳的CRF工具。CRF++本身已经是个比较老的工具了，但鉴于其性能较好，仍然是自然语言处理很重要的一个工具。\nNlpBamboo 中文分词库在使用该工具。\n下载链接：http://sourceforge.net/projects/crfpp/files/\n5、Stanford CoreNLP 斯坦福大学NLP\n很牛叉的一个库\n下载地址 http://search.maven.org/#browse%7C11864822\n学习自然语言这一段时间以来接触和听说了好多开源的自然语言处理工具，在这里做一下汇总方便自己以后学习，其中有自己使用过的也有了解不是很多的，对于不甚了解的工具以后学习熟悉了会做更新的。\n分词组件\n1.IKAnalyzer\nIK Analyzer是一个开源的，基于Java语言开发的轻量级的中文分词工具包。从2006.12推出1.0版本开始，IK Analyzer已经推出了多个版本，当前最新版本为2012 u6，最初基于Luence，从3.0开始成为面向Java的公用分词组件，独立于Luence，下载地址为：http://git.oschina.net/wltea/IK-Analyzer-2012FF。IK支持细粒度和智能分词两种切分模式，支持英文字母、数字、中文词汇等分词处理，兼容韩文、日文字符。可以支持用户自定义的词典，IKAnalyzer.cfg.xml文件来实现，可以配置自定义的扩展词典和停用词典。词典需要采用UTF-8无BOM格式编码，并且每个词语占一行。配置文件如下所示：\n<properties>\n<comment>IK Analyzer 扩展配置</comment>\n<!--用户可以在这里配置自己的扩展字典-->\n<entry key=\"ext_dict\">ext.dic;</entry>\n<!--用户可以在这里配置自己的扩展停止词字典-->\n<entry key=\"ext_stopwords\">stopword.dic;chinese_stopword.dic</entry>\n</properties>\nIK部署很简单，只需要把IKAnalyzer2012_u6.jar部署于项目的lib中，同时将IKAnalyzer.cfg.xml文件以及词典文件置于src中，即可通过API的方式开发调用。\n示例代码：\n/**\n* IK分词功能实现\n* @return\n*/\npublic String spiltWords(String srcString){\nStringBuffer wordsBuffer = new StringBuffer(\"\");\ntry{\nIKSegmenter ik=new IKSegmenter(new StringReader(srcString), true);\nLexeme lex=null;\nwhile((lex=ik.next())!=null){\n//              System.out.print(lex.getLexemeText()+\" \");\nwordsBuffer.append(lex.getLexemeText()).append(\" \");\n}\n}catch(Exception e){\nlogger.error(e.getMessage());\n}\nreturn wordsBuffer.toString();\n}\nIK简单、易于扩展，分词结果较好并且采用Java编写，因为我平时的项目以Java居多，所以是我平时处理分词的首选工具。\n2.中科院ICTCLAS\nICTCLAS是由中科院计算所历经数年开发的分词工具，采用C++编写。最新版本命名为ICTCLAS2013，又名为NLPIR汉语分词系统，官网为：http://ictclas.nlpir.org/。主要功能包括中文分词、词性标注、命名实体识别、用户词典功能，同时支持GBK编码、UTF8编码、BIG5编码，新增微博分词、新词发现与关键词提取。可以可视化界面操作和API方式调用。\n3.FudanNLP\nFudanNLP主要是为中文自然语言处理而开发的工具包，也包含为实现这些任务的机器学习算法和数据集。FudanNLP及其包含数据集使用LGPL3.0许可证。\n主要功能包括：\n信息检索：文本分类，新闻聚类。\n中文处理：中文分词，词性标注，实体名识别，关键词抽取，依存句法分析，时间短语识别。\n结构化学习：在线学习，层次分类，聚类，精确推理。\n工具采用Java编写，提供了API的访问调用方式。最新版本为FudanNLP-1.6.1，下载地址为：http://code.google.com/p/fudannlp/。\n在使用时将fudannlp.jar以及lib中的jar部署于项目中的lib里面。models文件夹中存放的模型文件，主要用于分词、词性标注和命名实体识别以及分词所需的词典；文件夹example中主要是使用的示例代码，可以帮助快速入门和使用；java-docs是API帮助文档；src中存放着源码；PDF文档中有着比较详细的介绍和自然语言处理基础知识的讲解。\n初始运行程序时初始化时间有点长，并且加载模型时占用内存较大。在进行语法分析时感觉分析的结果不是很准确。\n4.The Stanford Natural LanguageProcessing Group\nStanford NLP Group是斯坦福大学自然语言处理的团队，开发了多个NLP工具，官网网址为：http://nlp.stanford.edu/software/index.shtml。其开发的工具包括以下内容：\n4.1 Stanford CoreNLP\n采用Java编写的面向英文的处理工具，下载网址为：http://nlp.stanford.edu/software/corenlp.shtml。主要功能包括分词、词性标注、命名实体识别、语法分析等。\n我曾经采用它进行英语单词的词性还原，具体应用详见文章《采用Stanford CoreNLP实现英文单词词形还原》。\n4.2 Stanford Word Segmenter\n采用CRF（条件随机场）算法进行分词，也是基于Java开发的，同时可以支持中文和Arabic，官方要求Java版本1.6以上，推荐内存至少1G。下载地址为http://nlp.stanford.edu/software/segmenter.shtml。\n简单的示例程序：\n//设置分词器属性。\nProperties props = new Properties();\n//字典文件地址，可以用绝对路径，如d:/data\nprops.setProperty(\"sighanCorporaDict\", \"data\");\n//字典压缩包地址，可以用绝对路径\nprops.setProperty(\"serDictionary\",\"data/dict-chris6.ser.gz\");\n//输入文字的编码；\nprops.setProperty(\"inputEncoding\", \"UTF-8\");\nprops.setProperty(\"sighanPostProcessing\", \"true\");\n//初始化分词器，\nCRFClassifier classifier = new CRFClassifier(props);\n//从持久化文件中加载分词器设置；\nclassifier.loadClassifierNoExceptions(\"data/ctb.gz\", props);\n// flags must be re-set after data is loaded\nclassifier.flags.setProperties(props);\n//分词\nList words = classifier.segmentString(\"语句内容\");\n4.3 Stanford POS Tagger\n采用Java编写的面向英文、中文、法语、阿拉伯语、德语的命名实体识别工具，下载地址为：http://nlp.stanford.edu/software/tagger.shtml。还没有接触过，需要以后学习研究。\n4.4 Stanford Named Entity Recognizer\n采用条件随机场模型的命名实体工具，下载地址为：http://nlp.stanford.edu/software/CRF-NER.shtml。还没有接触过，需要以后学习研究。\n4.5 Stanford Parser\n进行语法分析的工具，支持英文、中文、阿拉伯文和法语。下载地址为：http://nlp.stanford.edu/software/lex-parser.shtml。具体的使用介绍见《采用Stanford Parser进行中文语法解析》。\n4.6 Stanford Classifier\n采用Java编写的分类器，下载地址为：http://nlp.stanford.edu/software/classifier.shtml。还没有接触过，需要以后学习研究。\n5.jcseg\nJcseg是基于mmseg算法的一个轻量级中文分词器，同时集成了关键字提取，关键短语提取，关键句子提取和文章自动摘要等功能，并且提供了一个基于Jetty的web服务器，方便各大语言直接http调用，同时提供了最新版本的lucene, solr, elasticsearch的分词接口！Jcseg自带了一个 jcseg.properties文件用于快速配置而得到适合不同场合的分词应用，例如：最大匹配词长，是否开启中文人名识别，是否追加拼音，是否追加同义词等！"}
