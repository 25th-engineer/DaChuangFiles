{"content2":"1.先安装python（类似于java中的jdk）\n从官网下载python，python2和python3语法有点不同，选自己熟悉的即可（这有个坑，tensorflow目前不支持python3.7及以上的版本，所以建议，直接下载python3.6就ok了）\n点击install for all users，然后路径最好直接放在c盘下面（查找文件夹方便）\n安装的时候注意选择add enviriment variables（这样就不用自己配置环境变量了，美滋滋）\n2.安装pycharm(这个是python的IDE，也可以选用jupyter notebook)\n官网下载pycharm\n激活码 http://idea.imsxm.com\n3.安装numpy，scipy，panadas，matplotlib，sciki-learn等机器学习库\n（在线安装方式）\n1.直接打开windows命令行界面\n2.输入python，启动python编译器\n3.输入pip install +包名（如numpy,scipy,pandas,matplotlib,keras,tensorflow,scikit-learn）,就可以自动安装了\n（离线安装方式，先下载安装包，再安装）\n下载地址:http://www.lfd.uci.edu/~gohlke/pythonlibs/#matplotlib   （库名中带有cp的标识的是版本号，如果python是3.6的，则cp后面数字应该为36）\nNumPy-数学计算基础库：N维数组、线性代数计算、傅立叶变换、随机数等。\nSciPy-数值计算库：线性代数、拟合与优化、插值、数值积分、稀疏矩阵、图像处理、统计等。\nPandas-数据分析库：数据导入、整理、处理、分析等。\nmatplotlib-会图库：绘制二维图形和图表\nscikit-learn:Simple and efficient tools for data mining and data analysis\nAccessible to everybody, and reusable in various contexts\nBuilt on NumPy, SciPy, and matplotlib\nOpen source, commercially usable - BSD license\n安装如下：\n在第一步安装好的文件夹python中，新建一个Scripts的文件夹\n把下载的五个类库放到该文件夹中\n打开windows命令行，用命令行定位到该文件夹：cd c:\\python36\\Scripts\n按顺序安装五个类库，安装命令为：pip install +下载的类库名字；如果想卸载的话，命令为：pip uninstall+下载的类库名字\n4.用pycharm跑程序，测试是否安装成功\n# Code source: Jaques Grobler\n# License: BSD 3 clause\n#linear_model\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn import datasets, linear_model\nfrom sklearn.metrics import mean_squared_error, r2_score\n# Load the diabetes dataset\ndiabetes = datasets.load_diabetes()\n# Use only one feature\ndiabetes_X = diabetes.data[:, np.newaxis, 2]\n# Split the data into training/testing sets\ndiabetes_X_train = diabetes_X[:-20]\ndiabetes_X_test = diabetes_X[-20:]\n# Split the targets into training/testing sets\ndiabetes_y_train = diabetes.target[:-20]\ndiabetes_y_test = diabetes.target[-20:]\n# Create linear regression object\nregr = linear_model.LinearRegression()\n# Train the model using the training sets\nregr.fit(diabetes_X_train, diabetes_y_train)\n# Make predictions using the testing set\ndiabetes_y_pred = regr.predict(diabetes_X_test)\n# The coefficients\nprint('Coefficients: \\n', regr.coef_)\n# The mean squared error\nprint(\"Mean squared error: %.2f\"\n% mean_squared_error(diabetes_y_test, diabetes_y_pred))\n# Explained variance score: 1 is perfect prediction\nprint('Variance score: %.2f' % r2_score(diabetes_y_test, diabetes_y_pred))\n# Plot outputs\nplt.scatter(diabetes_X_test, diabetes_y_test,  color='black')\nplt.plot(diabetes_X_test, diabetes_y_pred, color='blue', linewidth=3)\nplt.xticks(())\nplt.yticks(())\nplt.show()\n如果安装成功，运行结果图如下："}
