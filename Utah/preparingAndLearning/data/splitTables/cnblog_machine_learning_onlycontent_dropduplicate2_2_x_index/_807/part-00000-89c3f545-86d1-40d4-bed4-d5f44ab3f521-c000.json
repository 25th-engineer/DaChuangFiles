{"content2":"谁会成为AI 和大数据时代的第一开发语言？\n这本已是一个不需要争论的问题。如果说三年前，Matlab、Scala、R、Java 和 Python还各有机会，局面尚且不清楚，那么三年之后，趋势已经非常明确了，特别是前两天 Facebook 开源PyTorch 之后，Python 作为 AI 时代头牌语言的位置基本确立，未来的悬念仅仅是谁能坐稳第二把交椅。\n学习Python之路其修远兮，能否跨进时下最热的人工智能领域，无疑学好Python是通往高薪的捷径之路。\n《Python核心编程 第3版》\n（点击链接，即可下载）\n畅销经典的Python基础教程学习手册进阶图书\n兼顾Python2和Python3\n机器学习 数据处理 网络爬虫热门编程语言\nPython开发人员的案头常备\n编辑推荐\n全面涵盖当今应用开发中的众多领域为中级Python开发人员提供杰出实践方法涵盖大量实用的代码案例每章末尾的习题有助于巩固所学知识\n想进一步提升Python编程水平？请深入分析真实应用程序中使用的大量相关主题涵盖了正则表达式、Internet/网络编程、GUI、SQL/数据库/ORM、多线程、Web开发了解当前的开发区域，比如Google 、Twitter、MongoDB、OAuth、Python 3迁移、Java/Jython囊括有关Django、Google App Engine、CSV/JSON/XML和Microsoft Office的全新内容。包含Python 2和Python 3代码，以便立即可以使用提供了代码片段、互动案例和实用练习，旨在巩固Python技能\n《Python编程快速上手让繁琐工作自动化》\n（点击链接，即可下载）\n美亚畅销Python编程入门图书\nPython3实战指南\n带你快速实现Python高效编程\n编辑推荐\n美亚畅销Python编程图书，帮助你通过编程快速实现工作自动化在本书中，你将学习利用Python编程，在几分钟内完成手工需要几小时的工作，而事先却无需具备编程经验。一旦掌握了编程的基础知识，你就可以毫不费力地创建Python 程序，完成高效的自动化工作，包括：\n● 在一个文件或多个文件中搜索文本；\n● 创建、更新、移动和重命名文件和文件夹；\n● 搜索网页和下载的在线内容；\n● 在任意大小的Excel电子表格中更新和格式化数据；\n● 拆分、合并PDF文件，以及如何加水印和加密；\n● 发送提醒邮件和文本通知；\n● 填写在线表格。本书的作者Al Sweigart是一位杰出Python程序员,他还是《Python 密码学编程》、《Python游戏编程快速上手》和《Python 和Pygame 游戏开发指南》的作者。\n《“笨办法”学Python(第3版)》\n（点击链接，即可下载）\n尽享5小时的完整视频教程\n跟着数十万人的Python导师学Python编程入门基础教程\n为Web开发实战 数据分析打下坚实基础\n编辑推荐\nZed Shaw完善了这个堪称世上*好的Python学习系统。只要跟着学习，你就会和迄今为止数十万Zed教过的初学者一样获得成功。\n在这本书中，你将通过完成52个精心设计的习题来学会Python。阅读这些习题，把习题的代码精确地写出来（禁止复制和粘贴！），修正你的错误，观察程序的运行。在这个过程中，你将了解软件是如何工作的，好的程序看起来是什么样子，怎样阅读、编写、思考代码，以及如何用专业程序员的技巧来找出并修正错误。*重要的是，你将学到下面这些编写优秀的Python软件必需的初始技能。\n这本书会让你的每一分钟投入都有回报。Python是世界上*强大、*受欢迎的编程语言之一，很快你就会成为一名Python程序员。\n你还可以看Zed的视频！随书附赠的DVD中包含5个多小时激情挥洒的教学内容：一部完整的Python视频教程！\n《像计算机科学家一样思考Python 第2版》\n（点击链接，即可下载）\n学会像计算机科学家一样思考 轻松学Python\n编辑推荐\n· 如果想要学习如何编程，从Python语言入手是一个很好的开端。本书从基本的编程概念开始，一步步引导读者了解Python语言，再逐渐掌握函数、递归、数据结构和面向对象设计等高阶概念。本书第2版及其辅助代码均已升级，支持Python 3。每章后的练习可以帮助读者加深对刚学的编程概念的理解。本书是高中和大学阶段的学生、自学者，以及需要了解编程基础的专业人士的理想读物。初学者可以在浏览器中学习如何开始Python编程。\n· 从基础开始，包括语言的语法和语义。\n· 掌握每一个编程概念的清晰定义。\n· 循序渐进地学习值、变量、语句、函数和数据结构。\n· 了解如何操作文件和数据库。\n· 理解对象、方法和面向对象编程。\n· 使用各种调试技巧来修复语法错误、运行时错误和语义错误。\n· 通过一系列案例研究来探索函数、数据结构和算法。本书的示例代码均在GitHub仓库中维护，读者很容易下载和修改。\n《Python高级编程 第2版》\n（点击链接，即可下载）\nPython进阶教程 机器学习人工智能深度学习开发热门编程语言 web开发与后端工程师参考指南 基于Python3.5撰写\n编辑推荐\nPython是一门动态编程语言，它简单而又强大，适用于众多领域。尽管编写Python代码比较容易，但是编写高效且易于维护和复用的代码是一个挑战。\n本书的重点是让你熟悉zui佳实践、有用的工具以及标准，这都是Python专业人士每天使用的。\n首先，你将了解Python 3.5中新增加的功能以及可以提高生产力的快速技巧。接下来，你将学习使用这个新版本中的高-级且有用的Python语法元素，以及实现元编程的不同方法。本书讲解了代码管理工具、编写清晰文档的方法和测试驱动开发，这些都是编写代码的重要因素。通过学习优化的一般原则、查找瓶颈的策略以及应用优化的选定工具，你可以对如何编写高效的代码有更深入的理解。读完本书后，你会成为一名可以编写高效且可维护代码的专家。 通过阅读本书，你将能够： 了解在Python社区中广泛采用的约定和zui佳实践； 高效打包Python代码，以便将其应用于社区和生产； 应用在远程系统上自动化部署代码的简单且轻量的方法；提高代码的质量、可靠性及性能； 在Python中编写并发代码； 使用其他语言编写的代码来扩展Python。\n《精通Python自然语言处理》\n用Python开发令人惊讶的NLP项目自然语言处理任务\n掌握利用Python设计和构建给予NLP的应用的实践\n编辑推荐\n自然语言处理（NLP）是有关计算语言学与人工智能的研究领域之一。NLP主要关注人机交互，它提供了计算机和人类之间的无缝交互，使得计算机在机器学习的帮助下理解人类语言。本书详细介绍如何使用Python执行各种自然语言处理（NLP）任务，并帮助读者掌握利用Python设计和构建基于NLP的应用的zui佳实践。本书引导读者应用机器学习工具来开发各种各样的模型。对于训练数据的创建和主要NLP应用的实现，例如命名实体识别、问答系统、语篇分析、词义消歧、信息检索、情感分析、文本摘要以及指代消解等，本书都进行了清晰的介绍。本书有助于读者使用NLTK创建NLP项目并成为相关领域的专家。 通过阅读本书，你将能够:\n● 实现字符串匹配算法以及标准化技术；\n● 实现统计语言建模技术；\n● 深刻理解词干提取器、词形还原器、形态分析器以及形态生成器的开发；\n● 开发搜索引擎并实现词性标注和统计建模（包含n-gram方法）等相关概念；\n● 熟悉诸如树型库建设、CFG建设、CYK以及Earley线图解析算法等相关概念；\n● 开发基于NER的系统并理解和应用情感分析的相关概念；\n● 理解并实现信息检索和文本摘要等相关概念；\n● 开发语篇分析系统以及基于指代消解的系统。\n《Python机器学习实践指南》\n直接上手的教学内容\n身临其境的写作风格\n轻松掌握机器学习实战知识\n应用高级机器学习方法解决日常问题\n编辑推荐\n机器学习正在迅速成为数据驱动型世界的一个bi备模块。许多不同的领域，如机器人、医学、零售和出版等，都需要依赖这门技术。通过阅读Python机器学习实践指南 ，你将学习如何一步步构建真实的机器学习应用程序。 Python机器学习实践指南以通俗易懂，简洁明了的方式，教你如何使用机器学习来收集、分析并操作大量的数据。通过易于理解的项目，本书讲解如何处理各种类型的数据、如何以及何时应用不同的机器学习技术，包括监督学习和无监督学习。本书中的每个项目都同时提供了教学和实践，你将学习如何使用聚类技术来发现低价的机票，以及如何使用线性回归找到一间便宜的公寓。\nPython机器学习实践指南\n适合的读者包括了解数据科学的Python程序员、数据科学家、架构师，以及想要构建完整的、基于Python的机器学习系统的人们。 通过阅读Python机器学习实践指南 ，你将能：\n·了解Python机器学习的生态系统；\n·了解如何执行线性回归；\n·机器视觉概念的介绍； ·高级数据可视化技术；\n·如何使用第三方API，部署机器学习模型； ·时间序列的建模技术； ·如何构建无监督模型。\n《用Python写网络爬虫》\n（点击链接，即可下载）\n用Python进行数据处理和数据挖掘的代表著作\n剖析网络爬虫技术的实现原理\n精通Python网络爬虫实战\n编辑推荐\n作为一种便捷地收集网上信息并从中抽取出可用信息的方式，网络爬虫技术变得越来越有用。使用Python这样的简单编程语言，你可以使用少量编程技能就可以爬取复杂的网站。\n《用Python写网络爬虫》作为使用Python来爬取网络数据的杰出指南，讲解了从静态页面爬取数据的方法以及使用缓存来管理服务器负载的方法。此外，本书还介绍了如何使用AJAX URL和Firebug扩展来爬取数据，以及有关爬取技术的更多真相，比如使用浏览器渲染、管理cookie、通过提交表单从受验证码保护的复杂网站中抽取数据等。本书使用Scrapy创建了一个高级网络爬虫，并对一些真实的网站进行了爬取。\n《用Python写网络爬虫》介绍了如下内容：\n通过跟踪链接来爬取网站；\n使用lxml从页面中抽取数据；\n构建线程爬虫来并行爬取页面；\n将下载的内容进行缓存，以降低带宽消耗；\n解析依赖于JavaScript的网站；\n与表单和会话进行交互；\n解决受保护页面的验证码问题；\n对AJAX调用进行逆向工程；\n使用Scrapy创建高级爬虫。\n本书读者对象 本书是为想要构建可靠的数据爬取解决方案的开发人员写作的，本书假定读者具有一定的Python编程经验。当然，具备其他编程语言开发经验的读者也可以阅读本书，并理解书中涉及的概念和原理。\n《Python面向对象编程指南》\n（点击链接，即可下载）\n掌握Python面向对象编程的精髓\n构建强大的实际应用程序\n编辑推荐\n本书致力于深入讲解Python语言的高级特性，通过丰富、强大的代码示例为读者循序渐进地讲解如何编写高质量的Python代码。本书可谓是成就Python编程高手的必读之选。本书通过实际的例子对Python中面向对象编程的理念进行介绍。针对所有可用于和Python内置功能进行无缝结合的特殊方法，本书都提供了详细示例，并且介绍了如何使用JSON、YAML、Pickle、CSV、XML、Shelve和SQL来创建持久化对象以及在进程间传输对象。本书还介绍了Logging和Warning模块、单元测试、配置文件以及如何使用命令行。\n本书主要分为3个部分：\n用特殊方法实现Python风格的类；持久化和序列化；测试、调试、部署和维护。\n特殊方法部分又分为：\n初始化方法、基本特殊方法、属性访问、可调用对象、上下文、容器、集合、数值，以及装饰器和mixin类等高级技术。本书示例丰富，通过诸多实际的例子对Python中面向对象编程的理念进行介绍，有利于读者更好地掌握Python的高级特性，编写成更好的实际应用程序。\n《NLTK基础教程 用NLTK和Python库构建机器学习应用》\nNLTK和Python库构建机器学习应用\n编辑推荐\n自然语言处理（NLP）属于人工智能与计算机语言学的交叉领域，处理的是计算机与人类语言之间的交互问题。随着人机交互需求的日益增长，计算机具备处理当前主要自然语言的能力已经成为了一个必然趋势。NLTK正是这一领域中一个强大而稳健的工具包。 在这本书中，我们首先会介绍一些与NLP相关的知识。然后，我们会探讨一些与数据科学相关的任务，通过这些任务来学习如何从零开始构建自定义的标识器和解析器。在此过程中，我们将会深度探索NLP领域的基本概念，为这一领域各种开源的Python工具和库提供具有实践意义的见解。接下来，我们将会介绍如何分析社交媒体网站，发现热门话题，进行舆情分析。zui后，我们还会介绍一些用于处理大规模文本的工具。 在阅读完本书之后，您将会对NLP与数据科学领域中的概念有一个充分的了解，并能将这些知识应用到日常工作中。如果您是NLP或机器学习相关领域的爱好者，并有一些文本处理的经验，那么本书就是为你量身定做的。此外，这本书也是专业Python程序员快速学习NLTK库的理想选择。\n通过本书，你将学会：\n■ 了解自然语言的复杂性以及机器对它们的处理方式。\n■ 如何利用标识化处理手段清理文本歧义，并利用分块操作更好地处理数据。\n■ 探索不同标签类型的作用，并学习如何将句子标签化。\n■ 如何根据自己的需要来创建自定义的解析器和标识器。\n■ 如何构建出具有拼写检查、搜索、机器翻译以及问答系统等功能的实用程序。\n■ 如何通过信息爬取与捕获的手段对相关数据内容进行检索。\n■ 如何通过特性的提取与选取，构建出针对不同文本的分类系统。\n■ 如何使用各种第三方Python库，如pandas、scikit-learn、matplotlib、gensim。\n■如何对社交媒体网站进行分析，包括发掘热门话题、舆情分析等。\n《Python高性能编程》\n深刻理解Python的实现\n让你的Python代码运行的更快\n编辑推荐\nPython代码仅仅能够正确运行还不够，你需要让它运行得更快。通过探索设计决策背后的基础理论，本书帮助你更加深刻地理解Python的实现。你将学习如何找到性能瓶颈，以及如何在大数据量的程序中显著加快代码。 如何利用多核架构或集群的优点？如何构建一个在不损失可靠性的情况下具备可伸缩性的系统？有经验的Python程序员将学到针对这些问题或者其他问题的具体解决方案，以及来自那些在社交媒体分析、产品化机器学习和其他场景下使用高性能Python编程的公司的成功案例。\n通过阅读本书，你将能够：\n■ 更好地掌握numpy、Cython和剖析器；\n■ 了解Python如何抽象化底层的计算机架构；\n■ 使用剖析手段来寻找CPU时间和内存使用的瓶颈；\n■ 通过选择合适的数据结构来编写高效的程序\n■ 加速矩阵和矢量计算；\n■ 使用工具把Python编译成机器代码；\n■ 管理并发的多I O和计算操作；\n■ 把多进程代码转换到在本地或者远程集群上运行；\n■ 用更少的内存解决大型问题。\n“ 尽管Py thon在学术和工业领域很流行， 但人们也经常由于Python程序运行太慢而放弃它。本书通过全面介绍改善优化Python计算速度和可扩展性的策略，从而消除人们的这种误 解。”\n——Jake VanderPlas 华盛顿大学\n《Python物理建模初学者指南》\n# 用Python解决科学问题的实践指南，众多世界知名大学教授推荐阅读 #\n编辑推荐：\n本书旨在帮助Python 学习者掌握足够的Python编程技能以进行物理建模。全书分为8 章和5 个附录，包括Python 基础知识、数据结构与程序控制、数据输入和输出、Python 高级知识和高级技术等，其中贯穿了三次不同方向和难度的物理建模上机实验。附录部分介绍了Python 的安装、错误消息、版本差异以及可供深入学习的话题。\n本书适合Python 初学者阅读，尤其适合想要用Python 进行科学计算和物理建模的读者学习参考。\n以上就是本文的全部内容，希望对大家的学习有所帮助，也希望大家多多支持脚本之家。\n原文链接：https://www.tuicool.com/articles/IZR7niR"}
