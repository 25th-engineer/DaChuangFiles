{"content2":"机器学习 最重要的东西就是算法   这里面的水很深  所以呢我就简单的整理了一下\n基础的操作\n#导入numpy库 as别名 为了怕重名\nimport numpy as np\n# 打印版本号\nprint(np.version.version)\n#声明一个numpy数组 ，一维数组\nnlist = np.array([1,2,3])\nprint(nlist)\n#ndim方法用来查看数组维度\nprint(nlist.ndim)\n# 声明一个二维数组\nnlist_2 = np.array([[1,2,3],[4,5,6]])\nprint(nlist_2)\nprint(nlist_2.ndim)\n#使用shape属性来打印多维数组的形状\nprint(nlist.shape)\nprint(nlist_2.shape)\n#使用size方法来打印多维数组的元素个数\nprint(np.size(nlist))\nprint(np.size(nlist_2))\n#打印numpy多维数组的数据类型\n#打印普通list\nprint(type([1,2,3]))\nprint(type(nlist))\n#使用dtype属性来打印多维数组内部元素的数据类型\nprint(type(123))\nprint(nlist.dtype)\n#itemsize属性，来打印多维数组中的数据类型大小，字节\nprint(nlist.itemsize)\nprint(nlist_2.itemsize)\n#data属性，用来打印数据的缓冲区 buffer\nprint(nlist.data)\n#使用reshape方法来反向生成多维数组 第一个数字是几维数组的，第二个数字是2行，第三个数字是4列\nnlist_3 = np.array(range(24)).reshape((3,2,4))\nnlist_4 = np.array(range(32)).reshape((4,2,4))\nprint(nlist_3)\nprint(nlist_4)\n#使用浮点作为元素类型\nnlist_float = np.array([1.0,2.0,3.0])\nprint(nlist_float.dtype)\n#使用字符串\nnlist_string = np.array(['1','2','3'])\nprint(nlist_string.dtype)\n#四维数组\nnlist_4 = np.array(range(20)).reshape((5,2,2,1))\nprint(nlist_4)\nprint(nlist_4.ndim)\n#声明一个size为20的四维数组\nnlist_4 = np.array(range(20)).reshape((1,2,5,2))\nprint(nlist_4)\n#声明一个3*3的数组\nnlist_33 = np.array([[1,2,3],[4,5,6],[2,3,6]])\n#属性\nprint(nlist_33)\nprint(nlist_33.shape)\nprint(nlist_33.ndim)\nprint(nlist_33.size)\n#方法\nprint(np.size(nlist_33))\nprint(np.shape(nlist_33))\nprint(np.ndim(nlist_33))\n#自动生成元素为1的多维数组，使用ones方法\nnlist_ones = np.ones((4,4))\nprint(nlist_ones)\nprint(nlist_ones.dtype)\n#使用zeros来生成元素为0的多维数组\nnlist_zeros = np.zeros((4,4))\nprint(nlist_zeros)\nprint(nlist_zeros.dtype)\n#使用empty方法来生成随机多维数组 使用第二个参数来指定数据类型\nnlist_empty = np.empty([2,2],dtype=np.int)\nprint(nlist_empty)\nprint(nlist_empty.dtype)\n#把普通list转换为数组\nx = [1,2,3]\nx= [(1,2,3),(4,5)]\nprint(np.ndim(x))\nprint(np.shape(x))\nprint(type(x))\nnlist = np.asarray(x)\nprint(type(nlist))\nprint(nlist.ndim)\nprint(nlist.shape)\n#frombuffer 通过字符串(buffer内存地址)切片来生成多维数组\nmy_str = b'Hello World'\nnlist_str = np.frombuffer(my_str,dtype='S1')\nprint(nlist_str)\nx = np.array([[1,2],[3,4]])\nprint(x)\n#指定axis属性可以指定当前多维数组的维度 axis=0 列级相加 ,keepdims=True 保持维度\nsum0 = np.sum(x,axis=0,keepdims=True)\nprint(sum0)\n# axis = 1 行级相加\nsum1 = np.sum(x,axis=1,keepdims=True)\nprint(sum1)\n#多维数组赋值\nx = np.array([1,2])\ny = x.copy()\ny[0] = 3\n# x[0] = 3\nprint(x)\n#维度级的运算\na = np.array([[1,2],[3,4],[5,6]])\nb = np.array([[10,20],[30,40],[50,60]])\n#使用vstack方法 列级添加\nsuma = np.vstack((a,b))\nprint(suma)\n#hstack方法 行级添加\nsumb = np.hstack((a,b))\nprint(sumb)\n#多维数组的调用\nnlist = np.array([[1,2],[3,4],[5,6]])\n#取元素4\nprint(nlist[1][1])\n#第二种写法\nprint(nlist[1,1])\nnlist[2][1] = 7\nprint(nlist)\n#删除方法 delete\n#删除nlist第二行\nnlist = np.delete(nlist,1,axis=0)\nprint(nlist)\nnlist = np.delete(nlist,0,axis=1)\nprint(nlist)\n这些只是一部分基础方法和算法\n想学的精的话只能自己慢慢摸索了 ，  胜利就在前方 ，加油！！"}
