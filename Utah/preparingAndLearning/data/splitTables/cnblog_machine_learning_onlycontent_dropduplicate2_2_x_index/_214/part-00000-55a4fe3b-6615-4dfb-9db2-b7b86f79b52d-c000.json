{"content2":"上篇之后，被大家喷到不行，还是有点意外，本以为园子里的都是传统信息系统的人，一帮老人瞎捧场，发出来就是自娱自乐和自我鼓励，没想到还有业内的人，也有很多想真正学习和从业人工智能的同学。\n喷点我总结了下，有两个：学习方法不对，书选的不对；学习态度不端正，不尊重这个行业，文风也有点问题。总体感觉有点像“崔永元谈转基因”、“农民科学家谈哥德巴赫猜想”。这两个问题都是大是大非的问题，所以可能需要说明一下。\n书选的不对：主要喷的倒不是说我选的书是垃圾，都是一些国外的经典的教材和理论大部头，主要喷点在这些书太难啃太理论，不适合新手学习。我首先表示理解，如果有个外行在我这个领域，跳出来说要学习信息系统开发得从《微机原理》、《算法导论》、《二十四个设计模式》看起，我也会觉得这是个SB。因为这些理论知识啃起来很难，工作中用到的也不多，特别是架构师以下的技术职位，不懂也不太妨碍在这个行业养家糊口。所以我解释一下，第一，我不是新手，在我这个领域做架构基本没找到能喷我的人，干货之前发的有，架构完整源码我也给大家分享了，基本开始捧场的都是那时候的朋友。这些基础理论对做架构师及要带团队做出可交付的商业产品的工程化实践中至关重要。我是搞架构出身又是带技术团队的，一上来就参考这些书学起轮不到你们这些崽子喷。第二，我不是原有领域干不下要学这个养家户口，搞深度学习在架构以下级别的待遇和传统信息系统开发的待遇是差不多的，转行没有意义，所以急于在人工智能领域就业做点基础工作的同学确实不适合看我这个系列，隔壁的三个月入门速成班更适合你。另外注意，我写的是参考书目，不是推介书目！\n学习态度不端正，文风有问题，这个问题更严重，直指一个技术人员治学的态度和素质。是以学术风格写，还是以大话风格写这个系列，我其实做过慎重的思考。首先我对大家的喷也表示理解，对于人工智能这种前沿科学和新兴工程实践，一个外行，上来就用狗屎狗尿的讲一些看似没用的导论,又没有代码之类的所谓干货呼应，确实像个哗众取宠的SB。\n这块说起来有点麻烦，但既然你们喷的这么厉害，不妨容我解释下，任何一门新兴科学和工程实践，掌握扎实的理论概念其实很难，举个搞.net和java都知道的例子，依赖注入（Dependency Injection）和控制反转（Inversion of Control），好像说的是一个意思，你查二手资料也好，看大牛一手paper也好，不一定能搞清楚，你写代码的时候也天天在用，没有深入理解也不碍着啥，如果面试官问你这个问题，有些同学也会觉得面试官在故意刁难，在装。但你抄手做架构的时候问题就来了，Repository层的接口是放在Repository层还是Domain层很多人靠直觉去做就搞错了，而且就算错了一般的业务逻辑处理问题也不大，但业务逻辑一开始复杂，问题就来了，你根本找不到问题出在哪，就算醒悟了，再改，这时候整个团队已经做了一阵了，成本太高，承受不起。\n所以，虽然这个系列我是自娱自乐，在治学严谨方面我是非常注意的，也下了些功夫，其中讲的概念和知识点都没有可喷的。拿上篇的内容举例，原文是这样的：\n【上篇我们讲到在machine learning之前基本都是靠hand-crafted rules去实现所谓人工智能。这部分太简单，一般教科书都是以“我们都知道...”一笔带过，这无疑给不知道的同学带来一记重拳！】\n其实很多教科书在导论中并没有所谓“一笔带过”，都举了一些例子来说明。如果你们有人找到了这个喷点，我也算服，然而并没有人指出来。\n很多导论中例举的项目都带有较深学术历史背景，别说非专业的看不懂，就是本专业的，只要不是长期搞学术的，你能真正看懂？有的简单入门就会用一个IF去说明,有的教材又用知识库（实际书里只写了项目名）举例，这就不是简单的IF，数据库原理没学的就不容易理解，还有一些很偏门的，但本质上是IFS。\n再比如人工智能、机器学习、深度学习之间的关系，大多教材都用一个大图把很多后面的东西表达出来，砸一看肯定是蒙逼的。其实如果是纯小白没有往后学，手段和方法光从字面看就不太好搞之间清楚关系。\n之前涉及到的每个知识点都是这样，一个知识点同时查至少5个资料或教材，深思熟虑写的。文风主要还是为了消除学习的恐惧感，学术风格要说的东西太多，一看就蒙了。网上也有类似的大话，但基本都不严谨的，有些概念是混淆模糊或过于简单化。所以虽然是大话文风，但并不代表我写的东西是不严谨。\n最后，书不尽言 言不尽意，你看到的是只有狗屎狗尿还是其中的知识点，这个我也没办法。"}
