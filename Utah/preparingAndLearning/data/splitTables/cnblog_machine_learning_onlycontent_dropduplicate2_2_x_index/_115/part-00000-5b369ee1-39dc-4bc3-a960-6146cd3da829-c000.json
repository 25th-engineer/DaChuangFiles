{"content2":"TensorFlow简介：\n在使用TensorFlow之前我们要了解TensorFlow是什么，如果喜欢看视频的同学，可以看2017年8月6号谷歌大脑资深研究员刘小兵在极客公园Rebuild大会上的演讲。\n接下来让我们用文字谈谈TensorFlow。//所有事物进行数字化//机器迁就与人 或者反而\n首先谈谈人工智能，首先看看以前的机器能做什么？我给机器一个指令，机器按我的想法去做，不会超出我的期望，也不会违背。而我们现在的人工智能也还是在做这一件事，我给它算法，它按照算法一步一步的执行，判断。但现在的与之前的有什么区别呢？重点是它现在可以对某件事给出它的意见，而这件事我们之前可能未曾发觉，比如某些病症的初期症状检测，物品推荐算法等等。\n人们常说，学习一样事情最好的方法是把它教给别人，在我们在教机器学习的时候，其实我们也在思索我们本身所使用的方式。即当我们在说话时，我们在说什么，我们在画画时，我们在画什么？当我在写这篇文章的时候，我在写什么？如果我不清楚一件事情，我是很难鞭辟入里地解释清楚的。\n在说完人工智能后，我们再谈谈机器学习。机器学习是人工智能的子集。换而言之，机器学习是实现人工智能的一种方式，搞清了关系，首先我们来给机器学习一个定义，引用Herbert A. Simon的一段话，“如果一个系统能够通过执行某个过程改进它的性能，这就是学习“。实质上就是一个学习总结，进行校正，长经验的过程。所有只要用机器可以实现这样想法的都可以称之为机器学习，就是让机器具有从数据中抽取信息，并归纳信息讲了什么，可以想想我们在上学时是怎么学习的？语文中的阅读理解部分是否和这个场景很相似呢？而要实现机器学习，那么第一件事便是让计算机认识数据，我们平常说的话，画的图像，计算机是不认识的，那么要让计算机去学习，这些语音，图画作为信息载体的东西，就需要让计算机进行辩解，这也是现在我们所在做的计算机视觉(computer vision)简称CV，自然语言处理(Natural Language Processing)简称NLP ，声纹识别(Voice Print Recognition )简称VPR，让计算机能看，能听，并且能判别是谁说的。\n在现在的时代，如果我们谈到机器学习，那深度学习是必然绕不过去，深度学习又是机器学习的一个子集，是实现机器学习的一种方法。引用wikipedia的一段话“一类通过多层非线性变换堆对高复杂性数据建模算法的合集”。深度学习的深度基本上就是指其中的多层，不断矫正，不断逼近正确答案。具体的以后文章详细介绍，这里先进行概念的梳理。\n而TensorFlow就是这样一个平台，我们可以用用其提供的方法对所设计的模型进行训练，实现自己的想法。也支持分布式计算，并且已经开源，我们可以对其进行源码的学习。\nTensorFlow的安装\nTensorFlow支持C++,Python语言，因其对Python语言支持的最为全面，因此我在以后的学习中选择Python语言，（Python语言也是这样在实践中进行学习）\n下载python环境安装后，确保自己安装了python的包管理工具--pip .方法是打开命令行，敲入pip，如果提示找不到该命令，则未安装或者在安装Python的时候，没有将python的命令添加进系统变量。在确保pip安装后，\n# python2 用 pip   python3  用 pip3\n在命令行键入  pip/pip3  install --upgrade tensorflow\n等待命令执行完后，安装就完成了。\nTensorFlow的简单使用\n在安装完成之后，首先介绍TensorFlow中的基本概念。\n在TensorFlow中，所有的运算是以图的形式进行组织的，节点是运算，边是依赖关系。\n以下是实例程序：\nimport tensorflow as tf\na = tf.constant([1.0, 2.0], name= \"a\")\nb = tf.constant([2.0, 3.0], name= \"b\")\nresult = a + b\nsess = tf.Session()\nsess.run(result)\n#结果为array([3., 5.], dtype= float32)\n后边文章通过例子来实践，来推理机器算法的得出。提高自己的算法能力。"}
