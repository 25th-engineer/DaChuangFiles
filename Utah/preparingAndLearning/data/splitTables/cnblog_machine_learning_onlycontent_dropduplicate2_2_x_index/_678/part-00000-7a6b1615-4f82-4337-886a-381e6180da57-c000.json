{"content2":"根据吴恩达机器学习教程总结，在matlab、octave均可使用\nMatlab进行标量运算\n>> 5 + 5\nans =\n10\n>> 6 * 2\nans =\n12\n>> 3^2\nans =\n9\n>> 3/2\nans =\n1.5000\n变量赋值\n>> a = 3\na =\n3\n赋值语句后面加; 可以不输出结果\n>> q = 3;\n>> q\nq =\n3\n字符输入时必须是单引号\n>> b ='hi';\n>> b\nb =\nhi\n并 或 运算\n>> 1 && 0\nans =\n0\n>> 1||1\nans =\n1\n比较语句\n>> 2 > 3\nans =\n0\n输出字符串\n>> a =pi\na =\n3.1416\n>> disp(a)\n3.1416\n>> disp(sprintf('2 decimals: %0.2f',a))\n2 decimals: 3.14\n>> sprintf('hi')\nans =\nhi\n矩阵表示：\n>> A = [1 2;3 4]\nA =\n1     2\n3     4\n向量表示\n>> V = [1;2;3]\nV =\n1\n2\n3\n从 1 开始 到2 终止步长为0.1的行向量\n>> V = 1:0.1:2\nV =\n1.0000    1.1000    1.2000    1.3000    1.4000    1.5000    1.6000    1.7000    1.8000    1.9000    2.0000\n1X2 全为1 矩阵\n>> ones(1,2)\nans =\n1     1\n2X2全为0矩阵\n>> zeros(2,2)\nans =\n0     0\n0     0\n随机1X3 的矩阵\n>> rand(1,3)\nans =\n0.8147    0.9058    0.1270\n对角线为全为1 的单位矩阵\n>> eye(4)\nans =\n1     0     0     0\n0     1     0     0\n0     0     1     0\n0     0     0     1\nhelp 查看内置函数的用法\n>> help eye\neye Identity matrix.\neye(N) is the N-by-N identity matrix.\neye(M,N) or eye([M,N]) is an M-by-N matrix with 1's on\nthe diagonal and zeros elsewhere.\neye(SIZE(A)) is the same size as A.\neye with no arguments is the scalar 1.\neye(..., CLASSNAME) is a matrix with ones of class specified by\nCLASSNAME on the diagonal and zeros elsewhere.\neye(..., 'like', Y) is an identity matrix with the same data type, sparsity,\nand complexity (real or complex) as the numeric variable Y.\nNote: The size inputs M and N should be nonnegative integers.\nNegative integers are treated as 0.\nExample:\nx = eye(2,3,'int8');\nSee also speye, ones, zeros, rand, randn.\neye 的参考页\n名为 eye 的其他函数\n判断矩阵的形状\n>> size(a)\nans =\n1     1\n>> size(A,1)\nans =\n2\n>> v = [1 2 3 4]\nv =\n1     2     3     4\n>> size(v)\nans =\n1     4\n>> length(v)\nans =\n4\n显示当前工作目录（与Linux较为相似）\n>> pwd\nans =\nC:\\Program Files\\MATLAB\\R2016a\n进入某一目录\n>> cd 'C:\\Users\\scz\\Desktop'\n>> pwd\nans =\nC:\\Users\\scz\\Desktop\n显示当前目录下所有文件\n>> ls\n.\n..\n1.docx\n123\n读入文件，并保存到变量中\n>> load('loldata.csv')\n>> loldata\nloldata =\n7.0000    5.0000    2.0000    0.9329   28.7941    5.9861    4.5984\n2.0000    1.0000    3.0000    0.4512    2.5701    0.9661    1.2014\n7.0000    5.0000    3.0000    0.8364   21.6821    6.0617    3.8332\n19.0000    2.0000    1.0000    1.0947   36.3245   12.7096    3.7969\n4.0000    2.0000    4.0000    0.8193   19.6814    2.3778    1.3344\n2.0000    9.0000    2.0000    0.7157   14.4339    3.3351    6.3405\n0   10.0000    6.0000    0.7573   12.3280    2.1769    5.3543\n8.0000    5.0000    1.0000    0.9012   20.2787    5.1798    3.9495\n3.0000    7.0000    1.0000    0.7876   10.5917    2.2607    6.4620\n1.0000    8.0000    4.0000    0.6336    5.9939    1.8080    5.9950\n>> size(loldata)\nans =\n10     7\n显示当前所有变量\n>> who\n您的变量为:\nA        V        a        ans      b        c        loldata  q        v\n所有变量具体信息\n>> whos\nName          Size            Bytes  Class     Attributes\nA             2x2                32  double\nV             1x11               88  double\na             1x1                 8  double\nans           1x2                16  double\nb             1x2                 4  char\nc             1x1                 8  double\nloldata      10x7               560  double\nq             1x1                 8  double\nv             1x4                32  double\n保存变量到文件中\n>> save hello.mat v;\n矩阵运算\n>> A = [1 2; 3 4 ; 5 6]\nA =\n1     2\n3     4\n5     6\n>> C = [1 1 ; 2 2]\nC =\n1     1\n2     2\n>> A  *  C\nans =\n5     5\n11    11\n17    17\n注意A 后面有空格，.是对矩阵中所有元素进行位运算\n>> A .^ 2\nans =\n1     4\n9    16\n25    36\n>> A + 1\nans =\n2     3\n4     5\n6     7\n>> A\nA =\n1     2\n3     4\n5     6\n矩阵的转置\n>> A'\nans =\n1     3     5\n2     4     6\n没一列中所有最大元素\n>> max(A)\nans =\n5     6\n>> [VAL,IND] = max(A)\nVAL =\n5     6\nIND =\n3     3\n矩阵的比较运算\n>> A < 3\nans =\n1     1\n0     0\n0     0\n所有元素中符合条件位置\n>> find(A < 3)\nans =\n1\n4\n>> a = magic(4)\na =\n16     2     3    13\n5    11    10     8\n9     7     6    12\n4    14    15     1\n>> [r,c] = find(A < 3)\nr =\n1\n1\nc =\n1\n2\n>> a = [1 2 3 4]\na =\n1     2     3     4\n>> sum(a)\nans =\n10\n>> prod(a)\nans =\n24\n>> a = [1 2 3 4;1 3 4 5]\na =\n1     2     3     4\n1     3     4     5\n求和默认是列\n>> sum(a)\nans =\n2     5     7     9\n>> sum(a,1)\nans =\n2     5     7     9\n求积\n>> prod(a)\nans =\n1     6    12    20\n>> floor(a) %向下四舍五入\nans =\n1     2     3     4\n1     3     4     5\n>> ceil(a) %向上四舍五入\nans =\n1     2     3     4\n1     3     4     5\n>> max(rand(3),rand(3))\nans =\n0.9572    0.2785    0.9649\n0.6324    0.5469    0.9595\n0.8003    0.9575    0.9706\n>> A(:)\nans =\n1\n3\n5\n2\n4\n6\n调换方向\n>> flipud(eye(9))\nans =\n0     0     0     0     0     0     0     0     1\n0     0     0     0     0     0     0     1     0\n0     0     0     0     0     0     1     0     0\n0     0     0     0     0     1     0     0     0\n0     0     0     0     1     0     0     0     0\n0     0     0     1     0     0     0     0     0\n0     0     1     0     0     0     0     0     0\n0     1     0     0     0     0     0     0     0\n1     0     0     0     0     0     0     0     0\n求矩阵的拟\n>> pinv(a)\nans =\n1.3333   -1.0000\n-1.6667    1.3333\n-0.3333    0.3333\n1.0000   -0.6667\n>> D = [0:0.01:0.98]\n>> y1 = sin(2*pi*4*D)\n>> plot(D,y2,'r')\n>> xlabel('time')\n>> ylabel('value')\n>> legend('sin','cos')\n>> title('my plot')\n>> print -dpng 'myplot.png'\n>> subplot(1,2,1)\n>> plot(D,y1)\n>> subplot(1,2,2)\n>> plot(D,y2)\n>> clf\n>> A = magic(5)\nA =\n17    24     1     8    15\n23     5     7    14    16\n4     6    13    20    22\n10    12    19    21     3\n11    18    25     2     9\n>> imagesc(A)\n>> imagesc(A)\n>> imagesc(A),colorbar,colormap gray\n循环语句 判断语句\n>> for i=1:10,\nv(i)=2^(i);\nend;\n>> v\nv =\n2\n4\n8\n16\n32\n64\n128\n256\n512\n1024\n>> while true,\ni =1;\nv(i) = 100;\nif i <=6,\nbreak;\nend;\nend;\n>> v\nv =\n100\n4\n8\n16\n32\n64\n128\n256\n512\n1024"}
