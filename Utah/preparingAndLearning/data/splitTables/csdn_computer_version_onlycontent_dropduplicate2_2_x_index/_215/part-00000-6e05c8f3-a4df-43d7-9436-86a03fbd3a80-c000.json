{"content2":"多方搜寻，继续总结，考的范围不所谓不广。。。\n- 存储一张大小为1024*1024,512个灰度级的图像，需要（）bit A\nA. 8M\nB. 32M\nC. 16M\nD. 64M\n首先\n1024∗1024=220,512=29\n1024*1024=2^{20}, 512=2^9 ，那么存储这样一幅图需要\n1024∗1024∗9\n1024*1024*9 bit =9Mbit，近似计算得8Mbit\n金字塔分解融合法属于（）融合法 C\nA. 决策级\nB. 无法判断\nC. 数据级\nD. 特征级\n图像融合层次由低到高分为四个层次：信号级、数据级、特征级、决策级\n信号级融合，对未经处理的传感器输出在信号域进行混合，产生一个融合后的信号。\n数据级融合又称像素级融合，包括空间域算法和变换域算法，空间域算法中又有多种融合规则方法，如逻辑滤波法，灰度加权平均法，对比调制法；变换域中又有金字塔分解融合法，小波变换法。\n在特征级融合中，保证不同图像包含信息的特征，从源图像中将特征信息提取出来，这些特征信息是观察者对源图像中目标或感兴趣的区域，如边缘、人物、建筑或车辆等信息，然后对这些特征信息进行分析、处理与整合从而得到融合后的图像特征。\n决策级图像融合是以认知为基础的方法，它不仅是最高层次的图像融合方法，抽象等级也是最高的。\n有如下两个列表list1=[2,3,6,8], list2=[5,6,10]则执行list(list1+list2)的结果是： C\nA [2,3,5,6,6,8,10]\nB 编译错误\nC [2,3,6,8,5,6,10]\nD [2,3,5,6,8,10]\n直接是列表合并，元素直接合并\n一个有131个元素的顺序表，插入一个新元素并保持原来的顺序不变，平均要移动（）个元素，删除一个元素平均需要移动（）个元素 D\nA. 67,66\nB. 65,64\nC. 9,8\nD. 65.5, 65\n对于由n个元素组成的顺序表，插入新元素平均移动的个数可以如此计算：\n当插在首端时需要移动n个元素，当插在尾端时需要移动0个元素，因此平均移动个数为((n)/2)\n当删除首端元素时需要移动个数是（n-1）个，当删除尾端元素时需要移动个数是0个，因此平均移动个数为(n-1)/2\n下面的程序要求用户输入二进制数字0/1并显示之，请找出程序中的错误（） B\nbit=input(“Enter a binary digit:”)\nif bit=0 or 1:\nprint “Your input is:”,bit\nelse:\nprint “Your input is invalid”\nA. 1\nB. 2\nC. 3\nD. 4\n唉。。。没学过python的人，一看见python就吓尿了，用python跑了一看应该是bit==0 or 1\n一个待散列线性表位K=(27,18,66,57,36,79,94,41),散列函数为H(k)=k mode 13,与27发生冲突的元素有（）个 C\nA. 1\nB. 4\nC. 3\nD. 2\nH(27)=1\nH(18)=5\nH(66)=1\nH(57)=5\nH(36)=10\nH(79)=1\nH(94)=3\nH(41)=2\n下列程序的运行结果是（） C\n#include <stdio.h> void f(int *p) {p[0]=*(p+2);} main(){ int a[10]={1,2,3,4,5,6,7,8,9,0}; for(i=3;i>=0;i--)f(a+i); for(i=0;i<10;i++)printf(\"%d\",a[i]); printf(\"\\n\"); }\nA. 4 4 4 4 5 6 7 8 9 0\nB. 5 5 5 5 5 6 7 8 9 0\nC. 5 6 5 6 5 6 7 8 9 0\nD. 3 3 3 4 5 6 7 8 9 0\n耐心算一下就可以，但是没时间了。。。后面的题做的太烂了\n以下程序\n这里写代码片"}
