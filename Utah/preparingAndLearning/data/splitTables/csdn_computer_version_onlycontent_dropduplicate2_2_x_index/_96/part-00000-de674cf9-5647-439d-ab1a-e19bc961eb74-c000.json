{"content2":"一、什么是计算机视觉？\n1. 计算机视觉的定义\n计算机视觉是一门研究如何使机器“看”的科学，更进一步的说，就是指用摄影机和计算机代替人眼对目标进行识别、跟踪和测量等机器视觉的应用。主要用于模拟人类视觉的优越能力和弥补人类视觉的缺陷。\n模拟人类视觉的优越能力：\n识别人、物体、场景\n估计立体空间、距离\n躲避障碍物进行导航\n想象并描述故事\n理解并讲解图片\n弥补人类视觉的缺陷：\n关注显著内容、容易忽略很多细节，不擅长精细感知\n描述主观、模棱两可\n不擅长长时间稳定的执行同一任务\n2. 计算机视觉的两个主要研究维度\n语义感知(Semantic)\n几何属性(Geometry)\n3. 计算机视觉的主要目标\n什么是人工智能（AI）？\n二、计算机视觉的基础及其应用(待细分扩展…….)\n1. 计算机视觉的基础\n数字图像处理\n空域分析及变换（Sobel，拉普拉斯，高斯，中值等）\n频域分析及变换（Fourier & Wavelet Transform）\n模板匹配，金字塔，滤波器组\n特征数据操作：主成分分析/PCA，奇异值分解/SVD，聚类/Cluster\n图像特征及描述\n颜色特征（RBG，HSV，Lab等）\n几何特征（Edge，Corner，Blob等）\n纹理特征（HOG，LBP，Gabor等）\n局部特征（SIFT，SURF，FAST等）\n2. 深度学习在计算机视觉中的应用\n图像分类(Image Classification)\n卷积神经网络CNN\n对应有没有问题？，有的话，给出属于某类概率的多少？\n图像检测(Image Detection)\n区域卷积神经网络R-CNN\n对应目标在哪儿问题？，用矩形框框出目标\n图像分割(Image Segmentation)\n全卷积神经网络FCN\n对应每个像素的类别问题？，用不同颜色画出图像中所有类别的区域轮廓\n图像识别(Image Identification)\n人脸识别、车牌识别、字符识别、行为识别等\n对应内容是什么问题？\n注意它和Image Verification的区别？\n图像描述(Image Captioning)\n迭代神经网络(Vanilla-RNN，LSTM，GRU)\n图像问答(Image Question Answering)\n迭代神经网络RNN\n图像生成(Image Generation)\n生成对抗网络GAN\n3. 图像检索(Content-based Image Retrieval)\n以文搜图、以图搜图、图文联搜，找出语义或图像相似的图片\n三、计算机视觉的主要研究挑战\n视角变化、光照变化、尺度变化、形态变化\n背景混淆干扰、遮挡、类内物体的外观差异\n四、实战环境配置\nwin 10 下使用 win_anaconda3-4.2.0 百度云下载(python3.5) 安装 py-opencv\n从上面云盘链接下载并安装 Anaconda3-4.2.0\n打开 cmd，然后执行conda install -c https://conda.anaconda.org/menpo opencv3\n打开 ipython 测试一下：import cv2 print(cv2.__version__)\nwin 10 下使用 win_anaconda3-4.2.0 百度云下载(python3.5) 安装 TensorFlow\n从上面云盘链接下载并安装 Anaconda3-4.2.0\n打开 cmd，然后执行pip install tensorflow # CPU 版 或 pip install tensorflow-gpu # GPU 版\nUbuntu 下使用 linux_anaconda2-4.3.1 百度云下载(python2.7) 安装 TensorFlow\n按照此教程安装CUDA8.0 和 cuDNN v5.1\n安装 libcupti-dev library，sudo apt-get install libcupti-dev\n使用 Anaconda 创建虚拟环境，激活环境后，根据 Anaconda 中的 Python 版本选择 TF_PYTHON_URL 安装 TensorFLow\n# 创建虚拟环境 conda create -n tensorflow # 激活环境 source activate tensorflow # 根据 Anaconda 中的 Python 版本选择 TF_PYTHON_URL(即 upgrade 后面的链接)，然后安装 TensorFLow pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.1.0-cp27-none-linux_x86_64.whl # 安装完成后，可以打开 ipython 进行验证 >>> import tensorflow as tf >>> hello = tf.constant('Hello, TensorFlow!') >>> sess = tf.Session() >>> print sess.run(hello) Hello, TensorFlow! # 至此，TF 安装成功，当你想离开此环境时，使用以下命令即可 source deactivate\n使用jupyter notebook调用远程服务器，参考此链接中的第三点详细介绍"}
