做工程第一步，确定任务，标注数据；
下图很好的展示了图像识别的四种任务:
1. 图像分类(Image classification)
如图(a), 给定一张输入图像，图像分类的任务是判断该图像属于哪类, 如果是多任务分类, 可以用于分类该图像包含哪个类别。
所以该类任务的标注非常简单, 只需要标注图片的种类即可. 如果是多任务的, 只需要多标注几种图片是否包含某类物品即可;
2. 目标检测(Object localization)
如图(b), 目标定位是在图像分类的基础上, 进一步判断图像中的目标具体在图像的什么位置, 通常是以包围目标的矩形框(bounding box)形式展示. 在目标定位中，通常只有一个或固定数目的目标，而目标检测更一般化，其图像中出现的目标种类和数目都不定。
所以该任务的标注比图像分类多了一些, 首先需要标注图片中包含目标的bbox, 然后标注目标种类; 一张图片可能会有多个bbox.
3. 语义分割(Semantic segmentation)
如图(c), 语义分割是目标检测更进阶的任务，目标检测只需要框出每个目标的包围盒，语义分割需要进一步判断图像中哪些像素属于哪个目标。但是，语义分割不区分属于相同类别的不同实例。例如，当图像中有多只猫时，语义分割会将两只猫整体的所有像素预测为“猫”这个类别。
所以该类任务的标注要求会比bbox的矩形框更精准一些, 需要沿着物体的外轮廓做外切多边形; 这种标注虽然比目标检测略微繁琐, 但是这种标注的数据也能用于目标检测, 因为可以根据外切多边形求得bbox, 然后用于目标检测; 所以现在的图像目标标注多是采用这种外切多边形的标注方法.
4. 实例分割(Instance segmentation)
如图(d), 与此不同的是，实例分割需要区分出哪些像素属于第一只猫、哪些像素属于第二只猫。此外，目标跟踪通常是用于视频数据，和目标检测有密切的联系，同时要利用帧之间的时序关系。
所以该类任务的标注与语义分割要求繁琐一些, 需要标注同类样本的不同个体.
5. 常用的图片标注工具
常用的标注工具有
labelImg： VOC数据集采用的标注工具，github上有很多VOC数据集的解析代码，所以很好用；对于面向github编程的我们来说, 很好使;
via: 标注为csv文件；
labelme: python标注工具模块，为json文件；
参考文章链接：
https://www.zhihu.com/question/36500536/answer/304469552