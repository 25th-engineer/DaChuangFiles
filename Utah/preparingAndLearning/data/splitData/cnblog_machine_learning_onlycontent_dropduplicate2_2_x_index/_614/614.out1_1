本 系列 文章 目前 已经 更新 两期 分别 是   
机器学习 原来如此 有趣 全 世界 最 简单 的 机器学习 入门 
指南   机器学习 原来如此 有趣 如何 故意 欺骗 神经网络 你 
是否 有 注意到 Facebook 最近 开发 了 一个 非同寻常 的 
功能 将 你 照 片中 的 好友 识别 出来 过去 
Facebook 让 你 手动 点击 照片 上 的 好友 输入 
他们 的 名字 然后 加上 标签 现在 只要 你 上传 
一张 照片 Facebook 就会 像 变魔术 一样 为 你 自动 
标记 出 所有 人 这项 技术 就 叫做 人脸识别 在 
你 的 朋友 的 脸 被 标记 了 几次 之后 
Facebook 的 算法 就 可以 识别 他 了 这 是 
一个 让 人 惊艳 的 技术 Facebook 识别 人脸 的 
正确 率 高达 98% 这与 人类 的 表现 差不多 了 
下面 就 让 我们 来 学习 一下 人脸 识别 技术 
是 如何 实现 的 但是 只是 识别 你 的 朋友 
的 脸 就 太 简单 了 我们 可以 最大化 扩展 
这项 技术 来 解决 一个 更 具 挑战性 的 问题 
区分 威尔 法瑞尔 Will Ferrell 著名演员 和 查德 史密斯 Chad 
Smith 著名 摇滚 音乐家 如何 使用 机器学习 来 解决 复杂 
的 问题 人脸识别 由 一个 系列 的 相关 问题 组成 
1 . 首先 查看 一张 照片 并 找出 上面 所有 
的 脸 2 . 将 注意力 放在 每 一张 脸 
上面 即使 这张 脸 被 转到 奇怪 的 方向 或者 
是 光线 不好 的 情况下 也 依旧 是 同一 个人 
3 . 从/p 这张/i 脸上/s 挑出/v 一些/m 特征/n 用于/v 和/c 
其他/r 人/n 区/n 分来/v 比如 像 眼睛 有 多大 脸 
有 多长 等 4 . 最后 将 这张 脸 的 
特征 和 其他 其他 脸 作比较 以 最后 确定 这 
个人 的 名字 作为 一个 人类 你 的 大脑 会 
自动 做 这些 事情 实际上 人类 太 擅长于 识别 人脸 
了 以至于 他们 在 日常 物品 上面 也 会 试图 
去 寻找 脸 好像 是 这样 哦 人们 总是 喜欢 
去 物品 上 找出 练得 形状 并且 觉得 这样 很萌 
计算机 目前 并不 具备 这种 高 水平 的 能力 所以 
我们 需要 一步步 的 教 他们 我们 需要 构建 一个 
流水线 pipeline 我们 将 分别 解决 人脸 识别 的 每一步 
并将 当前 步骤 的 结果 传入 下 一个 步骤 换句话说 
我们 需要 将 几个 机器学习 算法 链 chain 起来 人脸识别 
一步 一步 来 我们 一步 一步 地 解决 这个 问题 
在 每 一个 步骤 中 我们 都将/nr 学习 到 不同 
的 机器学习 算法 我 不会 对 算法 的 每一步 都 
进行 解释 但是 你 可以 学习 到 每一个 算法 的 
主体 思想 以及 如何 在 Python 中 使用   OpenFace 
  和 /nr dlib   来 构建 一个 你 自己 的 
面部 识别系统 第一步 寻找 所有 的 脸 在 我们 的 
流水线 中的 第一步 是 人脸 检测 很 明显 在 我们 
区分 人脸 之前 需要 在 图片 中将 脸 标记 出来 
如果 你 有在/nr 最近 十年 里面 用过 相机 的话 你 
可能 已经 见过 正在 运行 中 的 人脸 检测 了 
面部 识别 是 相机 的 一个 伟大 的 功能 当 
相机 可以 自动 挑出 面部 的 时候 这将/i 确保/v 在/p 
拍/v 照片/n 的/uj 瞬间/t 所有/b 的/uj 脸/n 都/d 对准/n 焦/a 
点了/i 不过 我们 使用 它 是 为了 别的 目的 寻找 
我们 想 在下 一步 要 传递 的 照片 区域 2000年 
年初 的 时候 当 Paul Viola 和 Michael Jones 发明 
了 一种 可以 在 廉价 相机 上面 快速 运行 的 
面部 检测 技术 后 人脸 检测 成为 了 主流 然而 
现在 更 可靠 的 解决 方案 出现 了 我们 现在 
用 的 是 2005年 发明 的 一个 叫做 方向 梯度 
直方图 简称为 HOG 为了 识别 出 图片 中的 脸 首先 
我们 需要 将 图片 转 换为 黑白色 因为 在 识别 
面部 的 时候 我们 不 需要 颜色 数据 然后 我们 
需要 依次 遍历 图 片中 的 每个 像素 对于 单个 
像素 我们 也 需要 看 直接 包围 它 的 其他 
元素 我们 的 目标 是 比较 这 个 像素 与 
周围 像素 的 深度 然后 我们 要 画 一个 箭头 
来 代表 图像 变暗 的 方向 如果 你 对 这个 
图像 中 的 每个 像素 都 重复 这个 过程 最后 
每个 像素 最终 每个 像素 会被 一个 箭头 取代 这些 
箭头 被称为 梯度 gradients 它们/r 能/v 显示/v 出/v 图像/n 上/f 
从明/nr 亮到/v 黑暗/z 的/uj 流动/vn 过程/n 这 看起来 没有 明确 
的 目的 但 其实 这 很有必要 如果 我们 直接 分析 
像素 同一 个人 明暗 不同 的 两张 照片 将 具有 
完全 不同 的 像素 值 但是 如果 只 考虑 亮度 
变化 方向 direction 的话 明暗 图像 将会 有 同样 的 
结果 这 使得 问题 变得 更容易 解决 但是 保存 每个 
像素 的 梯度 太过 细节 化了 我们 最终 很 有可能 
捡了芝麻 丢了 西瓜 如果能 从 更高 的 角度 上 观察 
基本 的 明暗 流动 我们 就 可以 看出 图像 的 
基本 规律 这会 比 之前 更好 为了 做到 这 一点 
我们 将 图像 分割 成 一些 16 × 16 像素 
的 小方块 在 每个 小方块 中 我们 将 计算 出 
每个 主 方向 上 有 多少 个 梯度 有 多少 
指向 上 指向 右上 指 向右 等 然后 我们 将 
用 指向性 最强 那个 方向 的 箭头 来 代替 原来 
的 那个 小 方块 最终 的 结果 是 我们 把 
原始 图像 转换 成了/nr 一个 非常 简单 的 表达 形式 
这种 表达 形式 可以 用 一种 简单 的 方式 来 
捕获 面部 的 基本 结构 原始 图 像被 表示 成了 
HOG 形式 以 捕获 图像 的 主要 特征 无论 图像 
明暗度 如何 为了 在 这个 HOG 图像 中 找到 脸部 
我们 要 所 需要 做 的 就是 找到 我们 的 
图像 中 与 已知 的 一些 HOG 图案 中 看 
起来 最 相似 的 部分 这些 HOG 图案 都是 从 
其他 面部 训练 数据 中 提取 出来 的 使用 这种 
技术 我们 现在 可以 轻松 地 在 任何 图片 中 
找到 脸部 如果 你 想用 Python 和 dlib 亲手 试试看 
这些 代码 显示 了 如何 生成 和 查看 HOG 图像 
第二步 脸部 的 不同 姿势 和 方位 当 当当 我们 
把 图 片中 的 脸部 分离 出来 了 但现在 我们 
要 处理 的 问题 就是 对于 电脑 来说 面朝 不同 
方向 的 同一 张脸是/nr 两个人 人类 可以 很 轻松 地 
识别 出 到 两个 图片 都是/nr 同一 个人 但 电脑 
会 认为 这 两张 图片 是 两个 完全 不同 的 
人 为了 解决 这 一点 我们 将 试图 扭曲 每个 
图片 使得 眼睛 和 嘴唇 总是 在 图像 中 的 
样本 位置 sample place 这将 使 我们 在 接下来 的 
步骤 中 更容易 比较 脸部 之间 的 不同 为此 我们 
将 使用 一种 称为 面部 特征 点估计 face landmark estimation 
的 算法 很多 方法 都 可以 做到 这 一点 但 
这次 我们 会 使用 由   瓦希德 卡奇 米 Vahid 
Kazemi 和 约瑟菲娜 沙利文 Josephine Sullivan 在 2014 年 发明 
的 方法 基本 思路 是 找到 68 个人 脸上 普遍 
存在 的 特征点 landmarks 包括 下巴 的 顶部 每只 眼睛 
的 外部 轮廓 每条 眉毛 的 内部 轮廓 等 接下来 
我们 训练 一个 机器学习 算法 让 它 能够 在 任何 
脸部 找 到这 68 个 特定 的 点 我们 将 
在 每一张 脸上 定位 的 68 个 特征点 这张 图片 
的 作者 是 在 OpenFace 工作 的 卡内基 梅隆 大学 
Ph . D . 布兰 东 阿莫斯 Brandon Amos 这是 
在 测试 图片 上 定位 68 个 特征点 的 结果 
你 也 可以 使用 这 一 技术 来 实现 自己 
的 Snapchat 实时 3D 脸部 过滤器 现在 我们 知道 了 
眼睛 和 嘴巴 在哪儿 我们 将 图像 进行 旋转 缩放 
和错切/nr 使得 眼睛 和 嘴巴 尽可能 靠近 中心 我们 不会 
做 任何 花哨 的 三维 扭曲 因为 这会 让 图像 
失真 我们 只 会 使用 那些 能够 保持 图片 相对 
平行 的 基本 图像 变换 例如 旋转 和 缩放 称为 
仿射变换 现在 无论 人脸 朝向 哪边 我们/r 都/d 能将/i 眼睛/n 
和/c 嘴巴/n 向/p 中间/f 挪/ns 动到/v 大致/d 相同/d 的/uj 位置/v 
这将 使 我们 的 下一步 更加 准确 如果 你 想用 
Python 和 dlib 亲手 试试看 这一步 的话 这里 有 一些 
代码 帮 你 寻找 脸部 特征点 并用 这些 特征点 完成 
图像 变形 第三步 给 脸部 编码 现在 我们 要 面临 
最 核心 的 问题 了 准确 识别 不同 的 人脸 
这 才是 这件事 的 有趣 之处 最 简单 的 人脸 
识别方法 是 把 我们 在 第二 步中/nr 发现 的 未知 
人脸 与 我们 已经 标注 了 的 人脸 图片 作比较 
当 我们 发现 未知 的 面孔 与 一个 以前 标注 
过 的 面孔 看起来 及其 相似 的 时候 它 肯定 
是 同一 个人 这个 想 看起来 很 完美 对吧 实际上 
这种 方法 有 一个 巨大 的 问题 像 Facebook 这种 
拥有 数十 亿 用户 和数 万亿张 照片 的 网站 是 
不 可能 去 循环 比较 每张 先前 标记 的 脸 
的 这太 浪费 时间 了 他们 需要 在 毫 秒内 
识别 人脸 而 不是 几个 小时 我们 需要 的 方法 
是从 每张 人 脸上 提取 一些 基本 的 测量 数值 
然后 我们 可以 用 同样 的 方式 测量 未知 的 
面孔 并 找到 最 接近 测量 数值 的 那张 已知 
的 脸 例如 我们 可以 测量 每个 耳朵 的 大小 
眼 距 鼻子 的 长度 等 如果 你 曾经 看过 
像 犯罪 现场 调查 这样 的 电视剧 你 就 知道 
我 在 说什么 了 测量 面部 的 最 可靠 方法 
好 的 所以 为了 建立 我们 的 已知 脸部 数据库 
呢 我们 应该 测量 面部 的 哪些 数值 耳朵 的 
大小 鼻子 的 长度 眼睛 的 颜色 还有 什么 事实证明 
对于 我们 人类 来说 一些 显而易见 的 测量 值 比如 
眼睛 颜色 对 计算机 来说 没什么 意义 研究 人员 发现 
最 准确 的 方法 是 让 计算机 自己 找出 它 
要 收集 的 测量 值 深度 学习 在 寻找 哪些 
部分 的 测量 值 比较 重要 方面 表现 的 比 
人类 更好 所以 解决 方案 是 训练 一个 深度 卷积 
神经网络 但是 并 不是 让 它 去 识别 图 片中 
的 物体 这一次 我们 的 训练 是 要让 它 为 
脸部 生成 128 个 测量 值 每次 训练 要 观察 
三个 不同 的 脸部 图像 1 . 加载 一张 已知 
的 人 的 面部 训练 图像 2 . 加载 同一 
个人 的 另一 张 照片 3 . 加载 另外 一个人 
的 照片 然后 算法 查看 它 自己 为 这三个 图片 
生成 的 测量 值 再 然后 稍微 调整 神经网络 以/p 
确保/v 第一/m 张和/nr 第二/m 张/q 生成/v 的/uj 测量/vn 值/n 接近/v 
而/c 第二/m 张和/nr 第三/m 张/q 生成/v 的/uj 测量/vn 值/n 略有不同/l 
在为 几千 个人 的 数百万 图像 重复 该 步骤 几百万 
次 之后 神经 网络 学习 了 如何 可靠地 为 每个人 
生成 128 个 测量 值 对于 同一 个人 的 任何 
十张 不同 的 照片 它 都 应该 给出 大致 相同 
的 测量 值 机器学习 专业人士 把 每张 脸 的 128 
个 测量 值 称为 一个 嵌入 embedding 将 复杂 的 
原始数据 如 图片 缩减 为 可由 计算机 生成 的 一个 
数列 的 方法 在 机器学习 特别 是 语言 翻译 中 
出现 了 很多 次 我们 正在 使用 的 这种 脸部 
提取 方法 是由 Google 的 研究 人员 在 2015 年 
发明 的 但也 有 许多 类似 方法 存在 给 我们 
的 脸部 图像编码 这个 通过训练 卷积 神经 网络 来 输出 
脸部 嵌入 的 过程 需要 大量 的 数据 和 强大 
的 计算 能力 即使 使用 昂贵 的   Nvidia Telsa 
显卡 你 也 需要 大约   24 小时 的 连续 
训练 才能 获得 良好 的 准确性 但 一旦 网络 训练 
完成 它 就 可以 为 每 一张 脸 生成 测量 
值 即使 之前 它 从未见过 这张 脸 所以 这种 训练 
只需 一次 即可 幸运 的 是 OpenFace   上面 的 
大牛 已经 做完 了 这些 并且 他们 发布 了 几个 
训练过 可以 直接 使用 的 网络 谢谢 Brandon Amos 他 
的 团队 所以 我们 需要 做 的 就是 通过 他们 
预 训练 的 网络 来 处理 我们 的 脸部 图像 
以 获得 128 个 测量 值 这 是 我们 测试 
图像 的 一些 测量 值 那么 这 128 个 数字 
到底 测量 了 脸部 的 哪些 部分 我们 当然 不 
知道 但是 这 对 我们 并不 重要 我们 关心 的 
是 当 看到 同一 个人 两张 不同 的 图片 时 
我们 的 网络 能 得到 几乎 相同 的 数值 如果 
你 想 自己 尝试 这 个 步骤 OpenFace   提供 
了 一个 lua 脚本 它 可以 生成 一个 文件夹 中 
所有 图像 的 嵌入 并将 它们 写入 csv 文件 点 
此 查看 如何 运行 第四步 从 编码 中 找出 人 
的 名字 最后 这 一步 实际上 是 整个 过程 中 
最简单 的 一步 我们 要 做 的 就是 找到 数据库 
中 与 我们 的 测试 图像 的 测量 值 最 
接近 的 那个 人 你 可以 通过 任何 基本 的 
机器学习 分类 算法 来 达成 这 一 目标 我们 并不 
需要 太 花哨 的 深度 学习 技巧 我们 将 使用 
一个 简单 的 线性   SVM 分类器 但 实际上 还 
有 很多 其他 的 分类 算法 可以 使用 我们 需要 
做 的 是 训练 一个 分类器 它 可以 从 一个 
新 的 测试 图像 中 获取 测量 结果 并 找出 
最 匹配 的 那个 人 分类器 运行 一次 只 需要 
几 毫秒 分类器 的 结果 就是 人 的 名字 所以 
让 我们 试 一下 我们 的 系统 首先 我 使用 
Will Ferrell Chad Smith and Jimmy Falon 三人 每人 20 
张 照片 的 嵌入 来 训练 分类器 嗯 就是 这些 
训练 数据 接下来 我 在 这个 分类器 上 运行 了 
威尔 法瑞尔 和 查德 史密斯 在 吉米 法伦 的 节目 
上 互相 模仿 的 那个 视频 的 每 一帧 https 
/ / cdn images 1 . medium . com / 
max / 800/1 * _ G N y j R 
3 J l P o 9 g r t I 
V m K F Q . gif 结果 成功 了 
不同 角度 的 脸部 甚至 是 侧脸 它 都能 捕捉到 
自己 动手 做 一遍 让 我们 回顾 一下 我们 的 
步骤 1 . 使用 HOG 算法 给 图片 编码 以 
创建 图片 的 简化 版本 使用 这个 简化 的 图像 
找到 其中 看起来 最像 通用 HOG 面部 编码 的 部分 
2 . 通过 找到 脸上 的 主要 特征点 找出 脸部 
的 姿势 一旦 我们 找到 这些 特征点 就 利用 它们 
把 图像 扭曲 使 眼睛 和 嘴巴 居中 3 . 
把 上 一步 得到 的 面部 图像 放入 神经 网络 
中 神经网络 知道 如何 找到 128 个 特征 测量 值 
保存 这 128 个 测量 值 4 . 看看 我们 
过去 已经 测量 过 的 所有 脸部 找出 哪 个人 
的 测量 值 和 我们 要 测量 的 面部 最接近 
这 就是 你 要找 的 人 现在 你 知道 这 
一切 都是/nr 如何 运行 的 了 这里 是 如何 使用 
OpenFace 在 你 自己 的 电脑 上 运行 整个 人脸 
识别 系统 的 说明 开始 之前 确保 你 已经 安装 
了 python OpenFace 和 dlib 你 也 可以 在 这里 
手动 安装 或者 使用 一个 已经 设 定好 的 docker 
image docker pullbamos / openfacedocker run p 9000 9000 p 
8000 8000 t i bamos / openface / bin / 
bashcd / root / openface 友情 提示 如果 你 正在 
OSX 上 使用 Docker 你 可以 这样 使 你 的 
OSX / Users / 文件 夹在 docker image 中 可见 
docker run v / Users / host / Users p 
9000 9000 p8000 8000 t i bamos / openface / 
bin / bashcd / root / openface 然后 你 就能 
访问 你 在 docker image 中 / host / Users 
/ . . . 的 OSX 文件 ls / host 
/ Users / 第一步 在 openface 文件 中 建立 一个 
名为 . / training images / 的 文件夹 mkdir training 
images 第二步 为 你 想 识别 的 每个 人 建立 
一 个子 文件夹 例如 mkdir . / training images / 
will ferrell / mkdir . / training images / chad 
smith / mkdir . / training images / jimmy fallon 
/ 第三步 将 每个人 的 所有 图像 复制 进 对应 
的 子 文件夹 确保 每张 图像 上 只 出现 一张 
脸 不 需要 裁剪 脸部 周围 的 区域 OpenFace 会 
自己 裁剪 第四步 从 openface 的 根目录 中 运行 这个 
openface 脚本 首先 进行 姿势 检测 和 校准 . / 
util / align dlib . py . / training images 
/ align outerEyesAndNose . / aligned images / size 96 
这将 创建 一个 名为 . / aligned images / 的 
子 文件夹 里面 是 每 一个 测试 图像 裁 剪过 
并且 对齐 的 版本 其次 从 对齐 的 图像 中 
生成 特征 文件 . / batch represent / main . 
lua outDir . / generated embeddings / data . / 
aligned images / 运行 完 后 这个 . / generated 
embeddings / 子 文件夹 会 包含 一个 带有 每张 图像 
嵌入 的 csv 文件 第三 训练 你 的 面部 检测 
模型 . / demos / classifier . pytrain . / 
generated embeddings / 这将 生成 一个 名为 . / generated 
embeddings / classifier . pkl 的 新文件 其中 包含 了 
你 用来 识别 新面孔 的 SVM 模型 到 这一步 为止 
你 应该 有了/nr 一个 可用 的 人脸 识别 器 第五步 
识别 面孔 获取 一个 未知 脸孔 的 新 照片 然后 
像 这样 把 它 传递 入 分类器 脚本 中 . 
/ demos / classifier . pyinfer . / generated embeddings 
/ classifier . pkl your _ test _ image . 
jpg 你 应该 会 得到 像 这样 的 一个 预测 
= = = / test images / will ferrel 1 
. jpg = = = Predict will ferrell with 0.73 
confidence . 至此 你 已经 完成 了 一个 预测 了 
你 也 可以 修改 . / demos / classifier . 
py 这个 python 脚本 来 让 它 匹配 其他人 的 
脸 重要 提示 如果 你 得到 的 结果 不够 理想 
试着 在 第三 步为/nr 每个人 添加 更多 照片 特别 是 
不同 姿势 的 照片 即使 完全 不 知道 这个 面孔 
是 谁 现在 这个 脚本 仍然会 给出 预测 在 真实 
应用 中 低 可信度 low confidence 的 预测 可能 会 
被 直接 舍弃 因为 很 有可能 它们 就是 错 的 
via medium . com 