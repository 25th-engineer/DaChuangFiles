原文 地址 http / / scikit learn . org / 
stable / tutorial / basic / tutorial . html 翻译 
Tacey Wong 概要 该 章节 我们 将 介绍 贯穿 scikit 
learn 使用 中的 机器学习 Machine Learning 这个 词汇 并给 出 
一些 简单 的 学习 示例 前言 scikit learn Python 机器学习 
库 进行/v 数据/n 挖掘/v 和/c 数据/n 分析/vn 的/uj 简单/a 而/c 
高效/a 的/uj 工具/n 任何人/r 都/d 可使用/i 可在 多种 场景 / 
上下文 复用 基于 NumPy SciPy 和 matplotlib 构建 开放 源代码 
可 用于 商业 用途 _ BSD 协议 分类 识别 一个 
对象 属于 那 一种 类别 应用 垃圾邮件 检测 图像识别 算法 
SVM 支持 向量 机 KNN K 近邻 随机 森林 回归 
预测 与 某个 对象 相 关联 的 连续 值 属性 
应用 药物 反应 股票价格 算法 线性 回归 SVR 支持 向量 
回归 ridge regression 岭回归 LASSO 回归 聚 类 将 相似 
的 对象 自动 聚集 到 不同 的 集合 中 应用 
顾客 细分 分组 试验 结果 算法 K Means 谱 聚 
类 mean shift 中值 移动 降 维 降低 随机变量 的 
数目 可视化 可视化 提高效率 算法 PCA 主 成分 分析 特征 
选取 非 负 矩阵 分解 模型 选取 比较 验证 参数 
和 模型 的 选择 目标 通过 参数 调整 改进 精度 
模块 网格 搜索 交叉 验证 metrics 度量 预处理 特征提取 和 
正则化 应用 转换 数据 以便 机器学习 算法 使用 模块 预处理 
特征提取 一 机器学习 问题 设定 通常 一个 学习 问题 是 
通过 分析 一些 数据 样本 来 尝试 预测 未知 数据 
的 属性 如果 每 一个 样本 不 仅仅 是 一个 
单独 的 数字 比如 一个 多 维 的 实例 multivariate 
data 也 就是说 有着 多个 属性 特征 . 我们 可以 
把 学习 问题 分成 如下 的 几个 大类 1 有 
监督 学习 数据 带有 我们 要 预测 的 属性 这种 
问题 主要 有 如下 几种 ① 分类 样例 属于 两类 
或 多类 我们 想 要从 已经 带 有 标签 的 
数据 学习 以 预测 未带 标签 的 数据 识别 手写 
数字 就是 一个 分 类 问题 这个 问题 的 主要 
目标 就是 把 每一个 输出 指派 到 一个 有限 的 
类别 中 的 一类 另一种 思路 去 思考 分类 问题 
其实 分类 问题是 有 监督 学习 中 的 离散 形式 
问题 每 一个 都 有一个 有限 的 分类 对于 样例 
提供 的 多个 标签 我们 要 做 的 就是 把 
未知 类别 的 数据 划分 到 其中 的 一种 ② 
回归 去过 预期 的 输出 包含 连续 的 变量 那么 
这样 的 任务 叫做 回归 根据 三文鱼 的 年纪 和 
中联 预测 其 长度 就是 一个 回归 样例 2 无 
监督 学习 训练 数据 包含 不 带有 目标值 的 输入 
向量 x 对于 这些 问题 目标 就是 根据 数据 发现 
样本 中 相似 的 群组 聚 类 或者 在 输入 
空间 中 判定 数据 的 分布 密度估计 或者/c 把/p 数据/n 
从/p 高维空间/i 转换/v 到/v 低/a 维空间/n 以/p 用于/v 可视化/n 训练/vn 
集/q 和/c 测试/vn 集/q 机器学习/i 是/v 学习/v 一些/m 数据集/i 的/uj 
特征/n 属性/n 并将/i 其/r 应用于/i 新的/i 数据/n 这 就是 为什么 
在 机器学习 用来 评估 算法 时 一般 把 手中 的 
数据 分成 两部分 一 部分 我们 称之为 训练 集 用以 
学习 数据 的 特征 属性 一 部分 我们 称之为 测试 
集 用以 检验 学习 到 的 特征 属性 二 加载 
一个 样本 数据集 scikit learn 本身 带有 一些 标准 数据集 
比如 用 来 分类 的 iris 鸢尾花 数据集 digits 数字 
数据集 用来 回归 的 boston house price 波士顿 房屋 价格 
数据集 接下来 我们/r 我们/r 从/p shell/w 开启/v 一个/m Python/w 解释器/n 
并/c 加载/v iris/w 和/c digits/w 两个/m 数据集/i 译注 一些 代码 
惯例 就不 写了 提示符 之类 的 学过 Python 的 都懂 
$ python from sklearn import datasets #/i 从/p sklearn/w 包中/nr 
加载/v 数据集/i 模块/n iris = datasets . load _ iris 
# 加载 鸢尾花 数据集 digits = datasets . load _ 
digits # 加载 数字图像 数据集 一个 数据集 是 一个 包含 
数据 所有 元数据 的 类 字典 对象 这个 数据 存储 
在 . data 成员变量 中 是 一个 \ n * 
n \ 的 数组 行 表示 样例 列 表示 特征 
在有 监督 学习 问题 中 一个 或 多个 响应 变量 
Y 存储 在 . target 成员变量 中 不同 数据集 的 
更多 细节 可以 在 专属 章节 中 找到 例如 对于 
digits 数据集 digits . data 可以 访问 得到 用来 对 
数字 进行 分类 的 特征 print digits . data 0 
. 0 . 5 . . . . 0 . 
0 . 0 . 0 . 0 . 0 . 
. . . 10 . 0 . 0 . 0 
. 0 . 0 . . . . 16 . 
9 . 0 . . . . 0 . 0 
. 1 . . . . 6 . 0 . 
0 . 0 . 0 . 2 . . . 
. 12 . 0 . 0 . 0 . 0 
. 10 . . . . 12 . 1 . 
0 . digits . target 就是 数字 数据集 各 样例 
对应 的 真实 数字 值 也 就是 我们 的 程序 
要 学习 的 digits . target array 0 1 2 
. . . 8 9 8 数据 数组 的 形状 
尽管 原始数据 也许 有 不同 的 形状 但 实际 使用 
的 数据 通常 是 一个 二维 数组 n 个 样例 
n 个 特征 对于 数字 数据集 每一个 原始 的 样例 
是 一张 8 x 8 的 图片 也能 被 使用 
digits . images 0 array 0 . 0 . 5 
. 13 . 9 . 1 . 0 . 0 
. 0 . 0 . 13 . 15 . 10 
. 15 . 5 . 0 . 0 . 3 
. 15 . 2 . 0 . 11 . 8 
. 0 . 0 . 4 . 12 . 0 
. 0 . 8 . 8 . 0 . 0 
. 5 . 8 . 0 . 0 . 9 
. 8 . 0 . 0 . 4 . 11 
. 0 . 1 . 12 . 7 . 0 
. 0 . 2 . 14 . 5 . 10 
. 12 . 0 . 0 . 0 . 0 
. 6 . 13 . 10 . 0 . 0 
. 0 . 三 学习 和 预测 对于 数字 数据集 
digits dataset 任务 是 预测 一张 图 片中 的 数字 
是 什么 数字 数据集 提供 了 0 9 每 一个 
数字 的 可能 样例 可以 用 它们 来 对 位置 
的 数字 图片 进行 拟合 分类 在 scikit learn 中 
用以 分类 的 拟合 评估 函数 是 一个 Python 对象 
具体 有 fit X Y 和 predic T 两种 成员 
方法 其中 一个 拟合 评估 样例 是 sklearn . svmSVC 
类 它 实现 了 支持 向量 分类 SVC 一个 拟合 
评估 函数 的 构造函数 需要 模型 的 参数 但是 时间 
问题 我们 将 会把 这个 拟合 评估 函数 作为 一个 
黑箱 from sklearn import svm clf = svm . SVC 
gamma = 0.001 C = 100 . 选择 模型 参数 
我们 调用 拟合 估测 实例 clf 作为 我们 的 分类器 
它 现在 必须 要 拟合 模型 也 就是说 他 必须 
要 学习 模型 这 可以 通过 把 我们 的 训练 
集 传递 给 fit 方法 作为 训练 集 我们 使用 
其中 除 最后 一组 的 所有 图像 我们 可以 通过 
Python 的 分片 语法 1 来 选取 训练 集 这个 
操作 将 产生 一个 新 数组 这个 数组 包含 digits 
. data 中 除 最后 一组 数据 的 所有 实例 
clf . fit digits . data 1 digits . target 
1 SVC C = 100.0 cache _ size = 200 
class _ weight = None coef0 = 0.0 degree = 
3 gamma = 0.001 kernel = rbf max _ iter 
= 1 probability = False random _ state = None 
shrinking = True tol = 0.001 verbose = False 现在 
你 就 可以 预测 新的 数 值了 我们 可以 让 
这个 训练 器 预测 没有 作为 训练 数据 使用 的 
最后 一张 图像 是 什么 数字 clf . predict digits 
. data 1 array 8 相应 的 图片 如 下图 
正如 你 所 看到 的 这 是 一个 很 有 
挑战 的 任务 这张 图片 的 分辨率 很低 你 同意 
分类器 给出 的 答案 吗 这个 分 类 问题 的 
完整 示例 在 这里 识别 手写 数字 你 可以 运行 
并 使用 它 译 看 本文 附录 四 模型 持久化 
可以 使用 Python 的 自带 模块 pickle 来 保存 scikit 
中的 模型 from sklearn import svm from sklearn import datasets 
clf = svm . SVC iris = datasets . load 
_ iris X y = iris . data iris . 
target clf . fit X y SVC C = 1.0 
cache _ size = 200 class _ weight = None 
coef0 = 0.0 degree = 3 gamma = 0.0 kernel 
= rbf max _ iter = 1 probability = False 
random _ state = None shrinking = True tol = 
0.001 verbose = False import pickle s = pickle . 
dumps clf clf2 = pickle . loads s clf2 . 
predict X 0 array 0 y 0 0 对于 scikit 
也许 使用 joblib 的 pickle 替代 joblib . dump & 
joblib . load 更 有趣 因为 它 在 处理 带 
数据 时更/nr 高效 但是 遗憾 的 是 它 只能 把 
数据 持久化 到 硬盘 而 不是 一个 字符串 译注 搬到 
string 字符串 意味着 数据 在 内存 中 from sklearn . 
externals import joblib joblib . dump clf filename . pkl 
往后 你 就 可以 加载 这个 转储 的 模型 也能 
在 另一个 Python 进程 中 使用 如下 clf = joblib 
. load filename . pkl 注意 joblib . dump 返回 
一个 文件名 的 列表 每一个 numpy 数组 元素 包含 一个 
clf 在 文件 系统 上 的 名字 在用/b joblib/w ./i 
load/w 加载/v 的/uj 时候/n 所有/b 的/uj 文件/n 需要/v 在/p 相同/d 
的/uj 文件/n 夹下/v 注意/v pickle/w 有/v 一些/m 安全/an 和可/nr 维护/v 
方面/n 的/uj 问题/n 请 参考 Model persistent 获得 在 scikit 
learn 中 模型 持久化 的 细节 五 惯例 约定 scikit 
learn 的 各种 拟合 评估 函数 遵循 一些 确定 的 
规则 以 使得 他们 的 用法 能够 被 预想到 译 
使得 各种 学习 方法 的 用法 统一 起来 ① 类型转换 
除非 特别 指定 输入 将被 转换 为 float64import numpy from 
sklearn import random _ projection rng = np . random 
. RandomState 0 X = rng . rand 10 2000 
X = np . array X dtype = float32 print 
x . dtype transformer = random _ projection . G 
a u s s i a n R a n 
d o m P r o j e c t 
i o n X _ new = transformer . fit 
_ transform X print X _ new . dtype 在 
这个 例子 中 X 是 float32 被 fit _ transform 
X 转换成 float64 回归 被 转换 成 float64 分类 目标 
维持 不变 . from sklearn import datesets from sklearn . 
svm import SVC iris = datasets . load _ iris 
clf = SVC clf . fit iris . data iris 
. target print list clf . predict iris . data 
3 clf . fit iris . data iris . target 
_ names iris . target print list clf . predict 
iris . data 3 这里 第一 个 predict 返回 一个 
整数 数组 是 因为 iris . target 一个 整数 数组 
被 用于 拟合 第二个 predict 返回 一个 字符串 数组 因为 
iris . target _ names 被 用于 拟合 ② 重 
拟合 和 更新 参数 一个 拟合 评估 函数 的 混合 
参数 超 参数 能够 在 通过 sklearn . pipeline . 
Pipeline . set _ params 方法 构造 之 后被 更新 
多次 调用 fit 能够 覆 写 之前 fit 学习 的 
内容 import numpy as np from sklearn . svm import 
SVC rng = np . random . RandomState 0 X 
= rng . rand 100 10 Y = rng . 
binomial 1 0.5 100 X _ test = rng . 
rand 5 10 clf = SVC clf . set _ 
params kernel = linear . fit X Y clf . 
predict X _ test clf . set _ params kernel 
= rbf . fit X Y clf . predict X 
_ test 这里 用 SVC 构造 之后 开始 拟合 评估 
函数 默认 的 rbf 核 被 改编 成 linear 后来 
又 改回 rbf 去 重 拟合 做 第二次 的 预测 
附 ① digits 数据集 一个 展示 怎样用 scikit learn 识别 
手写 数字 的 样例 绘制 数字 # 源代码 Ga ë 
l Varoquaux # 修改 以 进行 文档 化 Jaques Grobler 
# 协议 BSD 3 from sklearn import datasets import matplotlib 
. pyplot as plt # 加载 数字 数据集 digits = 
datasets . load _ digits # 展示 第一 个 数字 
plt . figure 1 figsize = 3 3 plt . 
imshow digits . images 1 cmap = plt . cm 
. gray _ r interpolation = nearest plt . show 
② 绘制 数字 分类 plot _ digits _ classification . 
py # 作者 Gael Varoquaux gael dot varoquaux at normalesup 
dot org # 协议 BSD 3 clause # Python 标准 
科学计算 包 导入 import matplotlib . pyplot as plt # 
导入 数据集 分类器 和 评估 度量 from sklearn import datasets 
svm metrics # 数字 数据集 digits = datasets . load 
_ digits # 数据 是 一个 8x8 的 数字 图像 
让 我们 先 看看 开头 的 三张 图像 . 图像 
存储 在 数据集 # 的 ` images ` 属性 中 
如果 我们 要 加载 图像文件 的话 可以 使用 pylab . 
imread . # 注意 每一张 图像 尺寸 必须 相等 . 
这些 图像 各自 对应 的 数字 是 多少 我们 是 
知道 的 # 他们 存储 在 数据集 的 target 属性 
中 . images _ and _ labels = list zip 
digits . images digits . target for index image label 
in enumerate images _ and _ labels 4 plt . 
subplot 2 4 index + 1 plt . axis off 
plt . imshow image cmap = plt . cm . 
gray _ r interpolation = nearest plt . title Training 
% i % label # 在 数据 上 应用 一个 
分类器 我们 需要 铺平 图像 # 将 数据 转换成 二位 
矩阵 n _ samples = len digits . images data 
= digits . images . reshape n _ samples 1 
# 创建 一个 分类器 一个 支持 向量 分类器 classifier = 
svm . SVC gamma = 0.001 # 我们 在 前半部 
分 数据 上 进行 学习 classifier . fit data n 
_ samples / 2 digits . target n _ samples 
/ 2 # 现在 预测 后半 部分 的 值 expected 
= digits . target n _ samples / 2 predicted 
= classifier . predict data n _ samples / 2 
print Classification report for classifier % s \ n % 
s \ n % classifier metrics . classification _ report 
expected predicted print Confusion matrix \ n % s % 
metrics . confusion _ matrix expected predicted images _ and 
_ predictions = list zip digits . images n _ 
samples / 2 predicted for index image prediction in enumerate 
images _ and _ predictions 4 plt . subplot 2 
4 index + 5 plt . axis off plt . 
imshow image cmap = plt . cm . gray _ 
r interpolation = nearest plt . title Prediction % i 
% prediction plt . show 