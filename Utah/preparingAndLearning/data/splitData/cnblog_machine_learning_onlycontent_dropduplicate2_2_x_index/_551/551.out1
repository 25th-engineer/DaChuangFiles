摘要 本文 简单 叙述 了 如何 根据 标准 普尔 500 
指数 使用 线性 回归 来 预测 股票 的 走势 声明 
本文 的 内容 非 原创 但 经过 本人 翻译 和 
总结 而来 转载 请 注明 出处 本文 内容 来源 https 
/ / www . dataquest . io / mission / 
58 / regression basics 标准 普尔 500 & P 500 
说明 http / / www . investopedia . com / 
ask / answers / 05 / sp500calculation . asp 原始数据 
展现 使用 了 2005年 至 2015年 的 数据 import pandas 
sp500 = pandas . read _ csv sp500 . csv 
注意 到 上面 的 数据 中 有 一些 行 如 
第 六行 的 value 值 为 点号 . 这 是因为 
这个 日期 在 美国 是 一个 假日 所以 没有 股票 
交易 信息 现在 要 过滤 掉 这些 行 sp500 = 
sp500 sp500 value = . 格式化 数据 为了 更 容易 
地 使用 机器 学习 的 算法 需要/v 把/p 用来/v 预测/vn 
的/uj 值/n 和/c 预测/vn 后的/nr 真实/d 值/n 放在/v 同/p 一行/m 
在 这个 例子 中 我们 要 根据 每 一天 的 
股票 指数 来 预测 下 一个 交易日 的 股票 指数 
所以 要在 每 一行 上 增加 下 一天 指数 的 
列 我们 需要 的 是 这样 格式 的 数据 next 
_ day = sp500 value . iloc 1 sp500 = 
sp500 . iloc 1 # 去掉 最后 一行 sp500 next 
_ day = next _ day . values 在 导入 
文件 的 时候 Pandas 会 自动 为 每 一列 的 
数据 推断 数据格式 但 由于 在 导入 原始 的 文件 
时 有一些 行 如 第 六行 的 value 值 为 
点号 . 所以 pandas 把 该 列 认为 是 字符 
类型 而 不是 float 类型 需要 将该 列 转换 数据格式 
# 原始 的 数据 格式 print sp500 . dtypes sp500 
value = sp500 value . astype float sp500 next _ 
day = sp500 next _ day . astype float # 
转换 后的/nr 数据 格式 print sp500 . dtypes 建立 模型 
使用 sckit learn 包 中的 线性 回归 http / / 
scikit learn . org / stable / modules / generated 
/ sklearn . linear _ model . LinearRegression . html 
# sklearn . linear _ model . LinearRegression 来 预测 
下 一个 交易日 的 股票 指数 # 导入 类 from 
sklearn . linear _ model import LinearRegression # 初始化 regressor 
= LinearRegression # predictors 变量 需要 是 一个 dataframe 而 
不能 是 一个 series predictors = sp500 value # 这 
是 一个 dataframe to _ predict = sp500 next _ 
day # 这 是 一个 series # 训练 这个 线性 
回归模型 regressor . fit predictors to _ predict # 根据 
模型 生成 预测值 next _ day _ predictions = regressor 
. predict predictors print next _ day _ predictions 评估 
模型 一个 经常 用于 评估 回归模型 的 指标 是 均方差 
mean squared error MSE 计算公式 mse = sum to _ 
predict next _ day _ predictions * * 2 / 
len next _ day _ predictions 另外 两个 常用 的 
指标 是 根 均方差 root mean squared error RMSE 和 
平均 绝对误差 mean absolute error MAE import math rmse = 
math . sqrt sum predictions test next _ day * 
* 2 / len predictions mae = sum abs predictions 
test next _ day / len predictions 在 上面 的 
评估 模型 中 存在 一个 巨大 的 错误 那 就是 
过度 拟合 使用 了 同样 的 数据 来 训练 模型 
和 进行 预测 想象 一下 你 告诉 他人 2 + 
2 等于 4 然后 问 他 2 + 2 的 
结果 他 可以 马上 回答 你 正确 的 答案 但是 
他 未必 明白 加法 运算 的 原理 假如 你问 他 
3 + 3 的 结果 他 就 可能 回答 不了 
同样地 你 用 一批 数据 来 训练 这个 回归模型 然后再 
用 同样 的 数据 来 进行 预测 会 造成 一个 
结果 那 就是 错误 率 非常 低 因为 这个 模型 
早就 知道 了 每个 正确 的 值 用来 避免 过度 
拟合 的 最好 方法 就是 将 训练 的 数据 和 
用来 预测 测试 的 数据 分开 import numpy as np 
import random np . random . seed 1 random . 
seed 1 # 将 sp500 进行 随机 重排 sp500 = 
sp500 . loc np . random . permutation sp500 . 
index # 选择 前 70% 的 数据 作为 训练 数据 
highest _ train _ row = int sp500 . shape 
0 * . 7 train = sp500 . loc highest 
_ train _ row # 选择 后 30% 的 数据 
作为 测试数据 test = sp500 . loc highest _ train 
_ row regressor = LinearRegression predictors = train value to 
_ predict = train next _ day regressor . fit 
predictors to _ predict next _ day _ predictions = 
regressor . predict test value mse = sum next _ 
day _ predictions test next _ day * * 2 
/ len next _ day _ predictions 数据 可视化 除了 
上面 用来 评估 模型 误差 的 指标 可以 说明 一个 
模型 的 正确性 也 可以 使 用图表 来 展现 下面 
做 一个 散点图 很 坐标 为 测试 数据 的 value 
列 纵坐标 为 测试 数据 的 next _ day 列 
然后 在 上面 再 做一个 折线图 横坐标 同样 为 测试 
数据 的 value 列 纵坐标 为 使用 模型 预测 后的/nr 
结果 import matplotlib . pyplot as plt plt . scatter 
test value test next _ day plt . plot test 
value predictions plt . show 