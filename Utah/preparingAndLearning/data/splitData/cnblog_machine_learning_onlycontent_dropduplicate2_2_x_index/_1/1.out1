与其 停留 在 概念 理论 层面 不如 动手 去 实现 
一个 简单 demo         鲁迅 没有 源码 
都是 耍流氓 github 前言 目前 提供 AI 开发 相关 API 
接口 的 公司 有 很多 国外 如 微软 谷歌 国内 
的 百度 腾讯 等 都有 开放 API 接口 开发者 只 
需要 调 用 相关 接口 几步 就 能 开发 出 
一个 智能 APP 通常 情况 AI 接口 有 以下 几类 
计算机 视觉 图像 分类 图像 目标 检测 以 及 视频 
检测 跟踪 等等 这类 API 主要 用于 处理 图像 和 
视频 能够 给 图像 打 tag 并 分析 视频 图 
片中 的 物体 及其 对应 坐标 轨迹 等 语言 包括 
自然 语言 处理 分析 自然语言 含义 评估 情绪 等 例如 
机器 翻译 等 语音 将 语言 音频 转换 为 文本 
使用 声音 进行 验证 或 向 应用 添 加说 话人 
识别 知识 通过 映射 复杂 信息 和 数据 来 解决 
任务 例如 智能 建议 和 语义搜索 基于 Web Service 的 
智能 API 接口 让 我们 不 需要 了解 复杂 的 
机器学习 以及 数学 知识 就 能 轻松 开发 出 智能 
APP 但是 本文 将 介绍 如何 完全 自己 动手 去 
实现 一个 智能 API 接口 服务 由于 涉及 到 的 
东西 非常多 本文 仅以 我 比较 熟悉 的 计算机 视觉 
为例 包含 图像 分类 image classification 和 目标 检测 target 
detect 之后 如果 有 机会 我会 介绍 视频 轨迹 跟踪 
相关 的 东西 大概 就是 图像 处理 的 升级版 在 
开始 正文 之前 先 解释 几个 名词 AI 的 概念 
近 一两 年 尤其 火热 机器学习 以及 深度 学习 的 
技术 介绍 到处 都是 这里 再 简单 介绍 一下 我 
对 它们 的 理解 人工智能 又名 AI 概念 出现 得 
特别 早 上世纪 五 六十 年代 就有 人工智能 大概 可以 
分为 两大类 一类 强 人工智能 你 可以 理解 为 完全 
具备 跟 人类 一样 的 思维 和 意识 的 计算机程序 
第二类 弱 人工智能 大概 就是 指 计算机 能够 完成 大部分 
相对 较 高级 的 行为 比如 前面 提到 的 理解 
图片 含义 理解 语言 含义 以及 理解 语音 等等 我们 
日常 提到 的 人工智能 通常指 第二类 常见 的 有 计算机 
视觉 语音识别 机器翻译 推荐 系统 搜索引擎 甚至 一些 智能 美图 
的 APP 这些 都 可以 说 使用 了 人工智能 技术 
因为 它们 内部 都 使用 了 相关 机器学习 或者 深度 
学习 的 算法 机器学习 这个 概念 也 出现 得 很早 
大概 上 世界 八 九十 年代 以前 的 概念 中 
计算机 必须 按照 人 编写 的 程序 去 执行 任务 
对于 程序 中 没有 的 逻辑 计算机 是 不 可能 
去做 的 机器学习 出现 后 计算机 具备 人类 掌握 经验 
的 能力 在 通过 大量 学习 / 总结 规律 之后 
计算机 能够 预测 它 之前 并 没有 见过 的 事物 
深度 学习 深度 学习 的 概念 近几年 才 出现 你 
可以 理解 为 它 是 机器 学习 的 升级 之所以 
近几年 突然 流行 是 因为 一些 传统 机器学习 算法 比如 
神经网络 要想 取得 非常好 的 性能 神经网络 必须 足够 复杂 
同时 需要 大量 的 学习 数据 这时 计算能力 遇到 了 
瓶颈 而 近几年 随着 硬件 性能 普遍 提升 再加 上 
互联网 时代 爆炸式 的 数据 存储 训练 出 足够 复杂 
的 模型 已经 不再 是 遥不可及 因此 可以 将 深度 
学习 理解 为 更 复杂 的 机器 学习 方式 好了 
基本概念 理 清楚 之后 开始 进入 正 题了 这次 我 
需要 实现 计算机 视觉 中的 两 大 智能 API 接口 
图片 分类 和 目标 检测 技术/n 和/c 开发/v 环境/n 下面/f 
是/v 用到/v 的/uj 技术/n 和/c 环境/n 1 Python 3 . 
5.2 PIL numpy opencv matplotlib 等 一些 常见 的 库 
2 Tensorflow 1 . 8.0 GPU 版本 3 Keras 2 
. 2.0 backend 是 tensorflow 4 Yolo v3 目标 检测 
算法 5 Windows 10 + Navida GTX 1080 显卡 需要 
安装 cuda 和 cudnn 6 VS Code 1 . 19.3 
关于 以上 技术 的 介绍 以及 初次 使用 时的/nr 安装 
步骤 我 这里 不 再多 说 了 网上 教程 很多 
提示 一下 初次 安装 环境 会 有 很多 坑 一定 
要 使用 gpu 版本 的 tensorflow 如果 仅仅 是 自己 
搞 着 练练手 熟悉 熟悉 流程 安装 cpu 版本 也行 
接口定义 好了 技术 环境 介绍 完了 之后 再把 接口 确定 
下来 名称 接口 参数 返回 在线 图片 检测 / detect 
/ onlineMethod = POSTonline _ image _ url = url 
string { image result _ url results { box left 
top right bottom score score class class } { box 
left top right bottom score score class class } . 
. . time create _ time type online } 本地 
图片 检测 / detect / localMethod = POSTlocal _ image 
= file data byte multipart / form data { image 
result _ url results { box left top right bottom 
score score class class } { box left top right 
bottom score score class class } . . . time 
create _ time type local } 在线 图片 分类 / 
classification / onlineMethod = POSTonline _ image _ url = 
url string 还 没完 成本 地 图片 分类 / classification 
/ localMethod = POSTlocal _ image = file _ data 
byte multipart / form _ data 还没 完成 写 这篇 
博客 的 时候 图片 分类 的 模型 还 没有 训 
练好 所以 暂时 放 一下 下次 更新 以上 四个 接口 
分 两类 一类 是 提交 在线 图片 的 url 即可 
二类 是 提交 本地 图片 文件 表单 上传 两类 都 
需要 POST 方式 提交 返回 结果 是 json 格式 里面 
包含 了 处理 之后 的 图片 url 所有 的 结果 
已经 绘制 在 上面 了 还有 处理 的 raw _ 
data 客户端 收到 这些 raw _ data 后 可以 自己 
用作 其他 地方 目标 检测 目标 检测 算法 使用 的 
是 YOLO V3 这里 是 C 语言 实现 的 版本 
http / / pjreddie . com / darknet /   
由于 我 比较 熟悉 Python 所以 我 用 的 是 
另外 一个 Python 版本 的 实现 基于 Keras 这里 是 
Keras 版本 的 实现 https / / github . com 
/ qqwweee / keras yolo3   如果 想要 训练 更好 
的 模型 需要 自己 准备 数据集 源码 中 有 一个 
我 写 的 开源 工具 专门 用来 标记 这个 框架 
所用 的 数据 集 这个 工具 需要 . net 4.0 
+ 训练 数据集 使用 的 是 微软 的 COCO 数据集 
https / / github . com / cocodataset / cocoapi 
这个 也是 C 语言 版本 的 默认 数据集 你 可以 
直接 从 官网 上 下载 训 练好 的 模型 使用 
图片 分类 待 更新 . . . Web 服务器 由于 
是 Web API 那么 你 首先 必须 得 有一个 自己 
的 Web Server 因为 这 是 一个 demo 程序 所以 
没 必要 使用 类似 Django Flask 这样 的 框架 于是 
索性 就 自己 写 一个 吧 功能 很 简单 提供 
静态 文件 访问 以及 可以 处理 我 的 API 接口 
就行 写完 核心 代码 大约 200行 包含 API 接口 处理 
的 逻辑 整个 Web 程序 用到 的 模块 大概有 http 
. server PIL urllib io uuid time json os 以及 
cgi 可以 看到 并 不复杂 整个 Web Server 的 代码 
处理 逻辑 从 调用 API 接 口到 返回 处理 结果 
的 流程 相当 简单 跟 普通 的 HTTP 请求 一样 
客户端 发送 HTTP 请求 携带 对象 参数 Web Server 在 
接收 到 数据 后 开始 调用 计算 模块 并将 计算结果 
转换成 json 格式 返回 给 客户端 图中 橙色 部分 为 
关键 部分 详细 实现 请 参见 源码 中的 vision 模块 
Demo 效果 Demo 中 写好 了 一个 静态 html 页面 
运行 python server . py 后 在 浏览 中 访问 
http / / localhost 8080 / web app / index 
. html 即可 看见 测试 页面 左边 为 处理 之后 
的 图片 右边 为 返回 的 json 结果 检测 在线 
图片 在 文本框 中 copy 图片 url 点击 提交 上传 
本地 图片 点击 提交 与此同时 在 控制台 或 我 自己 
的 VS Code 集成 终端 中 可以 看到 如下 输出 
最 开始 是 检测 花费 的 时间 接着就是 检测 到 
的 目标 物体 以及 对应 的 坐标 分数 等等 后面 
是 转换 之后 的 json 字符串 最后 客户端 根据 json 
中的 url 加载 处理 之后 的 图片 视频 目标 跟踪 
这里 稍微 说 一下 跟 视频 有关 的 处理 对于 
视频 来讲 它 跟 图片 一样 由 一张 张 图片 
组成 唯一 的 区别 就是 它 具备 时间 的 维度 
我们 不仅 要 检测 每 帧 中 的 目标 还要 
判断 前后 帧 之间 各个 目标 之间 的 联系 然后 
利用 目标 物体 的 位移 差 来 分析 物体 行为 
对于 路上 车辆 来讲 可以 分析 异常 停车 压线 逆行 
掉头 车速 流量 统计 抛洒 物 等 数据 关于 机器学习 
AI 开发 离不开 机器学习 深度 学习 而 机器学习 涉及到 的 
知识 相对 来讲 非常 广泛 不仅仅 要求 开发 者 掌握 
好 编程 技能 还对 数学 知识 有 较高 的 要求 
我 认为 作为 普通 程序员 如果 要 学习 AI 开发 
请用 一种 Top Down 的 方式 抛开 晦涩 难懂 的 
数学 理论 先找 个 适合 自己 的 机器学习 框架 比如 
tensorflow 或者 基于 它 的 keras 学会 如何 准备 训练 
数据集 比如 本文 中 如何 去 标记 图片 如何 训练 
自己 的 模型 然后 用 训练 得到 的 模型 去 
解决 一些 小 问题 比如 本 文中 的 图像 目标 
检测 等 自己 对 机器 学习 有 一种 具体 的 
认识 之后 经过 一段 时间 的 摸索 会 自然而然 地 
引导 我们 去 了解 底层 的 数学原理 这个 时候 再去 
搞 清楚 这些 原理 是 什么 个人认为 不要 先上来 就要 
搞懂 什么 是 梯度 下降 优化 法 什么 是 目标函数 
什么 是 激活 函数 什么 是 学习率 . . . 
这些 概念 确实 需要 掌握 但是 不是 你 学习 机器学习 
最 开始 的 时候 另外 学习 机器学习 请使用 Python 计划 
下 一篇 介绍 基于 图片 识别 的 视频 自动 分类 
比如 自动 鉴 黄等/nr 软件 