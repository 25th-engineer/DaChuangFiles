在 网上 找了 个 第三 方 智能 机器人 可以 实现 
聊天 语音 等功能 比较 不错 的 今天 我们 就 开始 
智能 机器 人 聊天 的 学习 例子 中 涉及 的 
handler 的 有关 知识 和 json 数据 的 解析 请 
参见 我 的 博客 android 基础 JSON 数据 的 解析 
android 高级 Handler 的 原理 和 android 基础 子 线程 
更新 UI 目录 导航 获取 图灵 机器人 key 图灵 机器人 
的 一些 api 介绍 在 android 程序 中 使用 图灵 
机器人 友情链接 获取 图灵 机器人 key 1 访问 图灵 机器人 
官方网站 www . tuling123 . com 2 点击 右上角 注册 
按钮 3 填写 注册 信息 并 完成 激活 操作 4 
进入 个人 中心 板块 在 机器人 接入 页面 即可 获得 
图灵 APIKEY 获取 之后 您 可以 根据 自己 的 需要 
来 接入 到 微信 公众 号 QQ 等 各个 平台 
中 使用 图灵 机器人 的 一些 api 介绍 API 简介 
图灵 机器人 API 是 在 人工智能 的 核心 能力 包括 
语义 理解 智能 问答 场景 交互 知识 管理 等 的 
基础 上 为 广大 开发者 合作/vn 伙伴/n 和/c 企业/n 提供/v 
的/uj 一系列/m 基于/p 云计算/i 和大/nr 数据/n 平台/n 的/uj 在线/b 服务/vn 
和/c 开发/v 接口/v 开发 者 可以 利用 图灵 机器人 的 
API 创建 各种 在线 服务 灵活 定义 机器人 的 属性 
编辑 机器人 的 智能 问答 内容 打造 个人 专属 智能 
交互 机器人 也 支持 多 渠道 微信 公众 平台 QQ 
聊天 的 快速 接入 接口 地址 http / / www 
. tuling123 . com / openapi / api 请求 方式 
HTTP POST / GET 注 若 采用 get 方式 请求 
需将 参数 中的 空格 须用 % 20 替换 URL 转码 
否则 会被 服务器 当作 无效 请求 拒绝 我们 更 推荐 
使用 post 方式 请求 请求 参数 请求 URL 示例 http 
/ / www . tuling123 . com / openapi / 
api key = APIKEY & info = 今天天气 怎么样 详细 
文档 请 参见 官网 http / / tuling123 . com 
/ html / doc / api . html 在 android 
程序 中 使用 图灵 机器 人 我们 创建 一个 android 
项目 来 体验 一下 图灵 机器人 的 用法 项目 结构 
如下 使用 步骤 发送 http 请求 url 为 http / 
/ www . tuling123 . com / openapi / api 
info = 你 要 发送 的 信息 得到 响应 结果 
是 一个 Json 格式 的 信息 用 Json 解析 结果 
得到 有用 的 信息 一 在 layout 中 简单 的 
布局 增加 一个 TextView 用于 显示 返回 的 Json 数据 
EditView 用于 用户 输入 发送 的 信息 Button 是 发送 
按钮 xml version = 1.0 encoding = utf 8 LinearLayout 
xmlns android = http / / schemas . android . 
com / apk / res / android xmlns tools = 
http / / schemas . android . com / tools 
android layout _ width = match _ parent android layout 
_ height = match _ parent android orientation = vertical 
tools context = com . example . linux . robottest 
. MainActivity TextView android id = @ + id / 
textView android layout _ width = wrap _ content android 
layout _ height = wrap _ content android text = 
Hello World huhx . / LinearLayout android layout _ width 
= wrap _ content android layout _ height = wrap 
_ content android orientation = horizontal EditText android id = 
@ + id / editView android minWidth = 200dp android 
layout _ width = wrap _ content android layout _ 
height = wrap _ content / Button android layout _ 
marginLeft = 20dp android layout _ width = wrap _ 
content android layout _ height = wrap _ content android 
onClick = sendMessage android text = 发送 / / LinearLayout 
/ LinearLayout 二   在 MainActivity 中 处理 整个 发送 
接收 的 流程 oncreate 方法 中 初始化 一些 数据 private 
final static String TAG = huhxRobot private TextView textView private 
EditText editText private final String apiUrl = http / / 
www . tuling123 . com / openapi / api private 
final String apiKey = 你 的 apikey String urlStr = 
apiUrl + key = + apiKey final static int ROBOT 
_ MESSAGE = 0 @ Override protected void onCreate Bundle 
s a v e d I n s t a 
n c e t a t e { super . 
onCreate s a v e d I n s t 
a n c e t a t e setContentView R 
. layout . activity _ main textView = TextView findViewById 
R . id . textView editText = EditText findViewById R 
. id . editView } 用 post 请求 向 机器 
人 发送 信息 / / 向 机器 人 发送 信息 
public void sendMessage View view { String sendmessage = editText 
. getText . toString final String params = info = 
+ sendmessage new Thread new Runnable { @ Override public 
void run { H t t p U R L 
C o n n e c t i o n 
connection = null OutputStream outputStream = null BufferedReader reader = 
null StringBuilder result = new StringBuilder String line = try 
{ URL url = new URL urlStr connection = H 
t t p U R L C o n n 
e c t i o n url . openConnection connection 
. setRequestMethod POST connection . setReadTimeout 5000 connection . s 
e t C o n n e c t T 
i m e o u t 5000 outputStream = connection 
. getOutputStream outputStream . write params . getBytes reader = 
new BufferedReader new I n p u t t r 
e a m R e a d e r connection 
. getInputStream while line = reader . readLine = null 
{ result . append line } Message message = new 
Message message . obj = result . toString message . 
what = ROBOT _ MESSAGE handler . sendMessage message } 
catch Exception e { e . printStackTrace } finally { 
if reader = null { try { reader . close 
} catch IOException e { e . printStackTrace } } 
if outputStream = null { try { outputStream . close 
} catch IOException e { e . printStackTrace } } 
connection . disconnect } } } . start } handler 
处理信息 若 对 handler 不 了解 的 请 参见 我 
的 博客 在 友情链接 中会 提到 private Handler handler = 
new Handler { @ Override public void handleMessage Message msg 
{ switch msg . what { case ROBOT _ MESSAGE 
String Jsonmessage = String msg . obj Log . i 
TAG Jsonmessage String text = try { JSONObject jsonObject = 
new JSONObject Jsonmessage text = String jsonObject . get text 
} catch JSONException e { e . printStackTrace } textView 
. setText Jsonmessage Log . i TAG text Toast . 
makeText MainActivity . this text Toast . LENGTH _ SHORT 
. show } } } 三 在 Manifest 中 声明 
网络 权限 uses permission android name = android . permission 
. INTERNET / 四 输出 结果 如下 输入 hello 结果 
{ code 100000 text 你 也好 嘻嘻 } 五 异常 
码 的 说明 code 说明 100000 文 本类 200000 链接 
类 302000 新闻 类 308000 菜谱 类 313000 儿童 版 
儿歌 类 314000 儿童 版 诗 词类 40001 参数 key 
错误 40002 请求 内容 info 为 空 40004 当天 请求 
次数 已 使用 完 40007 数据格式 异常 六 自定义 回复 
功能 在 个人 中心 左侧 NLP 知识库 新增 测试 一下 
输入 huhx 结果 huhx 的 http / / www . 
cnblogs . com / huhx 友情链接 handler 的 使用 原理 
    android 高级 Handler 的 原理 handler 的 简单 
使用     android 基础 子 线程 更新 UIjson 数据 
的 解析               android 
基础 JSON 数据 的 解析 