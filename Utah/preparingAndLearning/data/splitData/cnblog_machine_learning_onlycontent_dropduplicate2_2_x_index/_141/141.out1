php ml 是 一个 使用 PHP 编写 的 机器学习 库 
虽然 我们 知道 python 或者 是 C + + 提供 
了 更多 机器学习 的 库 但 实际上 他们 大多 都 
略显 复杂 配置 起来 让 很多 新手 感到 绝望 php 
ml 这个 机器学习 库 虽然 没有 特别 高大 上 的 
算法 但 其 具有 最 基本 的 机器学习 分类 等 
算法 我们 的 小 公司 做 一些 简单 的 数据 
分析 预测 等等 都是 够用 的 我们 的 项目 中 
追求 的 应该 是 性价比 而 不是 过分 的 效率 
和 精度 一些 算法 和库/nr 看上去 非常 厉害 但 如果 
我们 考虑 快速 上线 而 我们 的 技术 人员 没有 
机器学习 方面 的 经验 那么 复杂 的 代码 和 配置 
反而会 拖累 我们 的 项目 而 如果 我们 本身 就是 
做 一个 简单 的 机器学习 应用 那么/r 研究/vn 复杂/a 库/n 
和/c 算法/n 的/uj 学习/v 成本/n 很显然/i 高/a 了点/i 而且 项目 
出了 奇奇怪怪 的 问题 我们 能 解决 吗 需求 改变 
了 怎么办 相信 大家 都 有过 这种 经历 做着 做着 
程序 忽然 报错 自己 怎么 都搞不/nr 清楚 原因 上 谷歌 
或 百度 一搜 只 搜出 一条 满足 条件 的 问题 
在 五年 十年前 提问 然后 零 回复 所以 选择 最 
简单 最 高效 性价比 最高 的 做法 是 必须 的 
php ml 的 速度 不算 慢 赶紧 换 php7 吧 
而且 精度 也 不错 毕竟 算法 都 一样 而且 php 
是 基于 c 的 博主 最 看不惯 的 就是 拿 
python 和 Java PHP 之间 比 性能 比 适用范围 真要 
性能 请 你 拿 C 开发 真要 追求 适用范围 也 
请用 C 甚至 汇编 首先 我们 要 使用 这个 库 
需要 先 下载 这个 库 在 github 可以 下载 到 
这个 库文件 https / / github . com / php 
ai / php ml 当然 更 推荐 使用 composer 来 
下载 该 库 自动 配置 当 下载 好了 以后 我们 
可以 看一看 这个 库 的 文档 文档 都是 一些 简单 
的 小 示例 我们 可以 自己 建 一个 文件 尝试 
一下 都 浅显易懂 接下来 我们 来拿 实际 的 数据 测试 
一下 数据集 一个 是 Iris 花蕊 的 数据集 另一个 由于 
记录 丢失 所以 不 知道 是 有关 什么 的 数据 
了 Iris 花蕊 部分 数据 有三种 不同 的 分类 不知名 
数据集 小数点 被打 成了 逗号 所以 计算 时还/nr 需要 处理 
一下 我们 先 处理 不 知名 数据集 首先 我们 的 
不知名 数据集 的 文件 名为 data . txt 而 这个 
数据集 刚好 可以 先 绘制 成x/nr y 折线图 所以 我们 
先将 原 数据 绘制 成 一个 折线图 由于 x 轴比 
较长 所以 我们 只 需要 看 清楚 它 大致 的 
形状 即可 绘制 采用 了 php 的 jpgraph 库 代码 
如下 1 php 2 include _ once . / src 
/ jpgraph . php 3 include _ once . / 
src / jpgraph _ line . php 4 5 $ 
g = new Graph 1920 1080 / / jpgraph 的 
绘制 操作 6 $ g SetScale textint 7 $ g 
title Set data 8 9 / / 文件 的 处理 
10 $ file = fopen data . txt r 11 
$ labels = array 12 while feof $ file { 
13 $ data = explode fgets $ file 14 $ 
data 1 = str _ replace . $ data 1 
/ / 数据处理 将 数据 中的 逗号 修正 为 小数点 
15 $ labels int $ data 0 = float $ 
data 1 / / 这里 将 数据 以 键值 的 
方式 存入 数组 方便 我们 根据 键 来 排序 16 
} 17 18 ksort $ labels / / 按键 的 
大小 排序 19 20 $ x = array / / 
x 轴 的 表示 数据 21 $ y = array 
/ / y 轴 的 表示 数据 22 foreach $ 
labels as $ key = $ value { 23 array 
_ push $ x $ key 24 array _ push 
$ y $ value 25 } 26 27 28 $ 
linePlot = new LinePlot $ y 29 $ g xaxis 
SetTickLabels $ x 30 $ linePlot SetLegend data 31 $ 
g Add $ linePlot 32 $ g Stroke 在有 了 
这个 原图 做 对比 我们 接下来 进行 学习 我们 采用 
php ml 中的 LeastSquars 来 进行 学习 我们 测试 的 
输出 需要 存入 文件 方便 我们 可以 画 一个 对 
比图 学习 代码 如下 1 php 2 require vendor / 
autoload . php 3 4 use Phpml \ Regression \ 
LeastSquares 5 use Phpml \ ModelManager 6 7 $ file 
= fopen data . txt r 8 $ samples = 
array 9 $ labels = array 10 $ i = 
0 11 while feof $ file { 12 $ data 
= explode fgets $ file 13 $ samples $ i 
0 = int $ data 0 14 $ data 1 
= str _ replace . $ data 1 15 $ 
labels $ i = float $ data 1 16 $ 
i + + 17 } 18 fclose $ file 19 
20 $ regression = new LeastSquares 21 $ regression train 
$ samples $ labels 22 23 / / 这个 a 
数组 是 根据 我们 对 原 数据 处理 后的x/nr 值 
给出 的 做 测试 用 24 $ a = 0 
2 3 4 5 6 7 8 9 10 11 
12 13 14 15 16 17 18 20 22 23 
24 25 26 27 29 30 31 37 40 41 
45 48 53 55 57 60 61 108 124 25 
for $ i = 0 $ i count $ a 
$ i + + { 26 file _ put _ 
contents putput . txt $ regression predict $ a $ 
i . \ n FILE _ APPEND / / 以 
追加 的 方式 存入 文件 27 } 之后 我们 将 
存入 文件 的 数据 读出来 绘制 一个 图形 先 贴 
最后 的 效果图 代码 如下 1 php 2 include _ 
once . / src / jpgraph . php 3 include 
_ once . / src / jpgraph _ line . 
php 4 5 $ g = new Graph 1920 1080 
6 $ g SetScale textint 7 $ g title Set 
data 8 9 $ file = fopen putput . txt 
r 10 $ y = array 11 $ i = 
0 12 while feof $ file { 13 $ y 
$ i = float fgets $ file 14 $ i 
+ + 15 } 16 17 $ x = 0 
2 3 4 5 6 7 8 9 10 11 
12 13 14 15 16 17 18 20 22 23 
24 25 26 27 29 30 31 37 40 41 
45 48 53 55 57 60 61 108 124 18 
19 $ linePlot = new LinePlot $ y 20 $ 
g xaxis SetTickLabels $ x 21 $ linePlot SetLegend data 
22 $ g Add $ linePlot 23 $ g Stroke 
可以 发现 图形 出入 还是 比 较大 的 尤其 是 
在 图形 锯齿 比 较多 的 部分 不过 这 毕竟 
是 40组 数据 我们 可以 看出 大概 的 图形 趋势 
是 吻合 的 一般 的 库 在做 这种 学习 时 
数据量 低 的 情况 下 准确度 都 非常 低 要 
达到 比较 高的/nr 精度 需要 大量 的 数据 万条 以上 
的 数据 量 是 必要 的 如果 达 不到 这个 
数据 要求 那 我们 使用 任何 库 都是 徒劳 的 
所以 机器 学习 的 实践 中 真正 难 的 不在 
精度 低 配置 复杂 等 技术 问题 而是 数据 量 
不够 或者 质量 太低 一组 数据 中 无用 的 数据 
太多 在做 机器学习 之前 对 数据 的 预先 处理 也 
是 必要 的 接下来 我们 来 对 花蕊 数据 进行 
测试 一共 三种 分类 由于 我们 下 载到 的 是 
csv 数据 所以 我们 可以 使用 php ml 官方 提供 
的 操作 csv 文件 的 方法 而 这里 是 一个 
分 类 问题 所以 我们 选择 库 提供 的 SVC 
算法 来 进行 分类 我们 把 花蕊 数据 的 文件名 
定为 Iris . csv 代码 如下 1 php 2 require 
vendor / autoload . php 3 4 use Phpml \ 
Classification \ SVC 5 use Phpml \ u p p 
o r t V e c t o r M 
a c h i n e \ Kernel 6 use 
Phpml \ Dataset \ CsvDataset 7 8 $ dataset = 
new CsvDataset Iris . csv 4 false 9 $ classifier 
= new SVC Kernel LINEAR $ cost = 1000 10 
$ classifier train $ dataset getSamples $ dataset getTargets 11 
12 echo $ classifier predict $ argv 1 $ argv 
2 $ argv 3 $ argv 4 / / $ 
argv 是 命令行 参数 调试 这种 程序 使用 命令行 较 
方便 是不是 很 简单 短短 12行 代码 就 搞定 了 
接下来 我们 来 测试 一下 根据 我们 上面 贴出 的 
图 当 我们 输入 5   3.3   1.4   
0.2 的 时候 输出 应该 是 Iris setosa 我们 看 
一下 看 至少 我们 输入 一个 原来 就 有的 数据 
得到 了 正确 的 结果 但是 我们 输 入原 数据 
集中 没有 的 数据 呢 我们 来 测试 两组 由 
我们 之前 贴出 的 两张 图 的 数据 看 我们 
输入 的 数据 在 数据 集中 并不 存在 但 分类 
按照 我们 初步 的 观察 来看 是 合理 的 所以 
这个 机器学习 库 对于 大多数 的 人 来说 都是 够用 
的 而 大多数 鄙视 这个 库 鄙视 那个 库 大谈 
性能 的 人 基本上 也 不是 什么 大牛 真正 的 
大牛 已经 忙着 捞钱 去了 或者 正在 做 学术 研究 
等等 我们 更多 的 应该 是 掌握 算法 了解 其中 
的 道理 和 玄机 而 不是 夸夸其谈 当然 这个 库 
并不 建议 用 在 大型 项目 上 只 推荐 小型 
项目 或者 个人 项目 等 jpgraph 只 依赖 GD 库 
所以 下载 引用 之后 就 可以 使用 大量/n 的/uj 代码/n 
都/d 放在/v 了/ul 绘制/n 图形/n 和/c 初期/t 的/uj 数据/n 处理/v 
上/f 由于 库 的 出色 封装 学习 代码 并不 复杂 
需要 所有 代码 或者 测试 数据集 的 小伙伴 可以 留言 
或者 私信 等 我 提供 完整 的 代码 解压 即用 
博客园 的 空间 太小 不适合 上传 文件 博主 也 正在 
学习 和 大家 共同 努力 