在 学习 机器学习 算法 的 过程 中 我们 经常 需要 
数据 来 验证 算法 调试 参数 但是 找 到 一组 
十分 合适 某种 特定 算法 类型 的 数据 样本 却不 
那么 容易 还好 numpy scikit learn 都 提供 了 随机 
数据 生成 的 功能 我们/r 可以/c 自己/r 生/vn 成/n 适合/v 
某/r 一种/m 模型/n 的/uj 数据/n 用 随机 数据 来做 清洗 
归一化 转换 然后 选择 模型 与 算法 做 拟合 和 
预测 下 面对 scikit learn 和 numpy 生成 数据 样本 
的 方法 做 一个 总结 完整 代码 参见 我 的 
github 1 . numpy 随机 数据 生成 APInumpy 比较 适合 
用来 生产 一些 简单 的 抽样 数据 API 都在 random 
类 中 常见 的 API 有 1 rand d0   
d1   . . .   dn 用来 生成 d0xd1x 
. . . dn 维 的 数组 数组 的 值 
在 0 1 之间 例如 np . random . rand 
3 2 2 输出 如下 3x2x2 的 数组 array 0.49042678 
  0.60643763 0.18370487   0.10836908 0.38269728   0.66130293 0.5775944   
0.52354981 0.71705929   0.89453574 0.36245334   0.37545211 2 randn d0 
  d1   . . .   dn 也是 用来 
生成 d0xd1x . . . dn 维 的 数组 不过 
数组 的 值 服从 N 0 1 的 标准 正态分布 
例如 np . random . randn 3 2 输出 如下 
3x2 的 数组 这些 值 是 N 0 1 的 
抽样 数据 array 0.5889483 0.34054626 2.03094528 0.21205145 0.20804811 0.97289898 如果 
需要 服从 $ N \ mu \ sigma ^ 2 
$ 的 正态分布 只 需要 在 randn 上 每个 生成 
的 值 x 上 做 变换 $ \ sigma x 
+ \ mu $ 即可 例如 例如 2 * np 
. random . randn 3 2 + 1 输出 如下 
3x2 的 数组 这些 值 是 N 1 4 的 
抽样 数据 array 2.32910328 0.677016   0.09049511   1.04687598 2.13493001 
  3.30025852 3 randint low   high   size 生成 
随机 的 大小 为 size 的 数据 size 可以为 整数 
为 矩阵 维数 或者 张量 的 维数 值 位于 半 
开区间 low high 例如 np . random . randint 3 
size = 2 3 4 返回 维数 维 2x3x4 的 
数据 取值 范围 为 最大值 为 3 的 整数 array 
2 1 2 1 0 1 2 1 2 1 
0 2 0 1 0 0 1 1 2 1 
1 0 1 2 再 比如 np . random . 
randint 3 6 size = 2 3 返回 维数 为 
2x3 的 数据 取值 范围 为 3 6 . array 
4 5 3 3 4 5 4 random _ integers 
low   high   size 和 上面 的 randint 类似 
区别 在与 取值 范围 是 闭区间 low high 5 random 
_ sample size 返回 随机 的 浮点数 在 半 开区间 
0.0 1.0 如果 是 其他 区间 a b 可以 加以 
转换 b a * random _ sample size + a 
例如 5 2 * np . random . random _ 
sample 3 + 2 返回 2 5 之间 的 3个 
随机数 array 2.87037573   4.33790491   2.1662832 2 . scikit 
learn 随机 数据 生成 API 介绍 scikit learn 生成 随机 
数据 的 API 都在 datasets 类 之中 和 numpy 比起来 
可以 用 来生 成 适合 特定 机器学习 模型 的 数据 
常用 的 API 有 1 用 make _ regression 生成 
回归模型 的 数据 2 用 make _ hastie _ 10 
_ 2 make _ classification 或者 make _ multilabel _ 
classification 生成 分类 模型 数据 3 用 make _ blobs 
生成 聚 类 模型 数据 4 用 make _ gaussian 
_ quantiles 生成 分组 多维 正态分布 的 数据 3 . 
scikit learn 随机 数据 生成 实例 3.1 回归模型 随机 数据 
这里 我们 使用 make _ regression 生成 回归模型 数据 几个 
关键 参数 有n_/nr samples 生成 样本数 n _ features 样本 
特征 数 noise 样本 随机 噪音 和 coef 是否 返回 
回归系数 例子 代码 如下 import numpy as np import matplotlib 
. pyplot as plt % matplotlib inline from sklearn . 
datasets . samples _ generator import make _ regression # 
X 为 样本 特征 y 为 样本 输出 coef 为 
回归系数 共 1000个 样本 每个 样本 1个 特征 X y 
coef = make _ regression n _ samples = 1000 
n _ features = 1 noise = 10 coef = 
True # 画图 plt . scatter X y color = 
black plt . plot X X * coef color = 
blue linewidth = 3 plt . xticks plt . yticks 
plt . show 输出 的 图 如下 3.2 分类 模型 
随机 数据 这里 我们 用 make _ classification 生成 三元 
分类 模型 数据 几个 关键 参数 有n_/nr samples 生成 样本数 
n _ features 样本 特征 数 n _ redundant 冗余 
特征 数 和n_/nr classes 输出 的 类别 数 例子 代码 
如下 import numpy as np import matplotlib . pyplot as 
plt % matplotlib inline from sklearn . datasets . samples 
_ generator import make _ classification # X1 为 样本 
特征 Y1 为 样本 类别 输出 共 400个 样本 每个 
样本 2个 特征 输 出有 3个 类别 没有 冗余 特征 
每个 类别 一个 簇 X1 Y1 = make _ classification 
n _ samples = 400 n _ features = 2 
n _ redundant = 0 n _ clusters _ per 
_ class = 1 n _ classes = 3 plt 
. scatter X1 0 X1 1 marker = o c 
= Y1 plt . show 输出 的 图 如下 3.3 
聚 类 模型 随机 数据 这里 我们 用 make _ 
blobs 生成 聚 类 模型 数据 几个 关键 参数 有n_/nr 
samples 生成 样本数 n _ features 样本 特征 数 centers 
簇 中心 的 个数 或者 自定义 的 簇 中心 和 
cluster _ std 簇 数据 方差 代表 簇 的 聚合 
程度 例子 如下 import numpy as np import matplotlib . 
pyplot as plt % matplotlib inline from sklearn . datasets 
. samples _ generator import make _ blobs # X 
为 样本 特征 Y 为 样本 簇 类别 共 1000个 
样本 每个 样本 2个 特征 共 3个 簇 簇 中心 
在 1 1 1 1 2 2 簇 方差 分别为 
0.4 0.5 0.2 X y = make _ blobs n 
_ samples = 1000 n _ features = 2 centers 
= 1 1 1 1 2 2 cluster _ std 
= 0.4 0.5 0.2 plt . scatter X 0 X 
1 marker = o c = y plt . show 
输出 的 图 如下 3.4 分组 正态分布 混合 数据 我们 
用 make _ gaussian _ quantiles 生成 分组 多维 正态分布 
的 数据 几个 关键 参数 有n_/nr samples 生成 样本数 n 
_ features 正态分布 的 维数 mean 特征 均值 cov 样本 
协方差 的 系数 n _ classes 数据 在 正态分布 中 
按 分位数 分配 的 组 数 例子 如下 import numpy 
as np import matplotlib . pyplot as plt % matplotlib 
inline from sklearn . datasets import make _ gaussian _ 
quantiles # 生成 2 维 正态分布 生成 的 数据 按 
分位数 分成 3组 1000个 样本 2个 样本 特征 均值 为 
1 和2/nr 协方差 系数 为 2 X1 Y1 = make 
_ gaussian _ quantiles n _ samples = 1000 n 
_ features = 2 n _ classes = 3 mean 
= 1 2 cov = 2 plt . scatter X1 
0 X1 1 marker = o c = Y1 输出 
图 如下 以上 就是 生产 随机 数据 的 一个 总结 
希望 可以 帮 到 学习 机器学习 算法 的 朋友们 欢迎 
转载 转载 请 注明 出处 欢迎 沟通交流 liujianping ok @ 
163 . com 