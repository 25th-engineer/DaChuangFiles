为了 对 GMM HMM 在 语音 识别 上 的 应用 
有个/nr 宏观 认识 花了 些 时间 读了 下 HTK 用 
htk 完成 简单 的 孤立 词 识别 的 部分 源码 
对 该 算法 总算 有 了点 大概 认识 达到 了 
预期 我 想要 的 不得 不说 网络 上 关于 语音 
识别 的 通俗 易懂 教程 太少 都是 各种 公式 满天飞 
很少 有说/nr 具体 细节 的 当然 了 那/r 需要/v 有/v 
实战/v 经验/n 才行/i 下面 总结 以下几点 对其 有个 宏观 印象 
即可 以 孤立 词 识别 为例 一 每个 单词 的 
读音 都 对应 一个 HMM 模型 大家 都 知道 HMM 
模型 中 有个 状态 集 那么 每个 状态 用 什么 
来 表示 呢 数字 向量 矩阵 其实 这个 状态 集中 
的 状态 没有 具体 的 数学 要求 只是 一个 名称 
而已 你 可以 用 1 2 3 表示 也 可以 
用 a b c 表示 另外 每个 HMM 模型 中 
到底 该 用 多少 个 状态 是 通过 先验 知识 
人为 设定 的 二 HMM 的 每一个 状态 都 对应 
有一个 观察 值 这个 观察 值 可以 是 一个 实数 
也 可以 是个 向量 且 每个 状态 对应 的 观察 
值 的 维度 应该 相同 假设 现在 有 一个 单词 
的 音频文件 首先 需要 将 其 进行 采样 得到 数字信息 
A / D 转换 然后 分 帧 进行 MFCC 特征提取 
假设 每 一帧 音频 对应 的 MFCC 特征 长度 为 
39 则 每个 音频文件 就 转换 成了 N 个 MFCC 
向量 不同 音频文件 对应 的 N 可能 不同 这 就成 
了 一个 序列 而在 训练 HMM 模型 的 参数 时 
比如 用 Baum Welch 算法 每次 输入 到 HMM 中 
的 数据 要求 就是 一个 观测值 序列 这时 每个 状态 
对应 的 观测值 为 39 维 的 向量 因为 向量 
中 元素 的 取值 是 连续 的 需要用 多维 密度 
函 数来 模拟 通常 情况下 用 的 是 多维 高斯 
函数 在 GMM HMM 体系 中 这个 拟合 函数 是 
用 K 个 多维 高斯 混合 得到 的 假设 知道 
了 每个 状态 对应 的 K 个 多维 高斯 的 
所有 参数 则 该 GMM 生成 该 状态 上 某一个 
观察 向量 一帧 音频 的 MFCC 系数 的 概率 就 
可以 求 出来了 三 对 每个 单词 建立 一个 HMM 
模型 需要 用到 该 单词 的 训练样本 这些 训练样本 是 
提前 标注 好 的 即 每个 样本 对应 一段 音频 
该 音频 只 包含 这个 单词 的 读音 当 有了 
该 单词 的 多个 训练样本 后 就用 这些 样本 结合 
Baum Welch 算法 和 EM 算法 来 训练 出 GMM 
HMM 的 所有 参数 这些 参数 包括 初始状态 的 概率 
向量 状态 之间 的 转移 矩阵 每个 状态 对应 的 
观察 矩阵 这里 对应 的 是 GMM 即 每个 状态 
对应 的 K 个 高斯 的 权值 每个 高斯 的 
均值 向量 和 方差 矩阵 四 在 识别 阶段 输入 
一段 音频 如果 该 音频 含有 多个 单词 则 可以 
手动 先 将其 分割 开 考虑 的 是 最简单 的 
方法 然后 提取 每个 单词 的 音频 MFCC 特征 序列 
将该 序列 输入 到 每个 HMM 模型 已 提前 训 
练好 的 中 采用 前 向 算法 求出 每个 HMM 
模型 生成 该 序列 的 概率 最后 取 最大 概率 
对应 的 那个 模型 而 那个 模型 所 表示 的 
单词 就是 我们 识别 的 结果 五 在 建立 声学 
模型 时 可以 用 Deep Learning 的 方法 来 代替 
GMM HMM 中的 GMM 因为 GMM 模拟 任意 函数 的 
功能 取决于 混合 高斯 函数 的 个数 所以 具有 一定 
的 局限性 属于 浅层 模型 而 Deep Network 可以 模拟 
任意 的 函数 因而 表达能力 更强 注意 这里 用来 代替 
GMM 的 Deep Nets 模型 要求 是 产生 式 模型 
比如 DBN DBM 等 因为 在 训练 HMM DL 网络 
时 需要 用到 HMM 的 某个 状态 产生 一个 样本 
的 概率 六 GMM HMM 在 具体 实现 起来 还是 
相当 复杂 的 七 一般 涉及 到 时间 序列 时 
才会 使用 HMM 比如 这里 音频 中 的 语音 识别 
视频 中 的 行为 识别 等 如果 我们 用 GMM 
HMM 对 静态 的 图片 分类 因为 这里 没 涉及 
到 时间 信息 所以 HMM 的 状态 数 可 设为 
1 那么 此时 的 GMM HMM 算法 就 退化 成 
GMM 算法 了 MFCC MFCC 的 matlab 实现 教程 可 
参考 张智 星 老师 的 网页 教程 mfcc .   
最 基本 的 12 维 特征 function mfcc = frame2mfcc 
frame fs filterNum mfccNum plotOpt % frame2mfcc Frame to MFCC 
conversion . % Usage mfcc = frame2mfcc frame fs filterNum 
mfccNum plotOpt % % For example % waveFile = what 
_ movies _ have _ you _ seen _ recently 
. wav % y fs nbits = wavReadInt waveFile % 
startIndex = 12000 % frameSize = 512 % frame = 
y startIndex startIndex + frameSize 1 % frame2mfcc frame fs 
20 12 1 % Roger Jang 20060417 if nargin 1 
selfdemo return end if nargin 2 fs = 16000 end 
if nargin 3 filterNum = 20 end if nargin 4 
mfccNum = 12 end if nargin 5 plotOpt = 0 
end frameSize = length frame % = = = = 
= = Preemphasis should be done at wave level % 
a = 0.95 % frame2 = filter 1 a 1 
frame frame2 = frame % = = = = = 
= Hamming windowing frame3 = frame2 . * hamming frameSize 
% = = = = = = FFT fftMag fftPhase 
fftFreq fftPowerDb = fftOneSide frame3 fs % = = = 
= = = Triangular band pass filter bank triFilterBankPrm = 
g e t T r i F i l t 
e r B a n k P r m fs 
filterNum % Get parameters for triangular band pass filter bank 
% Triangular bandpass filter . for i = 1 filterNum 
tbfCoef i = dot fftPowerDb trimf fftFreq triFilterBankPrm i % 
得到 filterNum 个 滤波 系数 end % = = = 
= = = DCT mfcc = zeros mfccNum 1 % 
DCT 变换 的 前后 个数 也 没有 变 for i 
= 1 mfccNum coef = cos pi / filterNum * 
i * 1 filterNum 0.5 % mfcc 中的 前 mfccNum 
个 系数 mfcc i = sum coef . * tbfCoef 
% 直接 按照 DCT 公式 end % = = = 
= = = Log energy % logEnergy = 10 * 
log10 sum frame . * frame % mfcc = logEnergy 
mfcc if plotOpt subplot 2 1 1 plot frame . 
set gca xlim inf inf title Input frame subplot 2 
1 2 plot mfcc . set gca xlim inf inf 
title MFCC vector end % = = = = = 
= trimf . m from fuzzy toolbox function y = 
trimf x prm % 由 频率 的 横坐标 算出 三角形 
内 的 纵坐标 0 ~ 1 a = prm 1 
b = prm 2 c = prm 3 y = 
zeros size x % Left and right shoulders y = 
0 index = find x = a | c = 
x y index = zeros size index % 只 考虑 
三角 波 内 的 量 % Left slope if a 
~ = b index = find a x & x 
b y index = x index a / b a 
end % right slope if b ~ = c index 
= find b x & x c y index = 
c x index / c b end % Center y 
= 1 index = find x = = b y 
index = ones size index % = = = = 
= = Self demo function selfdemo waveFile = what _ 
movies _ have _ you _ seen _ recently . 
wav y fs nbits = wavReadInt waveFile startIndex = 12000 
frameSize = 512 frame = y startIndex startIndex + frameSize 
1 feval mfilename frame fs 20 12 1 ZCR 过 
0 检测 用于 判断 每 一帧 中 过 零点 的 
数量 情况 最 简单 的 版本 可 参考 zeros cross 
rate . waveFile = csNthu . wav frameSize = 256 
overlap = 0 y fs nbits = wavread waveFile frameMat 
= enframe y frameSize overlap frameNum = size frameMat 2 
for i = 1 frameNum frameMat i = frameMat i 
mean frameMat i % mean justification end zcr = sum 
frameMat 1 end 1 . * frameMat 2 end 0 
sampleTime = 1 length y / fs frameTime = 0 
frameNum 1 * frameSize overlap + 0.5 * frameSize / 
fs subplot 2 1 1 plot sampleTime y ylabel Amplitude 
title waveFile subplot 2 1 2 plot frameTime zcr . 
xlabel Time sec ylabel Count title ZCR EPD 端点 检测 
检测 声音 的 起始 点 和 终止 点 可 参考 
EPD in Time Domain 在时 域中 的 最简单 检测 方法 
waveFile = sunday . wav wave fs nbits = wavread 
waveFile frameSize = 256 overlap = 128 wave = wave 
mean wave % zero mean substraction frameMat = buffer2 wave 
frameSize overlap % frame blocking 每 一列 代表 一帧 frameNum 
= size frameMat 2 % no . of frames volume 
= frame2volume frameMat % volume 求 每 一帧 的 能量 
绝对值 或者 平方和 volume 为 行向量 volumeTh1 = max volume 
* 0.1 % volume threshold 1 volumeTh2 = median volume 
* 0.1 % volume threshold 2 volumeTh3 = min volume 
* 10 % volume threshold 3 volumeTh4 = volume 1 
* 5 % volume threshold 4 index1 = find volume 
volumeTh1 % 找出 volume 大于 阈值 的 那些 帧 序号 
index2 = find volume volumeTh2 index3 = find volume volumeTh3 
index4 = find volume volumeTh4 % f r a m 
e 2 s a m p l e I n 
d e x 为从 帧 序号 找到 样本点 的 序号 
即 每 一个 采样 点 的 序号 % endPointX 长度 
为 2 包含 了 起点 和 终点 的 样本点 序号 
endPoint1 = f r a m e 2 s a 
m p l e I n d e x index1 
1 index1 end frameSize overlap endPoint2 = f r a 
m e 2 s a m p l e I 
n d e x index2 1 index2 end frameSize overlap 
endPoint3 = f r a m e 2 s a 
m p l e I n d e x index3 
1 index3 end frameSize overlap endPoint4 = f r a 
m e 2 s a m p l e I 
n d e x index4 1 index4 end frameSize overlap 
subplot 2 1 1 time = 1 length wave / 
fs plot time wave ylabel Amplitude title Waveform axis inf 
inf 1 1 line time endPoint1 1 * 1 1 
1 1 color m % 标 起点 终点线 line time 
endPoint2 1 * 1 1 1 1 color g line 
time endPoint3 1 * 1 1 1 1 color k 
line time endPoint4 1 * 1 1 1 1 color 
r line time endPoint1 end * 1 1 1 1 
color m line time endPoint2 end * 1 1 1 
1 color g line time endPoint3 end * 1 1 
1 1 color k line time endPoint4 end * 1 
1 1 1 color r legend Waveform Boundaries by threshold 
1 Boundaries by threshold 2 Boundaries by threshold 3 Boundaries 
by threshold 4 subplot 2 1 2 frameTime = f 
r a m e 2 s a m p l 
e I n d e x 1 frameNum frameSize overlap 
plot frameTime volume . ylabel Sum of Abs . title 
Volume axis tight line min frameTime max frameTime volumeTh1 * 
1 1 color m line min frameTime max frameTime volumeTh2 
* 1 1 color g line min frameTime max frameTime 
volumeTh3 * 1 1 color k line min frameTime max 
frameTime volumeTh4 * 1 1 color r legend Volume Threshold 
1 Threshold 2 Threshold 3 Threshold 4 GMM GMM 用在 
拟合 数据分布 上 本质上 是 先 假设 样本 的 概率 
分布 为 GMM 然后 用 多个 样本 去 学习 这些 
GMM 的 参数 GMM 建模 在 语音 中 可 用于 
某个 单词 的 发音 某 个人 的 音色 等 其 
训练 过程 可 参考 speaker recognition . function M V 
W logProb = gmmTrain data gaussianNum dispOpt % gmmTrain Parameter 
training for gaussian mixture model GMM % Usage function M 
V W logProb = gmm data gaussianNum dispOpt % data 
dim x dataNum matrix where each column is a data 
point % gaussianNum No . of Gaussians or initial centers 
% dispOpt Option for displaying info during training % M 
dim x meanNum matrix where each column is a mean 
vector % V 1 x gaussianNum vector where each element 
is a variance for a Gaussian % W 1 x 
gaussianNum vector where each element is a weighting factor for 
a Gaussian % Roger Jang 20000610 if nargin = = 
0 selfdemo return end if nargin 3 dispOpt = 0 
end maxLoopCount = 50 % Max . iteration minImprove = 
1e 6 % Min . improvement minVariance = 1e 6 
% Min . variance logProb = zeros maxLoopCount 1 % 
Array for objective function dim dataNum = size data % 
Set initial parameters % Set initial M % M = 
data 1 + floor rand gaussianNum 1 * dataNum % 
Randomly select several data points as the centers if length 
gaussianNum = = 1 % Using vqKmeans to find initial 
centers fprintf Start KMEANS to find the initial mu . 
. . \ n % M = vqKmeansMex data gaussianNum 
0 M = vqKmeans data gaussianNum 0 % 利用 聚 
类 的 方法 求 均值 聚 成 gaussianNum 类 % 
M = vqLBG data gaussianNum 0 fprintf Start GMM training 
. . . \ n if any any ~ isfinite 
M keyboard end else % gaussianNum is in fact the 
initial centers M = gaussianNum gaussianNum = size M 2 
end % Set initial V as the distance to the 
nearest center if gaussianNum = = 1 V = 1 
else distance = pairwiseSqrDist M % pairwiseSqrDist 是 dll % 
distance = pairwiseSqrDist2 M distance 1 gaussianNum + 1 gaussianNum 
^ 2 = inf % Diagonal elements are inf V 
index = min distance % Initial variance for each Gaussian 
end % Set initial W W = ones 1 gaussianNum 
/ gaussianNum % Weight for each Gaussian 初始 化时 是 
均分 权值 if dispOpt & dim = = 2 displayGmm 
M V data end for i = 1 maxLoopCount % 
开始 迭代 训练 参数 EM 算法 % Expectation step % 
P i j is the probability of data j to 
the i th Gaussian % Prob 为 每个 样本 在 
GMM 下 的 概率 prob P = gmmEval data M 
V W logProb i = sum log prob % 所有 
样本 的 联合 概率 if dispOpt fprintf i = % 
d log prob . = % f \ n i 
1 logProb i end PW = diag W * P 
BETA = PW . / ones gaussianNum 1 * sum 
PW % BETA i j is beta _ i x 
_ j sumBETA = sum BETA 2 % Maximization step 
eqns 2.96 to 2.98 from Bishop p . 67 M 
= data * BETA . / ones dim 1 * 
sumBETA DISTSQ = pairwiseSqrDist M data % Distance of M 
to data % DISTSQ = pairwiseSqrDist2 M data % Distance 
of M to data V = max sum BETA . 
* DISTSQ 2 . / sumBETA / dim minVariance % 
2.97 W = 1 / dataNum * sumBETA % 2.98 
if dispOpt & dim = = 2 displayGmm M V 
data end if i 1 if logProb i logProb i 
1 minImprove break end end end prob P = gmmEval 
data M V W logProb i = sum log prob 
fprintf Iteration count = % d log prob . = 
% f \ n i logProb i logProb i + 
1 maxLoopCount = % = = = = = = 
Self Demo = = = = = = function selfdemo 
% data gaussianNum = dcdata 2 data = rand 1000 
2 gaussianNum = 8 data = data plotOpt = 1 
M V W lp = feval mfilename data gaussianNum plotOpt 
pointNum = 40 x = linspace min data 1 max 
data 1 pointNum y = linspace min data 2 max 
data 2 pointNum xx yy = meshgrid x y data 
= xx yy z = gmmEval data M V W 
zz = reshape z pointNum pointNum figure mesh xx yy 
zz axis tight box on rotate3d on figure contour xx 
yy zz 30 axis image % = = = = 
= = Other subfunctions = = = = = = 
function displayGmm M V data % Display function for EM 
algorithm figureH = findobj 0 tag mfilename if isempty figureH 
figureH = figure set figureH tag mfilename colordef black plot 
data 1 data 2 . r axis image theta = 
linspace pi pi 21 x = cos theta y = 
sin theta sigma = sqrt V for i = 1 
length sigma circleH i = line x * sigma i 
+ M 1 i y * sigma i + M 
2 i color y end set circleH tag circleH erasemode 
xor else circleH = findobj figureH tag circleH theta = 
linspace pi pi 21 x = cos theta y = 
sin theta sigma = sqrt V for i = 1 
length sigma set circleH i xdata x * sigma i 
+ M 1 i ydata y * sigma i + 
M 2 i end drawnow endSpeaker identification 给 N 个人 
的 语音 资料 用 GMM 可以 训练 这 N 个人 
的 声音 模型 然后 给定 一段 语音 判断 该 语音 
与 这 N 个人 中 哪个 最 相似 方法 是 
求出 该 语音 在 N 个 GMM 模型 下 的 
概率 选出 概率 最大 的 那个 可 参考 speaker recognition 
. function recogRate confusionMatrix speakerData = speakerIdentify speakerData speakerGmm useIntGmm 
% speakerIdentify speaker identification using GMM parameters % Usage recogRate 
confusionMatrix speakerData = speakerIdentify speakerData speakerGmm useIntGmm % speakerData structure 
array generated by speakerDataRead . m % speakerGmm speakerGmm i 
. gmmPrm is the GMM parameters for speaker i . 
% useIntGmm use fixed point GMM % Roger Jang 20070517 
20080726 if nargin 3 useIntGmm = 0 end % = 
= = = = = Speaker identification using GMM parameters 
speakerNum = length speakerData for i = 1 speakerNum % 
fprintf % d / % d Recognizing wave files by 
% s \ n i speakerNum speakerData i . name 
for j = 1 length speakerData i . sentence % 
fprintf \ tSentece % d . . . \ n 
j frameNum = size speakerData i . sentence j . 
fea 2 logProb = zeros speakerNum frameNum % logProb i 
m 表示 第 i 个人 第 j 个 句子 中 
第 m 帧 在 GMM 模型 下 的 log 概率 
% 找出 一个 句子 看 它 属于 哪个 speaker for 
k = 1 speakerNum % fprintf \ t \ tSpeaker 
% d . . . \ n k % logProb 
k = gmmEval speakerData i . sentence j . fea 
speakerGmm k . gmmPrm if ~ useIntGmm % logProb k 
= gmmEvalMex speakerData i . sentence j . fea gmm 
k . mean gmm k . covariance gmm k . 
weight logProb k = gmmEval speakerData i . sentence j 
. fea speakerGmm k . gmmPrm else % logProb k 
= gmmEvalIntMex speakerData i . sentence j . fea gmm 
k . mean gmm k . covariance gmm k . 
weight logProb k = gmmEvalIntMex speakerData i . sentence j 
. fea speakerGmm i . gmmPrm end end cumLogProb = 
sum logProb 2 maxProb index = max cumLogProb speakerData i 
. sentence j . predictedSpeaker = index % 找出 身份 
speakerData i . sentence j . logProb = logProb end 
end % = = = = = = Compute confusion 
matrix and recognition rate confusionMatrix = zeros speakerNum for i 
= 1 speakerNum predictedSpeaker = speakerData i . sentence . 
predictedSpeaker index count = elementCount predictedSpeaker confusionMatrix i index = 
count end recogRate = sum diag confusionMatrix / sum sum 
confusionMatrix GMM HMM 训练 阶段 给出 HMM 的 k 个 
状态 每个 状态下 的 观察 样本 的 生成 可以 用 
一个 概率分布 来 拟合 这里 是 采用 GMM 拟合 的 
其实 可以 把 GMM HMM 整体 看成 是 一个 生成 
模型 给定 该 模型 的 5个 初始 参数 结合 随机 
和 训练样本 获得 启动 EM 算法 的 E 步 获得 
训练 样本分布 即 计算 训练样本 在 各个 状态下 的 概率 
M 步 用 这些 训练样本 重新 评估 那 5个 参数 
测试阶段 以 孤立 词 识别 为例 给定 每个 词 发音 
的 frame 矩阵 取出 某一个 GMM HMM 模型 算出 该 
发音 每 一帧 数据 在 取出 的 GMM HMM 模型 
各个 state 下 的 概率 结合模型 的 转移 概率 和 
初始 概率 获得 对应 的 clique tree 可 用图 模型 
的 方法 inference 出 生成 该 语音 的 概率 比较 
多 个 GMM HMM 模型 取 最大 概率 的 模型 
对应 的 词 参考资料 机器学习 & 数据挖掘 笔记 _ 13 
用 htk 完成 简单 的 孤立 词 识别 http / 
/ htk . eng . cam . ac . uk 
/ extensions / 张智 星 老师 的 网页 教程 mfcc 
. 