import numpy as np import matplotlib . pyplot as plt 
from sklearn import datasets linear _ model from sklearn . 
model _ selection import train _ test _ split def 
load _ data diabetes = datasets . load _ diabetes 
return train _ test _ split diabetes . data diabetes 
. target test _ size = 0.25 random _ state 
= 0 # Lasso 回归 def test _ Lasso * 
data X _ train X _ test y _ train 
y _ test = data regr = linear _ model 
. Lasso regr . fit X _ train y _ 
train print Coefficients % s intercept % . 2f % 
regr . coef _ regr . intercept _ print Residual 
sum of squares % . 2f % np . mean 
regr . predict X _ test y _ test * 
* 2 print Score % . 2f % regr . 
score X _ test y _ test # 产生 用于 
回归 问题 的 数据集 X _ train X _ test 
y _ train y _ test = load _ data 
# 调用 test _ Lasso test _ Lasso X _ 
train X _ test y _ train y _ test 
def test _ Lasso _ alpha * data X _ 
train X _ test y _ train y _ test 
= data alphas = 0.01 0.02 0.05 0.1 0.2 0.5 
1 2 5 10 20 50 100 200 500 1000 
scores = for i alpha in enumerate alphas regr = 
linear _ model . Lasso alpha = alpha regr . 
fit X _ train y _ train scores . append 
regr . score X _ test y _ test # 
# 绘图 fig = plt . figure ax = fig 
. add _ subplot 1 1 1 ax . plot 
alphas scores ax . set _ xlabel r $ \ 
alpha $ ax . set _ ylabel r score ax 
. set _ xscale log ax . set _ title 
Lasso plt . show # 调用 test _ Lasso _ 
alpha test _ Lasso _ alpha X _ train X 
_ test y _ train y _ test 