zw 版 Halcon delphi 系列 原创 教程 水果 自动 分类 
脚本 机器学习 人工智能 前面 介绍 了 超市 流水线 酸奶 的 
自动 分类 算法 下面 再 介绍 一个 水果 的 自动 
分类 算法 Halcon 强大 的 图像 处理 能力 令人 往往 
会 忽视 其 更加 彪悍 的 机器学习 人工智能 分类 聚类分析 
是 机器学习 人工智能 的 核心 算法 之一 也是 个 典型 
的 应用 Halcon 内置 的 聚类分析 机器学习 模块 就有 knn 
邻近 算法 向量 机 SVM GMM 高斯 混合模型 Gaussian Mixture 
Model 或者 混合 高斯 模型 也 可以 简写 为 MOG 
Mixture of Gaussian MLP 多层 神经网络 等等 而且 相关 基本上 
都是 汇编 级 的 高度 优化 直接 调用 就 可以 
目前 国内 海外 机器学习 人工智能 方面 的 学者 没有 几位 
重视 这块 国外 可能 是 版权问题 毕竟 Halcon 是 售价 
高达 数 万 欧元 不是 人民币 的 商业 软件 而且 
主要 用于 自控 机器 视觉 等 工业 领域 而 不是 
大学 国内 可能 是 对于 Halcon 的 了解 不够 其实 
图像 处理 的 核心 图像识别 分类 都 离不开 机器学习 人工智能 
大家 看看 opencv 的 发展 路线 就 可以 清楚 看到 
从cv/nr 1.0 的 图像 到 c v 1.0 的 机器学习 
以及 目前 c v 3.0 的 GPU cuda 人工智能 模块 
AI 在 其中 所 占据 的 份额 越来越 大 Halcon 
因为 面向 一线 生产线 所以 很多 机器学习 人工智能 都是 黑 
箱式 的 无需 编程 直接 调用 录入 内置 的 ocr 
模块 可以 识别 99% 的 标准 工业 字符 超市 海关 
流水线 不过 Halcon 也 提供 了 大量 的 机器学习 模块 
毕竟 各种 应用 场合 复制 必须 进行 定制 这个 脚本 
AI 方面 不算 复杂 建模 就是 先 拍摄 几张 产品 
的 照片 直接 匹配 通常 Halcon 建模 需要 进行 200次 
默认 参数 迭代 脚本 80 多行 很 简单 虽然 这个 
脚本 和 前面 的 酸奶 分类 脚本 都很/nr 简单 其实 
应用 领域 很广 自动 流水线 物流 智能 仓库 等 无论是 
元器件 的 自动 识别 包裹 自动 分类 以及 产品 的 
QC 等等 核心 模块 就是 这些 代码 算法 选 这个 
脚本 其中 一个 原因 是 因为 前 几天 有人 在 
论坛 询问 如何 对 企业 生产线 的 产品 零食 好像 
进行 自动 分类 1 * This example program shows how 
to apply a general GMM 2 * classification to distinguish 
citrus fruits using the 3 * features area and circularity 
. Additionally the 4 * 2D feature space for the 
extracted fruits is visualized . 5 * 6 read _ 
image Image color / citrus _ fruits _ 01 7 
get _ image _ pointer1 Image Pointer Type Width Height 
8 dev _ close _ window 9 dev _ open 
_ window 0 0 Width Height white WindowHandle 10 set 
_ display _ font WindowHandle 12 courier true false 11 
dev _ set _ draw margin 12 dev _ set 
_ line _ width 2 13 dev _ display Image 
14 dev _ update _ window off 15 dev _ 
update _ pc off 16 dev _ update _ var 
off 17 * 18 FeaturesArea = 19 F e a 
t u r e s C i r c u 
l a r i t y = 20 ClassName = 
orange lemon 21 * 22 * Create a GMM classifier 
23 create _ class _ gmm 2 2 1 spherical 
normalization 10 42 GMMHandle 24 * 25 * Add training 
samples 26 for i = 1 to 4 by 1 
27 read _ image Image color / citrus _ fruits 
_ + i $ . 2d 28 dev _ display 
Image 29 * Add Samples 30 get _ regions Image 
SelectedRegions 31 dev _ display SelectedRegions 32 count _ obj 
SelectedRegions NumberObjects 33 for j = 1 to NumberObjects by 
1 34 select _ obj SelectedRegions ObjectSelected j 35 get 
_ features ObjectSelected WindowHandle Circularity Area RowRegionCenter C o l 
u m n R e g i o n C 
e n t e r 36 FeaturesArea = FeaturesArea Area 
37 F e a t u r e s C 
i r c u l a r i t y 
= F e a t u r e s C 
i r c u l a r i t y 
Circularity 38 FeatureVector = real Circularity Area 39 if i 
= 2 40 add _ sample _ class _ gmm 
GMMHandle FeatureVector 0 0 41 disp _ message WindowHandle Add 
to Class + ClassName 0 window RowRegionCenter C o l 
u m n R e g i o n C 
e n t e r 100 black true 42 else 
43 add _ sample _ class _ gmm GMMHandle FeatureVector 
1 0 44 disp _ message WindowHandle Add to Class 
+ ClassName 1 window RowRegionCenter C o l u m 
n R e g i o n C e n 
t e r 100 black true 45 endif 46 endfor 
47 disp _ continue _ message WindowHandle black true 48 
stop 49 endfor 50 dev _ clear _ window 51 
* 52 * Visualize the feature space 53 visualize _ 
2D _ feature _ space Cross Height Width WindowHandle FeaturesArea 
0 5 F e a t u r e s 
C i r c u l a r i t 
y 0 5 dim gray 18 54 * oranges 40 
440 55 visualize _ 2D _ feature _ space Cross 
Height Width WindowHandle FeaturesArea 6 11 F e a t 
u r e s C i r c u l 
a r i t y 6 11 light gray 18 
56 * lemons 70 440 57 disp _ continue _ 
message WindowHandle black true 58 stop 59 * 60 * 
Train the classifier 61 train _ class _ gmm GMMHandle 
100 0.001 training 0.0001 Centers Iter 62 * 63 * 
Classify 64 for i = 1 to 15 by 1 
65 read _ image Image color / citrus _ fruits 
_ + i $ . 2d 66 dev _ display 
Image 67 * Classify Image 10 10 68 get _ 
regions Image SelectedRegions 69 dev _ display SelectedRegions 70 count 
_ obj SelectedRegions NumberObjects 71 for j = 1 to 
NumberObjects by 1 72 select _ obj SelectedRegions ObjectSelected j 
73 get _ features ObjectSelected WindowHandle Circularity Area RowRegionCenter C 
o l u m n R e g i o 
n C e n t e r 74 FeaturesArea = 
FeaturesArea Area 75 F e a t u r e 
s C i r c u l a r i 
t y = F e a t u r e 
s C i r c u l a r i 
t y Circularity 76 FeatureVector = real Circularity Area 77 
classify _ class _ gmm GMMHandle FeatureVector 1 ClassID ClassProb 
Density KSigmaProb 78 disp _ message WindowHandle Class + ClassName 
ClassID window RowRegionCenter C o l u m n R 
e g i o n C e n t e 
r 100 black true 79 disp _ message WindowHandle KSigmaProb 
+ KSigmaProb window RowRegionCenter + 30 C o l u 
m n R e g i o n C e 
n t e r 100 black true 80 endfor 81 
if i = 15 82 disp _ continue _ message 
WindowHandle black true 83 endif 84 stop 85 endfor 86 
* 87 * Clear the classifier from memory 88 clear 
_ class _ gmm GMMHandle zw 版 Halcon delphi 系列 
原创 教程 网址 cnblogs . com / ziwang / 