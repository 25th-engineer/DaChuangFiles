分享 一篇 来自 机器 之心 的 文章 关于 机器 学习 
的 起步 讲 的 还是 很 清楚 的 原文 链 
接在 只需 十四步 从零开始 掌握 Python 机器学习 附 资源 Python 
可以 说 是 现在 最 流行 的 机器 学习 语言 
而且 你 也能 在 网上 找到 大量 的 资源 你 
现在 也 在 考虑 从 Python 入门 机器学习 吗 本 
教程 或许 能帮你/nr 成功 上手 从 0 到 1 掌握 
Python 机器学习 至于 后面 再从 1 到 100 变成 机器学习 
专家 就要 看 你 自己 的 努力 了 本 教程 
原文 分为 两个 部分 机器 之心 在 本文 中将 其 
进行 了 整合 原文 可 参阅 suo . im / 
KUWgl 和 suo . im / 96wD3 本 教程 的 
作者 为 KDnuggets 副主编 兼 数据 科学家 Matthew Mayo 「 
开始 」 往往 是 最难 的 尤其 是 当 选择 
太多 的 时候 一个 人 往往 很难 下定 决定 做出 
选择 本 教程 的 目的 是 帮助 几乎 没有 Python 
机器学习 背景 的 新手 成长 为 知识 渊博 的 实践者 
而且 这个 过程 中 仅 需要 使用 免费 的 材料 
和 资源 即可 这个 大纲 的 主要 目标 是 带 
你 了解 那些 数量 繁多 的 可用 资源 毫无疑问 资源 
确实 有 很多 但 哪些 才是 最好 的 呢 哪些 
是 互补 的 呢 以 怎样 的 顺序 学习 这些 
资源 才是 最 合适 的 呢 首先 我 假设 你 
并 不是 以下 方面 的 专家 机器学习 Python 任何 Python 
的 机器学习 科学计算 或 数据分析 库 当然 如果 你 对 
前 两个 主题 有 一定 程度 的 基本 了解 就 
更好 了 但 那 并不 是 必要 的 在 早期 
阶段 多花 一点点 时间 了解 一下 就行了 基础 篇 第一步 
基本 Python 技能 如果 我们 打算 利用 Python 来 执行 
机器学习 那么 对 Python 有 一些 基本 的 了解 就 
是 至关重要 的 幸运 的 是 因为 Python 是 一种 
得到 了 广泛 使用 的 通用 编程语言 加上 其 在 
科学 计算 和 机器学习 领域 的 应用 所以 找 到 
一个 初学者 教程 并不 十分 困难 你 在 Python 和 
编程 上 的 经验 水平 对于 起步 而言 是 至关重要 
的 首先 你 需要 安装 Python 因为 我们 后面 会用 
到 科学 计算 和 机器学习 软件包 所以 我 建议 你 
安装 Anaconda 这 是 一个 可 用于 Linux OS X 
和 Windows 上 的 工业级 的 Python 实现 完整包 含了 
机器学习 所需 的 软件包 包括 numpy scikit learn 和 matplotlib 
其 也 包含 了 iPython Notebook 这 是 一个 用 
在 我们 许多 教程 中的 交互式 环境 我 推荐 安装 
Python 2.7 如果 你 不懂 编程 我 建议 你 从 
下面 的 免费 在线 书籍 开始 学习 然后 再 进入 
后续 的 材料 Learn Python the Hard Way 作者 Zed 
A . Shaw https / / l e a r 
n p y t h o n t h e 
h a r d w a y . org / 
book / 如果 你 有 编程 经验 但 不懂 Python 
或 还很 初级 我 建议 你 学习 下面 两个 课程 
谷歌 开发者 Python 课程 强烈推荐 视觉 学习者 学习 http / 
/ suo . im / toMzqPython 科学计算 入门 来自 UCSB 
Engineering 的 M . Scott Shell 一个 不错 的 入门 
大约有 60 页 http / / suo . im / 
2cXycM 如果 你 要 30 分钟 上手 Python 的 快速 
课程 看 下面 在 Y 分钟 内 学会 X X 
= Python http / / suo . im / zm6qX 
当然 如果 你 已经 是 一位 经验 丰富 的 Python 
程序员 了 这 一步 就 可以 跳过 了 即便如此 我 
也 建议 你 常 使用 Python 文档 https / / 
www . python . org / doc / 第二步 机器学习 
基础 技巧 KDnuggets 的 Zachary Lipton 已经 指出 现在 人们 
评价 一个 「 数据 科学家 」 已经 有 很多 不同 
标准 了 这 实际上 是 机器学习 领域 领域 的 一个 
写照 因为/c 数据/n 科学家/n 大部分/m 时间/n 干的/nr 事情/n 都/d 牵涉/v 
到/v 不同/a 程度/n 地/uv 使用/v 机器学习/i 算法/n 为了 有效 地 
创造 和 获得 来自 支持 向量 机 的 洞见 非常 
熟悉 核 方法 kernel methods 是否 必要 呢 当然 不是 
就像 几乎 生活 中 的 所有 事情 一样 掌握 理论 
的 深度 是 与 实践 应用 相关 的 对 机器学习 
算法 的 深度 了解 超过 了 本文 探讨 的 范围 
它 通常 需要 你 将 非常 大量 的 时间 投入 
到 更加 学术 的 课程 中去 或者 至少 是 你 
自己 要 进行 高强度 的 自学 训练 好消息 是 对 
实践 来说 你 并不 需要 获得 机器学习 博士 般的 理论 
理解 就想 要 成为 一个 高效 的 程序员 并不 必要 
进行 计算机 科学 理论 的 学习 人们 对 吴恩 达 
在 Coursera 上 的 机器学习 课程内容 往往 好评 如潮 然而 
我 的 建议 是 浏览 前 一个 学生 在线 记录 
的 课堂 笔记 跳过 特 定于 Octave 一个 类似于 Matlab 
的 与 你 Python 学习 无关 的 语言 的 笔记 
一定 要 明白 这些 都 不是 官方 笔记 但是 可以 
从 它们 中 把握 到 吴恩 达 课程 材料 中 
相关 的 内容 当然/d 如果/c 你/r 有/v 时间/n 和/c 兴趣/n 
你 现在 就 可以 去 Coursera 上 学习 吴恩 达 
的 机器学习 课程 http / / suo . im / 
2o1uD 吴恩 达 课程 的 非官方 笔记 http / / 
www . holehouse . org / mlclass / 除了 上面 
提到 的 吴恩 达 课程 如果 你 还需要 需要 其它 
的 网上 还 有 很多 各类 课程 供 你 选择 
比如 我 就 很喜欢 Tom Mitchell 这里 是 他 最近 
演讲 的 视频 一起 的 还有 Maria Florina Balcan 非常 
平易近人 Tom Mitchell 的 机器学习 课程 http / / suo 
. im / 497arw 目前 你 不 需要 所有 的 
笔记 和 视频 一个 有效 地 方法 是 当 你 
觉得 合适 时 直接 去 看 下面 特定 的 练习题 
参考 上述 备注 和 视频 恰当 的 部分 第三步 科学计算 
Python 软件包 概述 好了 我们 已经 掌握 了 Python 编程 
并对 机器学习 有了 一定 的 了解 而在 Python 之外 还有 
一些 常 用于 执行 实际 机器 学习 的 开源 软件库 
广义 上 讲 有 很多 所谓 的 科学 Python 库 
scientific Python libraries 可 用于 执行 基本 的 机器 学习 
任务 这 方面 的 判断 肯定 有些 主观性 numpy 主要 
对其 N 维 数组 对象 有用 http / / www 
. numpy . org / pandas Python 数据分析 库 包括 
数据 框架 dataframes 等 结构 http / / pandas . 
pydata . org / matplotlib 一个 2D 绘 图库 可 
产生 出版物 质量 的 图表 http / / matplotlib . 
org / scikit learn 用于 数据分析 和 数据挖掘 人物 的 
机器学习 算法 http / / scikit learn . org / 
stable / 学习 这些 库 的 一个 好 方法 是 
学习 下面 的 材料 Scipy Lecture Notes 来自 Ga ë 
l Varoquaux Emmanuelle Gouillart 和 Olav Vahtras http / / 
www . scipy lectures . org / 这个 pandas 教程 
也 很不错 10 Minutes to Pandas http / / suo 
. im / 4an6gY 在 本 教程 的 后面 你 
还会 看到 一些 其它 的 软件包 比如 基于 matplotlib 的 
数据 可视化 库 Seaborn 前面 提到 的 软件 包 只是 
Python 机器学习 中 常用 的 一些 核心 库 的 一部分 
但是/c 理解/v 它/r 们/k 应该/v 能/v 让你在/n 后面/f 遇到/v 其它/r 
软件包/l 时/n 不至于/c 感到/v 困惑/a 下面 就 开始 动手吧 第四步 
使用 Python 学习 机器学习 首先 检查一下 准备 情况 Python 就绪 
机器学习 基本 材料 就绪 Numpy 就绪 Pandas 就绪 Matplotlib 就绪 
现在 是 时候 使用 Python 机器学习 标准 库 scikit learn 
来 实现 机器学习 算法 了 scikit learn 流程图/n 下面/f 许多/m 
的/uj 教程/n 和/c 训练/vn 都是/nr 使用/v iPython Jupyter Notebook 完成 
的 iPython Notebook 是 执行 Python 语句 的 交互式 环境 
iPython Notebook 可以 很 方便 地 在 网上 找到 或 
下载 到 你 的 本地 计算机 来自 斯坦福 的 iPython 
Notebook 概览 http / / cs231n . github . io 
/ ipython tutorial / 同样 也 请注意 以下 的 教程 
是由 一系列 在线 资源 所 组成 如果 你 感觉 课程 
有 什么 不 合适 的 可以 和 作者 交流 我们 
第一 个 教程 就是 从 scikit learn 开始 的 我 
建议 你们 在 继续 完成 教程 前 可以 按 顺序 
看一看 以下 的 文章 下面 是 一篇 是 对 scikit 
learn 简介 的 文章 scikit learn 是 Python 最 常用 
的 通用 机器学习 库 其 覆盖 了 K 近邻 算法 
Jake VanderPlas 写 的 scikit learn 简介 http / / 
suo . im / 3bMdEd 下面 的 会 更加 深入 
扩展 的 一篇 简介 包括了 从 著名 的 数据库 开始 
完成 一个 项目 Randal Olson 的 机器学习 案例 笔记 http 
/ / suo . im / RcPR6 下 一篇 关注 
于在/nr scikit learn 上 评估 不同 模型 的 策略 包括 
训练 集 / 测试 集 的 分割 方法 Kevin Markham 
的 模型 评估 http / / suo . im / 
2HIXDD 第五步 Python 上 实现 机器 学习 的 基本 算法 
在 有了 scikit learn 的 基本 知识 后 我们 可以 
进一步 探索 那些 更加 通用 和 实用 的 算法 我们 
从 非常 出名 的 K 均值 聚 类 k means 
clustering 算法 开始 它 是 一种 非常 简单 和 高效 
的 方法 能 很好 地 解决 非 监督 学习 问题 
K 均值 聚 类 http / / suo . im 
/ 40R8zf 接下来 我们 可以 回到 分类 问题 并 学习 
曾经 最 流行 的 分类 算法 决策树 http / / 
t h e g r i m m s c 
i e n t i s t . com / 
tutorial decision trees / 在 了解 分类 问题 后 我们 
可以 继续 看看 连续型 数值 预测 线性 回归 http / 
/ suo . im / 3EV4Qn 我们 也 可以 利用 
回归 的 思想 应用到 分类 问题 中 即 logistic 回归 
logistic 回归 http / / suo . im / S2beL 
第六步 Python 上 实现 进阶 机器学习 算法 我们 已经 熟悉 
了 scikit learn 现在 我们 可以 了解 一下 更 高级 
的 算法 了 首先 就是 支持 向量 机 它 是 
一种 依赖于 将 数据 转换 映 射到 高维空间 的 非线性 
分类器 支持 向量 机 http / / suo . im 
/ 2iZLLa 随后 我们 可以 通过 Kaggle Titanic 竞赛 检查 
学习 作为 集成 分类器 的 随机 森林 Kaggle Titanic 竞赛 
使用 随机 森林 http / / suo . im / 
1o7ofe 降 维 算法 经常 用于 减少 在 问题 中 
所 使用 的 变量 主 成份 分析法 就 是非 监督 
降 维 算法 的 一个 特殊 形式 降 维 算法 
http / / suo . im / 2k5y2E 在 进入 
第七步 之前 我们 可以 花 一点 时间 考虑 在 相对 
较短 的 时间 内 取得 的 一些 进展 首先 使用 
Python 及其 机器学习 库 我们 不仅 已经 了解 了 一些 
最 常见 和 知名 的 机器学习 算法 k 近邻 k 
均值 聚 类 支持 向量 机 等 还 研究 了 
强大 的 集成 技术 随机 森林 和 一些 额外 的 
机器 学习 任务 降 维 算法 和 模型 验证 技术 
除了 一些 基本 的 机器学习 技巧 我们 已经 开始 寻找 
一些 有用 的 工具包 我们 会 进一步 学习 新的 必要 
工具 第七步 Python 深度 学习 神经网络 包含 很 多层 深度 
学习 无处不在 深度 学习 建立 在 几十 年前 的 神经 
网络 的 基础 上 但是 最近 的 进步 始于 几年前 
并 极大 地 提高 了 深度 神经 网络 的 认知 
能力 引起 了 人们 的 广泛 兴趣 如果 你 对 
神经 网络 还 不熟悉 KDnuggets 有 很多 文章 详细 介绍 
了 最近 深度 学习 大量 的 创新 成就 和 赞许 
最后 一步 并不 打算 把 所有 类型 的 深度 学习 
评论 一遍 而是 在 2 个 先进 的 当代 Python 
深度 学习 库 中 探究 几个 简单 的 网络 实现 
对于 有 兴趣 深挖 深度 学习 的 读者 我 建议 
从 下面 这些 免费 的 在线 书籍 开始 神经 网络 
与 深度 学习 作者 Michael Nielsen http / / n 
e u r a l n e t w o 
r k s a n d d e e p 
l e a r n i n g . com 
/ 1 . Theano 链接 http / / deeplearning . 
net / software / theano / Theano 是 我们 讲到 
的 第一 个 Python 深度 学习 库 看看 Theano 作者 
怎么说 Theano 是 一个 Python 库 它 可以 使 你 
有效 地 定义 优化 和 评估 包含 多维 数组 的 
数学 表达式 下面 关于 运用 Theano 学习 深度 学习 的 
入门教程 有点 长 但是 足够 好 描述 生动 评价 很高 
Theano 深度 学习 教程 作者 Colin Raffel http / / 
suo . im / 1mPGHe2 . Caffe 链接 http / 
/ caffe . berkeleyvision . org / 另 一个 我们 
将 测试 驱动 的 库 是 Caffe 再一次 让 我们 
从 作者 开始 Caffe 是 一个 深度 学习 框架 由 
表达 速度 和 模块性 建构 Bwekeley 视觉 与 学习 中心 
和 社区 工作者 共同 开发 了 Caf fe 这个 教程 
是 本篇 文章 中 最好 的 一个 我们 已经 学习 
了 上面 几个 有趣 的 样例 但 没有 一个 可与 
下面 这个 样例 相 竞争 其 可 通过 Caffe 实现 
谷歌 的 DeepDream 这个 相当 精彩 掌握 教程 之后 可以 
尝试 使 你 的 处理器 自如 运行 就 当作 是 
娱乐 通过 Caffe 实现 谷歌 DeepDream http / / suo 
. im / 2cUSXS 我 并 没有 保证 说 这会 
很快 或 容易 但是 如果 你 投入 了 时间 并 
完成 了 上面 的 7 个 步骤 你 将在 理解 
大量 机器学习 算法 以及 通过 流行 的 库 包括 一些 
在 目前 深度 学习 研究 领域 最 前沿 的 库 
在 Python 中 实现 算法 方面 变得 很 擅长 进阶篇 
机器学习 算法 本篇 是 使用 Python 掌握 机器 学习 的 
7 个 步骤 系列 文章 的 下篇 如果 你 已经 
学习 了 该 系列 的 上篇 那么 应该 达到 了 
令人满意 的 学习 速度 和 熟练 技能 如果 没有 的话 
你 也许 应该 回顾 一下 上篇 具体 花费 多少 时间 
取决于 你 当前 的 理解 水平 我 保证 这样 做 
是 值得 的 快速 回顾 之后 本 篇 文章 会 
更 明确 地 集中 于 几个 机器学习 相关 的 任务 
集上 由于 安全 地 跳过 了 一些 基础 模块 Python 
基础 机器学习 基础 等等 我们 可以 直接 进入 到 不同 
的 机器学习 算法 之中 这次 我们 可以 根据 功能 更好 
地 分类 教程 第 1步 机器学习 基础 回顾 & 一个 
新视角 上篇 中 包括 以下 几步 1 . Python 基础 
技能 2 . 机器学习 基础 技能 3 . Python 包 
概述 4 . 运用 Python 开始 机器学习 介绍 & 模型 
评估 5 . 关于 Python 的 机器学习 主题 k 均值 
聚 类 决策树 线性 回归 & 逻辑 回归 6 . 
关于 Python 的 高阶 机器学习 主题 支持 向量 机 随机 
森林 PCA 降 维 7 . Python 中的 深度 学习 
如上所述 如果 你 正准备 从头开始 我 建议 你 按顺序 读完 
上篇 我 也会 列出 所有 适合 新手 的 入门 材料 
安装 说明 包含 在 上篇 文章 中 然而 如果 你 
已经 读过 我会 从 下面 最 基础 的 开始 机器学习 
关键 术语 解释 作者 Matthew Mayo 地址 http / / 
suo . im / 2URQGm 维基百科 条目 统计学 分类 地址 
http / / suo . im / mquen 机器学习 一个 
完整 而 详细 的 概述 作者 Alex Castrounis 地址 http 
/ / suo . im / 1yjSSq 如果 你 正在 
寻找 学习 机器学习 基础 的 替代 或 补充 性 方法 
恰好 我 可以 把 正在 看 的 Shai Ben David 
的 视频 讲座 和 Shai Shalev Shwartz 的 教科书 推荐给 
你 Shai Ben David 的 机器学习 介绍 视频 讲座 滑铁卢 
大学 地址 http / / suo . im / 1TFlK6 
理解 机器学习 从 理论 到 算法 作者 Shai Ben David 
& Shai Shalev Shwartz 地址 http / / suo . 
im / 1NL0ix 记住 这些 介绍性 资料 并 不 需要 
全部 看完 才能 开始 我 写 的 系列 文章 视频 
讲座 教科书 及 其他 资源 可 在 以下 情况 查阅 
当 使用 机器学习 算法 实现 模型 时 或者 当 合适 
的 概念 被 实际 应用 在 后续 步骤 之中 时 
具体情况 自己 判断 第 2步 更多 的 分类 我们 从 
新材料 开始 首先 巩固 一下 我们 的 分类 技术 并 
引入 一些 额外 的 算法 虽然 本篇 文章 的 第一 
部分 涵盖 决策树 支持 向量 机 逻辑 回归 以及 合成 
分类 随机 森林 我们 还是 会 添加 k 最 近邻 
朴素 贝叶斯 分类器 和 多层 感知器 Scikit learn 分类器 k 
最 近邻 kNN 是 一个 简单 分类器 和 懒惰 学习者 
的 示例 其中 所有 计算 都 发生 在 分类 时间上 
而 不是 提前 在 训练 步骤 期间 发生 kNN 是非 
参数 的 通过 比较 数据 实 例和 k 最近 实例 
来 决定 如何 分类 使用 Python 进行 k 最 近邻 
分类 地址 http / / suo . im / 2zqW0t 
朴素 贝叶斯 是 基于 贝叶 斯定理 的 分类器 它 假定 
特征 之间 存在 独立性 并且 一个 类 中 任何 特定 
特征 的 存在 与 任何 其它 特征 在 同 一类 
中的 存在 无关 使用 Scikit learn 进行 文档 分类 作者 
Zac Stewart 地址 http / / suo . im / 
2uwBm3 多层 感知器 MLP 是 一个 简单 的 前馈 神经网络 
由 多层 节点 组成 其中 每个 层 与 随后 的 
层 完全 连接 多层 感知器 在 Scikit learn 版本 0.18 
中 作了 介绍 首先 从 Scikit learn 文档 中 阅读 
MLP 分类器 的 概述 然后 使用 教程 练习 实现 神经网络 
模型 监督 式 Scikit learn 文档 地址 http / / 
suo . im / 3oR76lPython 和 Scikit learn 的 神经 
网络 初学者 指南 0.18 作者 Jose Portilla 地址 http / 
/ suo . im / 2tX6rG 第 3步 更 多聚 
类 我们 现在 接着 讲 聚 类 一种 无 监督 
学习 形式 上篇 中 我们 讨论 了 k means 算法 
我们 在 此 介绍 DBSCAN 和 期望 最大化 EM Scikit 
learn 聚 类 算法 首先 阅读 这些 介绍性 文章 第一个 
是 k 均值 和 EM 聚 类 技术 的 快速 
比较 是 对 新 聚 类 形式 的 一个 很好 
的 继续 第二个 是 对 Scikit learn 中 可用 的 
聚 类 技术 的 概述 聚 类 技术 比较 简明 
技术 概述 作者 Matthew Mayo 地址 http / / suo 
. im / 4ctIvI 在 玩具 数据 集中 比较 不同 
的 聚 类 算法 Scikit learn 文档 地址 http / 
/ suo . im / 4uvbbM 期望 最大化 EM 是 
概率 聚 类 算法 并 因此 涉及 确定 实例 属于 
特定 聚 类 的 概率 EM 接近 统计模型 中 参数 
的 最大 似 然 性 或 最大 后验/nr 估计 Han 
Kamber 和 Pei EM 过程 从 一组 参数 开始 迭代 
直到 相对于 k 聚 类 的 聚 类 最大化 首先 
阅读 关于 EM 算法 的 教程 接下来 看看 相关 的 
Scikit learn 文档 最后 按照 教程 使用 Python 自己 实现 
EM 聚 类 期望 最大化 EM 算法 教程 作者 Elena 
Sharova 地址 http / / suo . im / 33ukYd 
高斯 混合模型 Scikit learn 文档 地址 http / / suo 
. im / 20C2tZ 使用 Python 构建 高斯 混合模型 的 
快速 介绍 作者 Tiago Ramalho 地址 http / / suo 
. im / 4oxFsj 如果 高斯 混合模型 初看 起来 令人 
困惑 那么 来自 Scikit learn 文档 的 这一 相关 部分 
应该 可以 减轻 任何 多余 的 担心 高斯 混合 对象 
实现 期望 最大化 EM 算法 以 拟合 高斯 模型 混合 
基于 密度 且 具有 噪声 的 空间 聚 类 应用 
DBSCAN 通过 将 密集 数 据点 分组 在 一起 并将 
低密 度数 据点 指定 为 异常值 来 进行 操作 首先 
从 Scikit learn 的 文档 中 阅读 并 遵循 DBSCAN 
的 示例 实现 然后 按照 简明 的 教程 学习 DBSCAN 
聚 类 算法 演示 Scikit learn 文档 地址 http / 
/ suo . im / 1l9tvX 基于 密度 的 聚 
类 算法 DBSCAN 和 实现 地址 http / / suo 
. im / 1LEoXC 第 4步 更多 的 集成 方法 
上篇 只 涉及 一个 单一 的 集成 方法 随机 森林 
RF RF 作为 一个 顶级 的 分类器 在 过去 几年 
中 取得 了 巨大 的 成功 但 它 肯定 不是 
唯一 的 集成 分类器 我们 将 看看 包装 提升 和 
投票 给 我 一个 提升 首先 阅读 这些 集 成 
学习 器 的 概述 第一个 是 通用性 的 第二个 是 
它们 与 Scikit learn 有关 集成 学习 器 介绍 作者 
Matthew Mayo 地址 http / / suo . im / 
cLESwScikit learn 中的 集成 方法 Scikit learn 文档 地址 http 
/ / suo . im / yFuY9 然后 在 继续 
使用 新 的 集成 方法 之前 请 通过 一个 新 
的 教程 快速 学习 随机 森林 Python 中的 随机 森林 
来自 Yhat 地址 http / / suo . im / 
2eujI 包装 提升/v 和/c 投票/n 都是/nr 不同/a 形式/n 的/uj 集成/v 
分类器/n 全部 涉及 建构 多个 模型 然而 这些 模型 由 
什么 算法 构建 模型 使用 的 数据 以及 结果 如何 
最终 组合 起来 这些 都会 随着 方案 而 变化 包装 
从 同一 分类 算法 构建 多 个 模型 同时 使用 
来自 训练 集 的 不同 独立 数据 样本 Scikit learn 
实现 包装 分类器 提升 从 同一 分类 算法 构建 多 
个 模型 一个 接 一个 地 链接 模型 以 提高 
每个 后续 模型 的 学习 Scikit learn 实现 AdaBoost 投票 
构建 来自 不同 分类 算法 的 多个 模型 并且 使用 
标准 来 确定 模型 如何 最好 地 组合 Scikit learn 
实现 投票 分类器 那么 为什么 要 组合 模型 为了 从 
一个 特定 角度 处理 这个 问题 这里 是 偏差 方差 
权衡 的 概述 具体 涉及 到 提升 以下 是 Scikit 
learn 文档 单一 评估器 vs 包装 偏差 方差 分解 Scikit 
learn 文档 地址 http / / suo . im / 
3izlRB 现在 你 已经 阅读 了 关于 集成 学习 器 
的 一些 介绍性 材料 并且 对 几个 特定 的 集成 
分类器 有了 基本 了解 下面 介绍 如何 从 Machine Learning 
Mastery 中 使用 Scikit learn 在 Python 中 实现 集成 
分类器 使用 Scikit learn 在 Python 中 实现 集成 机器学习 
算法 作者 Jason Brownlee 地址 http / / suo . 
im / 9WEAr 第 5步 梯度 提升 下 一步 我们 
继续 学习 集成 分类器 探讨 一个 当代 最 流行 的 
机器学习 算法 梯度 提升 最近 在 机器 学习 中 产生 
了 显著 的 影响 成为 了 Kaggle 竞赛 中 最 
受欢迎 和 成功 的 算法 之一 给 我 一个 梯度 
提升 首先 阅读 梯度 提升 的 概述 维基百科 条目 梯度 
提升 地址 http / / suo . im / TslWi 
接下来 了解 为什么 梯度 提升 是 Kaggle 竞赛 中 「 
最 制胜 」 的 方法 为什么 梯度 提升 完美 解决 
了 诸多 Kaggle 难题 Quora 地址 http / / suo 
. im / 3rS6ZOKaggle 大师 解释 什么 是 梯度 提升 
作者 Ben Gorman 地址 http / / suo . im 
/ 3nXlWR 虽然 Scikit learn 有 自己 的 梯度 提升 
实现 我们 将 稍作 改变 使用 XGBoost 库 我们 提到 
过 这 是 一个 更快 的 实现 以下 链接 提供 
了 XGBoost 库 的 一些 额外 信息 以及 梯度 提升 
出于 必要 维基百科 条目 XGBoost 地址 http / / suo 
. im / 2UlJ3VGhub 上 的 XGBoost 库 地址 http 
/ / suo . im / 2JeQI8XGBoost 文档 地址 http 
/ / suo . im / QRRrm 现在 按照 这个 
教程 把 所有 汇聚 起来 Python 中 XGBoost 梯度 提升 
树 的 实现 指南 作者 Jesse Steinweg Woods 地址 http 
/ / suo . im / 4FTqD5 你 还 可以 
按照 这些 更 简洁 的 示例 进行 强化 XGBoost 在 
Kaggle 上 的 示例 Python 地址 http / / suo 
. im / 4F9A1JIris 数据集 和 XGBoost 简单 教程 作者 
Ieva Zarina 地址 http / / suo . im / 
2Lyb1a 第 6步 更多 的 降 维 降 维 是 
通过 使用 过程 来 获得 一组 主 变量 将 用于 
模型 构建 的 变量 从其 初始 数 减少 到 一个 
减 少数 有 两种 主要 形式 的 降 维 1 
. 特征选择 选择 相关 特征 的 子集 地址 http / 
/ suo . im / 4wlkrj2 . 特征提取 构建 一个 
信息性 和非/nr 冗余 的 衍生 值 特 征集 地址 http 
/ / suo . im / 3Gf0Yw 下面 是 一对 
常用 的 特征提取 方法 主 成分 分析 PCA 是 一种 
统计 步骤 它 使用 正交变换 将 可能 相关 变量 的 
一组 观测值 转换 为 一组 称 为主 成分 的 线性 
不相关 变量值 主 成分 的 数量 小于 或 等于 原始 
变量 的 数量 这种 变换 以 这样 的 方式 定义 
即 第一 主 成分 具有 最大 可能 的 方差 即 
考虑 数据 中 尽可能 多 的 变率 以上 定义 来自 
PCA 维基百科 条目 如果 感兴趣 可 进一步 阅读 但是 下面 
的 概述 / 教程 非常 彻底 主 成分 分析 3 
个 简单 的 步骤 作者 Sebastian Raschka 地址 http / 
/ suo . im / 1ahFdW 线性 判别分析 LDA 是 
Fisher 线性 判 别的 泛化 是 统计学 模式识别 和 机器 
学习 中 使用 的 一种 方法 用于 发现 线性组合 特征 
或 分离 两个 或 多个 类别 的 对象 或 事件 
的 特征 所 得到 的 组合 可以 用作 线性 分类器 
或者 更 常见 地 用作 后续 分类 之前 的 降 
维 LDA 与 方差分析 ANOVA 和 回归分析 密切相关 它 同样 
尝试 将 一个 因变量 表示 为 其他 特征 或 测量 
的 线性组合 然而 ANOVA 使用 分类 独立 变量 和 连续 
因变量 而 判别分析 具有 连续 的 独立 变量 和 分类 
依赖 变量 即 类 标签 上面 的 定义 也 来自 
维基百科 下面 是 完整 的 阅读 线性 判别分析 直至 比特 
作者 Sebastian Raschka 地址 http / / suo . im 
/ gyDOb 你 对 PCA 和 LDA 对于 降 维 
的 实际 差异 是否 感到 困惑 Sebastian Raschka 做了 如下 
澄清 线性 判别分析 LDA 和主/nr 成分 分析 PCA 都是 通常用于 
降 维 的 线性转换 技术 PCA 可以 被 描述 为 
「 无 监督 」 算法 因为 它 「 忽略 」 
类 标签 并且 其 目标 是 找到 使 数据 集中 
的 方差 最大化 的 方向 所谓 的 主 成分 与 
PCA 相反 LDA 是 「 监督 的 」 并且 计算 
表示 使 多个 类 之间 的 间隔 最大化 的 轴 
的 方向 「 线性 判别式 」 有关 这 方面 的 
简要 说明 请 阅读 以下内容 LDA 和 PCA 之间 的 
降 维 有 什么 区别 作者 Sebastian Raschka 地址 http 
/ / suo . im / 2IPt0U 第 7 步 
更多 的 深度 学习 上篇 中 提供 了 一个 学习 
神经 网络 和 深度 学习 的 入口 如果 你 的 
学习 到 目前 比较 顺利 并 希望 巩固 对 神经 
网络 的 理解 并 练习 实现 几个 常见 的 神经 
网络 模型 那么 请 继续 往下看 首先 看 一些 深度 
学习 基础 材料 深度 学习 关键 术语 及 解释 作者 
Matthew Mayo 理解 深度 学习 的 7 个 步骤 作者 
Matthew Mayo 地址 http / / suo . im / 
3QmEfV 接下来 在 Google 的 机器 智能 开源 软件库 TensorFlow 
一个 有效 的 深度 学习 框架 和 现今 几乎 是 
最好 的 神经 网络 工具 尝试 一些 简明 的 概述 
／ 教程 机器学习 敲门砖 任何人 都 能看懂 的 TensorFlow 介绍 
第 1 2 部分 入门级 解读 小白 也 能看懂 的 
TensorFlow 介绍 第 3 4 部分 最后 直接 从 TensorFlow 
网站 试用 这些 教程 它 实现 了 一些 最 流行 
和 常见 的 神经 网络 模型 循环 神经网络 谷歌 TensorFlow 
教程 地址 http / / suo . im / 2gtkze 
卷积 神经网络 谷歌 TensorFlow 教程 地址 http / / suo 
. im / g8Lbg 此外 目前 一篇 关于 7 个 
步骤 掌握 深度 学习 的 文章 正在 写作 之中 重点 
介绍 使用 位于 TensorFlow 顶部 的 高级 API 以 增 
模型 实现 的 容易 性 和 灵活性 我 也将 在 
完成 后 在这儿 添加 一个 链接 相关 的 进入 机器学习 
行业 之前 应该 阅读 的 5 本 电子书 地址 http 
/ / suo . im / SlZKt 理解 深度 学习 
的 7 个 步骤 地址 http / / suo . 
im / 3QmEfV 机器学习 关键 术语 及 解释 地址 http 
/ / suo . im / 2URQGm 你 想 更 
深入 了解 学习 Python 知识 体系 你 可以 看 一下 
我们 花费 了 一个 多月 整理 了 上百 小时 的 
几百 个 知识 点 体系 内容 超 全 整理 Python 
自动化 全能 开发 从 入门 到 精通 笔记 全 放送 
