作者 Burak Kanber 翻译 王维 强 原文 http / / 
burakkanber . com / blog / machine learning in other 
languages introduction / 遗传算法 应该是 我 接触 到 的 机器学习 
算法 中 的 最后 一个 但是 我 喜欢 把 它 
作为 这个 系列 文章 的 开始 因为 这个 算法 非常适合 
介绍 价值 函数 或称 误差函数 还有 就是 局部 和 全局 
最优 概念 二者 都是 机器学习 中 的 重要 概念 遗传算法 
的 发明 受 自然界 和 进化论 的 启发 这对 我 
来说 非常 酷 这 并不 奇怪 即使 是 人工神经网络 NN 
也 是从 生物学 发展 起来 的 进化 是 我们 体会 
到 的 最好 的 通用 学习 算法 我们 都 知道 
人类 的 大脑 是 解决 通用 问题 的 最好 利器 
在 人工 智能 和 机器 学习 研究 中 两个 成长 
最快 的 领域 也 是 我们 生物 存在 的 及其 
重要 的 两个 部分 这 就是 我 所 感兴趣 的 
遗传 算法 和 神经 网络 现在 我 把 二者 浓缩 
在 一起 我 在前面 使用 的 术语 通用 极其重要 对 
大多数 的 特别 计算 问题 你 可能 会 找到 比 
遗传算法 更 高效 的 方案 但是 关键 点 不在于 具体 
的 实施 也 不在于 遗传算法 使用 遗传算法 并 不是 在 
你 遇到 复杂 的 问题 时 而是 问题 的 复杂度 
已经 成为 问题 又 或者 你 有 一些 完全 不 
相干 的 参数 需要 面对 一个 典型 的 应用 就是 
两足 机器 人 行走 问题 能让 机器人 靠 两足 行走 
是 非常 困难 的 硬 编码 行走 程序 几乎 不 
可能 成功 即使 你 真能 令 机器人 走起来 下 一个 
机器人 的 平衡 重心 可能会 轻微 不同 也 会使 你 
的 程序 无法 运行 你 可以 选择 使用 遗传算法 来 
教会 机器 人 如何 学习 行走 而 不是 直接 教 
机器 人 行走 我们 这就 来用 Javascript 搭建 一个 遗传算法 
问题 用 Javascript 写出 一个 算法 繁殖 出 一段 文本 
Hello World 对 程序员 来说 Hello World 几乎 是 万物 
之始 我们 使用 遗传算法 繁殖 出 这段 文字 也 算是 
师出有名 注意 这个 问题 有 很高 的 人工 参与 性 
当然 我们 可以 直接 在 源码 中 打印 出 Hello 
World 不过 这 看起来 很傻 既然 已经 知道 了 结果 
还要 这 算法 做 什么 呢 答案 很 简单 这 
只是 个 学习 的 训练 下一个 遗传算法 使用 PHP 将 
减少 人工 痕迹 但是 我们 总要 先 开始 遗传算法 基础 
算法 的 基本 目的 就是 生成 一串 备选 答案 并 
使用 一 系列 的 反馈 知道 这些 备选 离 最优 
方案 还有 多远 离 最优 方案 最远 的 的 被 
淘汰 掉 离 最优 方案 近 的 留下来 和 其他 
备选 方案 结合 并 做 轻微 的 突变 一次 次 
修改 备选 方案 并 时刻 检查 离 最优 解的/nr 距离 
这些 备选 答案 称作 染色体 染色体 间 结合 产生 后代 
并且 突变 优胜劣汰 适者生存 它们 产生 的 后代 或许 具有 
更多 适应 自然选择 的 特性 对于 解决 Hello World 这样 
的 问题 如此 是不是 很 诡异 放心 吧 遗传算法 绝 
不是 只 善于 解决 这 类 问题 染色体 染色体 就是 
一个 备选 方案 的 表达 在 我们 的 例子 中 
染色体 本身 就是 一段 字符 我们 设定 所有 的 染色体 
都是 长度 为 13 的 字符串 Hello World 的 长度 
就是 13 下面 列出 了 一些 符合 备选 方案 的 
染色体 Gekmo + xosmd Gekln worle Fello wosld Gello wprld 
Hello world 很明显 最后 一个 是 正确 或 全局 最优 
的 的 染色体 但是 我们 如何 测量 染色体 是否 优秀 
呢 价值 函数 价值 函数 或 误差函数 是 一个 测量 
染色体 优秀 程度 的 方法 如果 我们 把 他们 称为 
适应度 函数 那么 所得 分数 越高 越好 如果 我们 使用 
的 是 价值 函数 当然 分数 越低 越好 在 本例 
中 我们 需要 按 以下 规则 定义 价值 函数 针对 
字符串 的 每个 字节 指出 备选 方案 和 目标 方案 
之间 在 ASCII 码 上 的 差值 然后 取 差值 
的 平方 以 确保 值 为 正数 举例 如果 我们 
有 个字符 Ａ   ASCII 65 但是 期望 的 字符 
应该是 Ｃ ASCII 67 那么 价值 计算 的 结果 就为 
４ 67 65 = 2 2 ^ 2 = 4 
. 之所以 采用 平方 就是 要 确保 值 为 正数 
你 当然 也 可以 取 绝对值 为了 加深 学习 请在 
实际 操作 中 灵活 应用 采用 这样 的 规则 我们 
能 计算 出 以下 ５例 染色体 的 价值 Gekmo + 
xosmd   7 Gekln worle   5 Fello wosld   
5 Gello wprld   2 Hello world   0 在 
本例 中 该 方法 简单 而且 人工 痕迹 明显 很显然 
我们 的 目标 是 使 代价 cost 为零 一旦 为零 
程序 就 可以 停 下来 了 有时 情况 并不 如此 
比如 当 你 在 寻找 最低 代价 时 需要 用 
不同 的 方法 结束 计算 反之 如果 寻找 的 是 
适应性 最高 分值 时 可能 需要 用 到 其他 的 
条件 来 停止 计算 价值 函数 是 遗传算法 中 非常 
重要 的 内容 因为 如果 你 足够 聪明 就能 使用 
它 来 调和 完全 不 相干 的 参数 在 本例 
中 我们 只 关注 字符 但是 如果 你 是 在 
建立 一套 驾驶 导航 应用 需要 权衡 过路费 距离 速度 
交通灯 糟糕 的 邻 车 还有 桥梁 等 等 情况 
把 这些 完全 不 相干 的 参数 封 装进 统一 
优美 整洁 的 价值 函数 中 来 处理 最终 依据 
参数 不同 的 权重 获得 路径 信息 交配 和 死亡 
交配 是 生活 中 的 一个 常态 我们 会 在 
遗传算法 中 大量 使用 它 交配 绝对 是 一个 魔幻 
时刻 两段 染色体 为 分享 彼此 的 信息 坠入 爱河 
从 技术 层面 描述 交配 就是 交叉 但是 我 还是 
愿意 称呼 其为 交配 因为 能使 所 描绘 的 图景 
更加 具有 直觉性 到 目前 为止 我们 还 没有 谈到 
遗传算法 中的 种群 概念 但是 我 敢说 只要 你 运行 
一个 遗传算法 你 某个 时刻 看到 的 可不 仅仅 是 
一个 染色体 这么 简单 你 可能 会 同时 拥有 20 
100 或 5000条 染色体 就像 进化 一样 你 可能 会 
倾向 于让/nr 那些 最 强壮 的 染色体 彼此 交配 希望 
得到 的 后代 比 其 父母 更 优秀 实际上 让 
字符 交配 是 非常 简单 的 比如 我们 的 例子 
Hello World 选取 两段 备选 字符串 染色体 各自 从 中间 
截 断成 两个 片段 这里 你 可以 使用 任何 方法 
如果 你 愿意 甚至 可以 选取 随机 的 点位 进行 
截取 我们 就 选取 中间 位置 吧 然后 用 第一段 
字符串 的 前半 部分和 第二段 字符串 的 后半 部分合成 一个 
新的 染色体 字符串 继续 用 同样 的 方法 把 第二段 
字符串 的 前半 部分和 第一段 字符串 的 后半部 分合 并成 
另 一个 新的 染色体 字符串 以 下面 两个 字符串 为例 
Hello wprld   1 Iello world   1 从 中间 
断开 通过 合 并 获得 两个 新的 字符串 也 就是 
两个 新 的 孩子 Iello wprld   2 Hello world 
  0 如上 所见 两个 后代 中 有 一个 包含 
了 父母 的 最佳 特质 简直 完美 另 一个 则 
非常 糟糕 交配 就是 把 基因 从 父代 传递 到 
子代 的 过程 突变 独自 交配 会 产生 一个 问题 
近亲繁殖 如果 你 只是 让 候选者 们 一代 一代 地 
交配 下去 你 会 到达 一个 局部 最优 的 境地 
并 卡 在那里 出不来 这个 答案 虽然 看起来 还 不错 
但 并 不是 你 想要 的 全局 最优 把 基因 
生活 的 世界 想象 成 一个 物理 设定 这里 具有 
起伏 的 山峰 和 沟谷 有 那么 一个 山谷 是 
这个 世界 中 的 最低 处 同时 也 有 很多 
其他 小 一些 的 谷地 恰恰 基因 被 这些 较小 
的 谷地 围绕 整体而言 还在 海平面 之上 需要 寻找 一个 
解决方案 就像 从 山顶 不同 的 随机 位置 滚落 一些 
球 很显然 这些 球会 卡在 某个 低处 他们 中 的 
很多 会被 山上 的 微小 凹陷 局部 最优 卡住 你 
的 工作 就是 确保 至少 有 一个 球 抵达 整个 
世界 的 最低 处 全局 最优 既然 球 是从 随机 
位置 开始 滚落 的 就 很难 从 开始 处 掌控 
过程 几乎 不 可能 预测 哪个 球 会被 卡 在哪里 
但是 你 能做 的 是 随机 挑选 一些 球 并给 
他们 一脚 可能 就是 这 一脚 会 帮助 他们 滚向 
更 低处 想法 就是 稍微 晃动 一下 系统 使得 这些 
球 不要 在 局部 最 优处 停留 太久 这 就是 
突变 这 是 一个 完全 随机 的 由 你 选定 
一个 神秘 的 未知 基因 产生 一定 比例 个数 的 
字符 随机 变化 如 下例 所示 你 停在 了 这两个 
染色体 上面 Hfllp worlb Hfllp worlb 没错 这 是 一个 
人为 的 案例 但 真的 会 发生 你 的 两条 
染色体 一模一样 意味着 他们 的 子 代与 父代 也 一模一样 
什么 进展 都没 产生 但是 如果 100条 染色 体中 有 
一个 在 某个 字节 上 发生 了 突变 如上 所示 
第二 条 染色体 仅仅 发生 一个 突变 从 Hfllp worlb 
变成 了 Ifllp worlb 那么 进化 就会 继续 因为 子代 
和 父代 间 再次 产生 了 差异 是 突变 推动 
进化 前行 什么 时候 怎么 突变 完全 取决于 你 自己 
再次 我们 开始 实验 后面 我 所 提供 的 代码 
会有 高达 50% 的 突变 几率 但是 这 也 只是 
为了 示范 目的 你 可以 让 它 的 突变 几率 
低 一些 比如 1% 我 的 代码 中 是 让 
字符 在 ASCII 码 上 移动 1 你 可以 有 
自己 更 激进 的 设定 实验 测试 学习 这 就是 
唯一 的 途径 染色体 总结 染色体 代表 你 要 解决 
问题 的 备选 方案 他们 由 表达 本身 组成 在 
我们 的 例子 中 是 一个 长度 为 13 的 
字符串 一个 价值 或 适应性 分数 以 及其 函数 交配 
及 突变 的 能力 我 喜欢 把 这些 东西 用 
OOP 的 观念 考虑 进去 染色体 的 类 可以 像 
下面 这样 定义 属性 Genetic codeCost / fitness score 方法 
M a t e M u t a t e 
C a l c u l a t e Fitness 
Score 我们 现在 考虑 怎么 让 基因 在 遗传算法 的 
最后 一个 谜团 种群 中 交互 . 种群 种群 就是 
一组 染色体 种群 通常 会 保持 相同 的 尺寸 但是 
会 随着 时间 的 推移 发展 到 一个 成本 更 
均匀 的 状态 你 需要 选择 种群 大小 我 选择 
20 你 可做 任意 选择 10 100 或 1000 如你所愿 
当然 有 优势 也有 劣势 正如 我 几次 提到 的 
实验 并 自己 探索 种群 离不开 代 一个 典型 的 
代 可能 会 包含 为 每个 染色体 计算 代价 / 
适应性 的 分值 以 代价 / 适应性 分值 排序 染色体 
淘汰 一 定数 目的 弱 染色体 让 一定 数目 的 
最强 的 染色体 交配 随机 突变 某些 成员 某种 完整性 
测试 如 你 怎么 知道 该 问题 得到 了 解决 
开始 和 结束 创建 一个 种 群 非常 简单 只是 
让 随机 产生 的 染色体 充满 整个 种群 即可 在 
我们 的 例子 中 完全 随机 字符串 的 成本 分数 
将会 很 恐怖 所以在 我 的 代码 中 以 平均分 
30000 的 价值 分数 开始 数目 庞大 不是 问题 这 
就是 进化 的 目的 也 是 我们 在 这里 的 
原因 知道 如何 停止 种群 繁衍 需要 一点 小 技巧 
当前 的 例子 很 简单 当 价值 分数 为 0时 
就 停止 但这 不 总是 那么 管用 有时 你 甚至 
不 知道 最小值 是 什么 如果 用 适应性 代替 的话 
你 不 知道 可能 的 最大值 是 什么 在 这些 
情况 下 你 应该 指定 一个 完整 的 标准 可以 
是 任何 你 想要 的 但是 这里 建议 用 下面 
的 逻辑 跳离 算法 如果 经过 一 千代 的 繁衍 
最佳值 也 没什么 变化 可以 说 该 值 就是 答案 
了 该 停止 计算 了 这个 判断 标准 可能 意味着 
你 永远 得不到 全局 最优 解 但是 很多 情况 下 
你 根本 不 需要 得到 全局 最优 解 足够 接近 
就行了 代码 我 还是 喜欢 OOP 方法 当然 也 喜欢 
粗旷 简单 的 代码 我会 尽 可能 采用 简单 直接 
的 策略 即使 在 某些 地方 还 比较 粗糙 注意 
即使 我 在上 文中 把 基因 改成 了 染色体 这里 
代码 中 还是 使用 基因 作为 术语 只是 语义上 有些 
区别 罢了 var Gene = function code { if code 
this . code = code this . cost = 9999 
} Gene . prototype . code = Gene . prototype 
. random = function length { while length { this 
. code + = String . fromCharCode Math . floor 
Math . random * 255 } } 很 简单 该类 
的 构造函数 接受 一个 字符串 作为 参数 设定 一个 价值 
cost 一个 辅助 函数 用来 生成 新的 随机 的 染色体 
Gene . prototype . calcCost = function compareTo { var 
total = 0 for i = 0 i this . 
code . length i + + { total + = 
this . code . charCodeAt i compareTo . charCodeAt i 
* this . code . charCodeAt i compareTo . charCodeAt 
i } this . cost = total } 价值 函数 
把 模型 字符串 作为 一个 参数 和 自身 的 字符 
串在 ASCII 编码 方面 做 差 运算 然后 取其 平方 
值 Gene . prototype . mate = function gene { 
var pivot = Math . round this . code . 
length / 2 1 var child1 = this . code 
. substr 0 pivot + gene . code . substr 
pivot var child2 = gene . code . substr 0 
pivot + this . code . substr pivot return new 
Gene child1 new Gene child2 } 交配 函数 以 一个 
染色体 为 参数 找到 中间 点 以 数组 的 方式 
返回 两个 新的 片段 Gene . prototype . mutate = 
function chance { if Math . random chance return var 
index = Math . floor Math . random * this 
. code . length var upOrDown = Math . random 
突变 函数 把 一个 浮点 值 作为 参数 代表 染色体 
的 突变 几率 var Population = function goal size { 
this . members = this . goal = goal this 
. generationNumber = 0 while size { var gene = 
new Gene gene . random this . goal . length 
this . members . push gene } } 种群 类 
中的 构造器 以 目标 字符串 和 种群 大小 作为 参数 
然后 用 随机 生成 的 染色体 建立 种群 Population . 
prototype . sort = function { this . members . 
sort function a b { return a . cost b 
. cost } } 定义 一个 Population . prototype . 
sort 方法 作为 一个 辅助 函数 对 种群 依据 他们 
的 价值 cost 分数 排序 Population . prototype . generation 
= function { for var i = 0 i this 
. members . length i + + { this . 
members i . calcCost this . goal } this . 
sort this . display var children = this . members 
0 . mate this . members 1 this . members 
. splice this . members . length 2 2 children 
0 children 1 for var i = 0 i this 
. members . length i + + { this . 
members i . mutate 0.5 this . members i . 
calcCost this . goal if this . members i . 
code = = this . goal { this . sort 
this . display return true } } this . generationNumber 
+ + var scope = this setTimeout function { scope 
. generation } 20 } 种群 的 生产 方法 是 
最重 的 部分 其实 也 没有 什么 魔法 display 方法 
只是 把 结果 渲染 到 页面 上 我 设置 了 
代际 间隔 时长 不至于 让 事情 爆炸 般 增长 注意 
在 本例 中 我 仅仅 让 排 在最 顶端 的 
两个 染色体 交配 至于 在 你 自己 的 实践 中 
怎么 处理 可多 做 各种 不同 的 尝试 window . 
onload = function { var population = new Population Hello 
world 20 population . generation } 还是 看 实例 吧 
http / / jsfiddle . net / bkanber / BBxc6 
/ utm _ source = website & utm _ medium 
= embed & utm _ campaign = BBxc6 