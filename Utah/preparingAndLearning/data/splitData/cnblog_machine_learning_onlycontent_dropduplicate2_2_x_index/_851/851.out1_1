运行 效果 如下 详细 代码 分析 过程 如下 1 导入 
需要 用到 的 python 包或/nr 函数 4 将 dataset 数据 
进行 归一化 处理 使用 kmeans 函数 进行 聚 类 输入 
第一 个 参数 是 数据 第二个 参数 为 聚 类 
个数 2 k means 最后 输出 的 结果 其 实是 
两维 的 第 一维 是 聚 类 中心 第 二维 
是 损失 distortion 新建 一个 celltype 变量 用来 保存 最 
后 处理 的 图片 所以 它 对应 dataset 数据集 来说 
只有 1列 有 一张 图片 所有 像素 总和 面积 那么 
多 行 对 dataset 归一化 处理 后 得到 对应 的 
数据集 whitened 进行 enumerate 这个 函数 返回 数组 元素 值 
的 同时 也 返回 这个 值 所 对应 的 数组 
下标 在上面 执行 了 centroids distortion = kmeans whitened 2 
意义 在于 把 whitened 所有 的 数据 分成 两类 两部分 
并且 这 两类 两部分 数据/n 都又/nr 分别/d 对应/vn 着/uz 有/v 
一个/m 中心/n 或者 称 它 为 质点 centroids 把 whitened 
里 的 每一个 元素 和 这两个 质点 进行 求解 它 
的 欧几里得 距离 也 就是 点 和点/nr 之间 的 距离 
如果 距离 0类 比较 近 d1 d2 那么 对应 的 
图片 celltype 的 位置 的 数值 就 赋值 0 否则 
对应 的 图片 celltype 的 位置 的 数值 就 赋值 
1 经过 这个 for 循环 之后 就会/i 得到/v 最后/f 那张/nr 
图片/n 的/uj 每个/r 像素/n 的/uj 特征/n 或者 可以 说 成是/nr 
这个 像素 它 是 0类 会 是 1类 最后/f 那张/nr 
图片/n 哪里/r 需要/v 着色/n 哪里 不 需要 着色 celltype/w 其实/d 
就是/d 记录/n 了/ul 最后/f 那张/nr 图片/n 的/uj 每个/r 像素/n 的/uj 
特征/n 所以 也 可以 把 它 称为 最后 我们 感兴趣 
那张 图片 的 特征向量 5 读出 dataset 图片 并且 获取 
它 的 第 1 通道 值 和 求出 这个 通道 
值 的 最大 方差 保存/v 并/c 显示/v 大/a 于/p 这个/r 
方/n 差值/n 的/uj 图片/n 6 读取 样本 的 550 . 
jpg 图片 的 第 1 通道 值 并且 只 选择 
大于 80 的 值 保存 在 变量 II 中 保存 
并 显示 II 图片 7 将 II 的 里面 的 
数值 类型 变为 浮点 型 定义 一个 pix _ num 
变量 作为 celltype 图片 特征 矩阵 向量 的 下标 用来 
每次 对 图片 I _ seg _ float 涂色 后 
换行 用 的 I _ seg _ float 和I_/nr seg 
一样 也 是 一个 二维 数组 使用 enumerate 依次 迭 
代出 它 里面 的 元素 的 值 并且 同时 将 
这个 值 的 下标 也 返回 了 如果 图片 I 
_ seg _ float 数组 里面 的 元素 不是 0 
那么 就 代表 着 是 我们 需要 着色 的 一个 
像素点 也 就是 我们 感兴趣 的 地方 这个 像素 的 
位置 就是 I _ seg _ float j k 而 
它 被 涂上 的 颜色 值 是 这个 像素 的 
特征值 celltype pix _ num 乘以 100 后 再加 100 
涂完色/nr 就 换行 pix _ num + = 1 . 
再将 I _ seg _ float 图片 类型 转化成 uint8 
类型 输出 并 保存 I _ seg _ result 图片 
8 读取 上面 I _ seg _ result . jpg 
图片 并 取得 它 第 1 通道 大于 50 的 
值 保存 在 III 中 保存 并 显示 这个 图片 
变量 9 读取 上面 第 6 8 保存 的 两张 
图片 并且 都 获取 它们 第 0 通道 的 值 
并且 其中 第 8 保存 的 那张 图片 获取 里面 
大于 100 的 值 显示 如下 10 上面 的 第三 
幅 图 是 根据 筛选 处理 后 需要 保留 的 
红色 区域 下面 的 两个 for 循环 就是 把 第三幅 
图 绘制 到 第二幅 图 里面 这样 就 可以 看到 
很 清晰 的 细胞 与非 细胞 的 对比 效果 了 
如下 图 所示 实验 总结 第一种 图片 处理 方法 使用 
的 k means 算法 这个 算法 的 理论 比较完善 并且 
实现 起来 也 不是 很 麻烦 但是 它 需要 进行 
大量 较为 复杂 的 簇 的 分类 计算 关于 开始 
质点 选择 如果 不好 直接 导致 算法 的 复杂度 增加 
甚至 失败 得到 错误 的 分类 结果 从 上面 的 
三张 最后 图片 中 通过 相互 比较 可以 看到 k 
means 算法 得到 的 结果 将 一些 细胞 漏掉 了 
这 很可能 就是 分类 的 结果 不好 造成 的 第二种 
图片 处理 方法 是 求和 生存 法 这个 处理 方法 
相对于 上面 的 k means 算法 明显 大大 减 低了 
运算 复 制度 并且 实现 起来 也 明显 要比 k 
均值 算法 要 简单 许多 它 是 通过 直接 获取 
图片 所有 全部 信息 的 叠加 分类 结果 再 取得 
一个 合适 显示 的 值得 到 需要 显示 的 图片 
特征 然后 根据 这个 特征 来 进行 绘图 就 可以 
了 通过 比较 三张 最后 效果 图片 可以 发现 这个 
种 方法 的 处理 得到 的 效果 是 最好 的 
这个 方法 的 缺点 是 数学 等 学科 理论 依据 
不强 所以 没有 推广 适用 的 普遍性 但 它 是 
上面 处理 得到 的 结果 最好 的 所以 这种 处理 
方法 还 有 很大 的 成长 完善 的 空间 第三种 
图片 处理 方法 是 点 方差 聚 类 法 这个 
处理 方法 其实 是 我 想 对 第二 种 完善 
虽 比 k means 算法 得到 的 结果 好 一点 
但 还是 比不上 简洁 的 第二 种 求和 生存 法 
很 容易 看到 这种 方法 的 运算量 和k/nr means 的 
差不多 过程 也 相对 要 复杂 了 一点 它 先是 
读取 了 所有 图片 然后 把 所有 图片 变 灰色 
再 获取 每张 灰色 图片 的 特征 分类 值 最后 
累 加到 数据集 dataset 中 这种 直接 就 利用 数值 
分类 方法 要比 k means 的 好上 许多 但 它 
是 对 灰色 图片 获得 的 特征 再 累加 不是 
原图 分类 的 结果 和k/nr means 差不多 但 比不上 第二种 
的 处理 结果 第四种 图片 处理 方法 是 累 加点 
方差 聚 类 K means 算法 它 的 处理 结果 
要 比上 面的 都要 好些 但 就是 计算 量比 k 
means 的 要 复杂 些 这种 处理 方法 是 先将 
初步 处理 的 所有 样本 图片 都 累加 保存 到 
一个 数组 变量 dataset 中 然后 使用 k means 算法 
对 这个 变量 进行 聚 类 成 两类 但 k 
means 的 缺点 如 上面 第 一种 处理 方法 所说 
的 有 可能 会 导致 失败 但 这种 处理 方法 
可以 在 一定 程度 上 客服 k means 这样 的 
缺点 但 运算量 要 增加 些 使用 k means 后 
继续 对 图片 进行 分割 比较 所以 在 很大 程度 
上 这样 的 处理 方法 会 得到 一个 相对 很好 
的 处理 结果 通过 这次 的 作业 我 掌握 了 
如何 读取 地图 数据 获取 地图 坐标 点 的 信息 
以及 按 特点 格式 输出 地图 坐标 点 等 相关 
知识 通过 使用 三 种 不同 的 方法 处理 图片 
我 对 图片 的 本质 图片 的 读取 图片 的 
保存 图片 着色 过滤 特征提取/nr 等/u 方面/n 技能/n 都有/nr 很大/a 
的/uj 提高/v 对 整体 与 部分 系统 与 统一 等 
辩证 思维 方法 和 python 代码 的 编写 能力 分析 
能力 等 也有 了 进步 一 的 提高 但在 完成 
任务 的 过程 中 发现 还有 许多 的 数学 python/w 
包的/nr 使用/v 等/u 方面/n 的/uj 知识/v 和/c 技能/n 存在/v 不足/a 
还 需要 继续 坚持 努力学习 补充 相关 的 知识 和 
技能 才 能够 应对 未来 更多 困难 与 挫折 的 
挑战 最后 很 感谢 老师 的 指导 和他的/nr 支持 . 
. . . . . 