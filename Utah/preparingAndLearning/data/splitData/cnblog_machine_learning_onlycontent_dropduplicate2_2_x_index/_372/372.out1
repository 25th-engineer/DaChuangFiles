前言 前面 两篇 主要 写 了 一些 机器学习 的 基础 
概念 从 本篇 开始 我们 来 了解 下 深度 学习 
深度 学习 是 机器 学习 的 一个 子集 是 一种 
特殊 的 数学 模型 同样 是从 输入 到 输出 深度 
学习 在 这 两者 之间 会 有 很多 层 称为 
隐 层 Hidden Layers 的 层 每 一层 将 会将 
输入 内容 进行 计算 并 自我调节 最终 得到 合理 模型 
这种 数学模型 非常 像 人类 目前 对 大脑 工作 原理 
的 认知 所以 也 称之为 人工神经网络 现在 市面 上 有数 
十种 深度 学习 框架 Wiki 传送门 一个 个 学过来 肯定 
精力 不够 那 我们 就 学 综合 评分 最高 的 
那个 Tensorflow Tensorflow 是由 Google 团队 在 2015年 11月 9日 
以 Apache 2.0 开源 许可证 开源 的 但 刚 发布 
的 版本 有 诸多 缺陷 bug 比较 多 性能比 较差 
使用 难度 比较 高 在 2017年 2月 16日 Google 宣布 
Tensorflow 1.0 正式 发布 该 版本 适用 于 工业 生产 
场景 所以在 该 版本 发布 之后 对 深度 学习 领域 
产生 了 极大 的 影响 其 大大 简化 了 编写 
深度 学习 的 代码 难度 并且在 Google 这面 大 旗下 
被 各种 专业 人员 以及 机器学习 爱好者 所 推崇 截止 
2018年 1月 9日 Tensorflow 在 Github 上 已经 有 7193个 
Watch 85038个 Star 和 41555个 Fork Tensorflow 在 短短 发布 
后的/nr 一年 不到 的 时间 里 已经 跃居 为 综合 
排名 第一 的 深度 学习 框架 为什么 会 如此 火爆 
呢 我 个人 猜测 理由 如下 深度 学习 目前 是 
大趋势 所以 得 抓紧 学习 抓住机遇 Google 的 技术 实力 
太强大 开源 过 很多 项目 都 非常 成功 比如 Android 
所以 跟着 Google 走 可能 不会 让 我们 失望 接口 
丰富 易用 且 支持 多种 语言 底层 是 C + 
+ 实现 的 这里 指 的 是 客户端 调用 底层 
API 的 语言 如 Python C + + Java Go 
易于 部署 包括 分布式 部署 本机 安装 Tensorflow 如果 你 
的 电脑 性能 还不错 可以 考虑 直接 在 本机 安装 
Tensorflow 官方 安装 文档 传送门 优先 考虑 使用 Anaconda 来 
安装 按照 官方 教程 一步步 执行 即可 安装 之后 需要 
在 Pycharm 中 执行 Tensorflow 的 代码 我们 这里 先用 
简单 的 输出 常量 的 代码 为例 此 代码 也是 
后 文中 demo1 . py 中的 代码 import tensorflow as 
tf node1 = tf . constant 3.0 dtype = tf 
. float32 node2 = tf . constant 4.0 # also 
tf . float32 implicitly print node1 node2 sess = tf 
. Session print sess . run node1 node2 常见 错误 
汇总 执行 代码 的 时候 你 可能 会 遇到 很多 
错误 我 这里 整理 了 一份 我 在此 过程 中 
遇到 的 错误 以及 对应 的 解决方案 供 大家 参考 
错误 提示 解决方案 Anaconda installation is not foundhttps / / 
stackoverflow . com / questions / 47624777 / pycharm anaconda 
installation is not foundImportError Could not find cudart64 _ 80 
. dll . TensorFlow requires that this DLL be installed 
in a directory that is named in your % PATH 
% environment variable . 由于 目前 Tensorflow 是 建立 在 
CUDA 8.0 之上 的 而 NVIDIA 官网 上 默认 是 
下载 CUDA 最新 版本 的 比如 目前 是 9.0 所以 
需要 打开 如下 页面 https / / developer . nvidia 
. com / cuda downloads 在 页面 的 最下面 找到 
Lagacy Releases 并 下载 CUDA 8 . 0ImportError Could not 
find cudnn64 _ 6 . dll . TensorFlow requires that 
this DLL be installed in a directory that is named 
in your % PATH % environment variable . Note that 
installing cuDNN is a separate step from installing CUDA and 
this DLL is often found in a different directory from 
the CUDA DLLs . You may install the necessary DLL 
by downloading cuDNN 6 from this URL https / / 
developer . nvidia . com / cudnn 注册 一个 NVEDIA 
的 开发者 账号 然后 下载 cudnn64 for cuda8 on windows 
下载 下来 的 文件 解压 之后 放到 cuda 目 录下 
对应 的 地方 cuda 比 如是 在 C \ Program 
Files \ NVIDIA GPU Computing Toolkit \ CUDA \ v 
8.0 解决 了 所有 问题 之后 如果 看到 以下 输出 
内容 就 表示 能 正常 运行 Tensorflow 了 Tensor Const 
0 shape = dtype = float32 Tensor Const _ 1 
0 shape = dtype = float32 2018 01 09 16 
48 59.940050 I C \ tf _ jenkins \ home 
\ workspace \ rel win \ M \ windows \ 
PY \ 36 \ tensorflow \ core \ platform \ 
cpu _ feature _ guard . cc 137 Your CPU 
supports instructions that this TensorFlow binary was not compiled to 
use AVX AVX2 3.0 4.0 Process finished with exit code 
0 使用 阿里云 PAI 来 实验 Tensorflow 概述 因为 机器 
学习 的 过程 非常 耗 性能 如果 在 一个 比 
较大 的 数据 集上 进行 学习 本机 CPU 使用 就 
会 达到 99% 而且 要 持续很久 这个 时候 就 无法 
干点/nr 别的 事 了 很 幸运 阿里云 提供 了 机器 
学习 平台 PAI Platform for Artificial Intelligence 里面 集成 了 
很多 主流 的 算法 以及 Tensorflow 的 不同 版本 目前 
是 1.0 1.1 1.2 而且 目前 公测 阶段 也 可以 
开启 2个 GPU 来 加快 执行 PAI 的 优势 有 
不/d 需要/v 本地/r 繁琐/a 的/uj 安装/v 和/c 解决/v 各种/r 安装/v 
坑/n 可以/c 调用/vn 云/ns 服务器资源/n 比起 本地 性能 更好 不影响 
阻塞 本机 其他 程序 的 使用 开始 执行 之后 等着 
执行 完毕 即可 算法 组件 都是 现成 的 而且 可以 
用 拖拽 的 方式 编排 算法 非常 方便 傻瓜化 我们 
唯一 要做 的 就是 提供 数据 和 编写 核心 执行 
脚本 现成 的 机器学习 案例 以及 相关 文档 可以 快速 
从 别人 的 经验 中 来 帮助 自己 理解 机器学习 
将 实验 直接 共享 到 社区 公测 阶段 免费 操作 
概览 开通 PAI 的 过程 并不 复杂 大致 步骤 如下 
首先 你 要 有一个 阿里云 账号 在 阿里云 后台 进入 
大 数据 数 加 机器学习 菜单 创建 一个 项目 如 
my _ project _ name 在 项目 管理 页面 勾选/nr 
my _ project _ name 的 开启 GPU 选项 为了 
方便 上传 本地 资源 到 PAI 建议 安装 OSS Browser 
工具 下载 地址 https / / help . aliyun . 
com / document _ detail / 61872 . html spm 
= 5176 . doc31886 . 2.5 . qwodVb 以 阿里云 
后台 最新 下载 地址 为准 如果 是 少量 文件 上传 
的话 使用 web 版 OSS 文件 管理 系统 来 管理 
文件 也 可以 本例 中 我们 直接 使用 web 版 
PS 开启 GPU 选项 示意图 目前 公测 阶段 虽然 PAI 
本身 是 免费 的 但是 OSS 是 收费 的 好在 
费用 很低 仅 作 学习 用 的话 一天 最多 几分 
钱 详细 实验 步骤 在 OSS 中 创建 测试 目录 
tensorflowtest 进入 tensorflowtest 目录 并 上传 脚本文件 demo1 . py 
内容 详见 本机 安装 Tensorflow 一节 进入 PAI 后台 首页 
创建 空白 实验 tensorflowdemo 在 空白 实验 中 加入 读 
OSS Bucket 组件 和 TensorFlow V 1.2 组件 并 选中 
Tensorflow 节点 在 右侧 的 参数 设置 中 将 Python 
代码 参数 选 为 我们 在 步骤 1 2中 上传 
的 demo1 . py 文件 点击 屏幕 最下方 的 运行 
按钮 执行 实验 本例 中 读 OSS Bucket 组件 并 
没有 什么 用 由于 PAI 实验 中 必须 要 数据源 
节点 因此 添加 空的读/nr OSS Bucket 组件 作为 数据源 因此 
在 执行 实验 的 时候 阿里云 将 检测 并 提示 
当前 实验室 作业 实验 将 会在 24 小时内 删除 查看 
执行 结果 在 实验 运行 后 每个 节点 右侧 出现 
一个 绿色 的 勾 表示 已 正确 执行 完毕 此时 
右键 该 节点 选择 查看 日志 选项 在 查看 日志 
弹出 框 中 滚动 到 中间 的 位置 找到 http 
/ / logview . odps . aliyun . com 的 
链接 如图 位置 鼠标 左键 点击 进入 之后 点击 下图 
中 红色 框 中的 detail 图标 在 弹出 的 Log 
Detail 页面 上 按 下图 中的 1 2 3 顺序 
依次 点击 在 弹出 的 Logview Stdout 页面 上 可以 
最终 看到 脚本 的 实际 输出 内容 与 在 本地 
IDE 中的 输出 一致 结语 我 已经 用 两种 不同 
的 方式 执行 了 第一 个 基于 Tensorflow 的 demo 
这个 demo 目前 跟 深度 学习 还 完全 搭 不 
上边 只是 能 成功 运行 Tensorflow 而已 后续 的 博文 
中 我 将 进一步 深入研究 本文 在 我 的 博客园 
和我的/nr 个人 博客 上 同步 发布 作者 保留版权 转载 请 
注明 来源 