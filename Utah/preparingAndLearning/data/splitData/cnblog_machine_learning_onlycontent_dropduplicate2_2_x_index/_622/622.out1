机器学习 最 重要 的 东西 就是 算法     这 
里面 的 水 很深   所以 呢 我 就 简单 
的 整理 了 一下 基础 的 操作 # 导入 numpy 
库 as 别名 为了 怕 重名 import numpy as np 
# 打印 版本号 print np . version . version # 
声明 一个 numpy 数组 一维 数组 nlist = np . 
array 1 2 3 print nlist # ndim 方法 用来 
查看 数组 维度 print nlist . ndim # 声明 一个二维 
数组 nlist _ 2 = np . array 1 2 
3 4 5 6 print nlist _ 2 print nlist 
_ 2 . ndim # 使用 shape 属性 来 打印 
多维 数组 的 形状 print nlist . shape print nlist 
_ 2 . shape # 使用 size 方法 来 打印 
多维 数组 的 元素 个数 print np . size nlist 
print np . size nlist _ 2 # 打印 numpy 
多维 数组 的 数据 类型 # 打印 普通 listprint type 
1 2 3 print type nlist # 使用 dtype 属性 
来 打印 多维 数组 内部 元素 的 数据 类型 print 
type 123 print nlist . dtype # itemsize 属性 来 
打印 多维 数组 中的 数据类型 大小 字节 print nlist . 
itemsize print nlist _ 2 . itemsize # data 属性 
用来 打印 数据 的 缓冲区 bufferprint nlist . data # 
使用 reshape 方法来 反向 生成 多维 数组 第一 个 数字 
是 几维 数组 的 第二 个 数字 是 2行 第三 
个 数字 是 4列 nlist _ 3 = np . 
array range 24 . reshape 3 2 4 nlist _ 
4 = np . array range 32 . reshape 4 
2 4 print nlist _ 3 print nlist _ 4 
# 使用 浮点 作为 元素 类型 nlist _ float = 
np . array 1.0 2.0 3.0 print nlist _ float 
. dtype # 使用 字符串 nlist _ string = np 
. array 1 2 3 print nlist _ string . 
dtype # 四维 数组 nlist _ 4 = np . 
array range 20 . reshape 5 2 2 1 print 
nlist _ 4 print nlist _ 4 . ndim # 
声明 一个 size 为 20 的 四维 数组 nlist _ 
4 = np . array range 20 . reshape 1 
2 5 2 print nlist _ 4 # 声明 一个 
3 * 3 的 数组 nlist _ 33 = np 
. array 1 2 3 4 5 6 2 3 
6 # 属性 print nlist _ 33 print nlist _ 
33 . shape print nlist _ 33 . ndim print 
nlist _ 33 . size # 方法 print np . 
size nlist _ 33 print np . shape nlist _ 
33 print np . ndim nlist _ 33 # 自动 
生成 元素 为 1 的 多维 数组 使用 ones 方法 
nlist _ ones = np . ones 4 4 print 
nlist _ ones print nlist _ ones . dtype # 
使用 zeros 来 生成 元素 为 0 的 多维 数组 
nlist _ zeros = np . zeros 4 4 print 
nlist _ zeros print nlist _ zeros . dtype # 
使用 empty 方法来 生成 随机 多维 数组 使用 第二 个 
参 数来 指定 数据类型 nlist _ empty = np . 
empty 2 2 dtype = np . int print nlist 
_ empty print nlist _ empty . dtype # 把 
普通 list 转换 为 数组 x = 1 2 3 
x = 1 2 3 4 5 print np . 
ndim x print np . shape x print type x 
nlist = np . asarray x print type nlist print 
nlist . ndim print nlist . shape # frombuffer 通过 
字符串 buffer 内存地址 切片 来 生成 多维 数组 my _ 
str = b Hello World nlist _ str = np 
. frombuffer my _ str dtype = S1 print nlist 
_ str x = np . array 1 2 3 
4 print x # 指定 axis 属性 可以 指定 当前 
多维 数组 的 维度 axis = 0 列 级 相加 
keepdims = True 保持 维度 sum0 = np . sum 
x axis = 0 keepdims = True print sum0 # 
axis = 1 行 级 相加 sum1 = np . 
sum x axis = 1 keepdims = True print sum1 
# 多维 数组 赋值 x = np . array 1 
2 y = x . copy y 0 = 3 
# x 0 = 3print x # 维度 级 的 
运算 a = np . array 1 2 3 4 
5 6 b = np . array 10 20 30 
40 50 60 # 使用 vstack 方法 列 级 添加 
suma = np . vstack a b print suma # 
hstack 方法 行 级 添加 sumb = np . hstack 
a b print sumb # 多维 数组 的 调用 nlist 
= np . array 1 2 3 4 5 6 
# 取 元素 4print nlist 1 1 # 第二种 写法 
print nlist 1 1 nlist 2 1 = 7print nlist 
# 删除 方法 delete # 删除 nlist 第二行 nlist = 
np . delete nlist 1 axis = 0 print nlist 
nlist = np . delete nlist 0 axis = 1 
print nlist 这些 只是 一 部分 基础 方法 和 算法 
想学 的 精 的话 只能 自己 慢慢 摸索 了   
胜利 就 在前方 加油 