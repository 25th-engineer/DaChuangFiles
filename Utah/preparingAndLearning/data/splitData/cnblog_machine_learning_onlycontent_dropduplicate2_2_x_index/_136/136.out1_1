import numpy as np import matplotlib . pyplot as plt 
from matplotlib import cm from mpl _ toolkits . mplot3d 
import Axes3D from sklearn . model _ selection import train 
_ test _ split from sklearn import datasets linear _ 
model discriminant _ analysis def load _ data # 使用 
scikit learn 自带 的 iris 数据集 iris = datasets . 
load _ iris X _ train = iris . data 
y _ train = iris . target return train _ 
test _ split X _ train y _ train test 
_ size = 0.25 random _ state = 0 stratify 
= y _ train # 线性 判断 分析 L i 
n e a r D i s c r i 
m i n a n t A n a l 
y s i s def test _ L i n 
e a r D i s c r i m 
i n a n t A n a l y 
s i s * data X _ train X _ 
test y _ train y _ test = data lda 
= discriminant _ analysis . L i n e a 
r D i s c r i m i n 
a n t A n a l y s i 
s lda . fit X _ train y _ train 
print Coefficients % s intercept % s % lda . 
coef _ lda . intercept _ print Score % . 
2f % lda . score X _ test y _ 
test # 产生 用于 分类 的 数据集 X _ train 
X _ test y _ train y _ test = 
load _ data # 调用 test _ L i n 
e a r D i s c r i m 
i n a n t A n a l y 
s i s test _ L i n e a 
r D i s c r i m i n 
a n t A n a l y s i 
s X _ train X _ test y _ train 
y _ test def plot _ LDA converted _ X 
y 绘制 经过 LDA 转换 后的/nr 数据 param converted _ 
X 经过 LDA 转换 后的/nr 样本 集 param y 样 
本集 的 标记 fig = plt . figure ax = 
Axes3D fig colors = rgb markers = o * s 
for target color marker in zip 0 1 2 colors 
markers pos = y = = target . ravel X 
= converted _ X pos ax . scatter X 0 
X 1 X 2 color = color marker = marker 
label = Label % d % target ax . legend 
loc = best fig . suptitle Iris After LDA plt 
. show def run _ plot _ LDA 执行 plot 
_ LDA 其中 数据集 来自于 load _ data 函数 X 
_ train X _ test y _ train y _ 
test = load _ data X = np . vstack 
X _ train X _ test Y = np . 
vstack y _ train . reshape y _ train . 
size 1 y _ test . reshape y _ test 
. size 1 lda = discriminant _ analysis . L 
i n e a r D i s c r 
i m i n a n t A n a 
l y s i s lda . fit X Y 
converted _ X = np . dot X np . 
transpose lda . coef _ + lda . intercept _ 
plot _ LDA converted _ X Y # 调用 run 
_ plot _ LDA run _ plot _ LDA def 
test _ L i n e a r D i 
s c r i m i n a n t 
A n a l y s i s _ solver 
* data 测试 L i n e a r D 
i s c r i m i n a n 
t A n a l y s i s 的 
预测 性能 随 solver 参数 的 影响 X _ train 
X _ test y _ train y _ test = 
data solvers = svd lsqr eigen for solver in solvers 
if solver = = svd lda = discriminant _ analysis 
. L i n e a r D i s 
c r i m i n a n t A 
n a l y s i s solver = solver 
else lda = discriminant _ analysis . L i n 
e a r D i s c r i m 
i n a n t A n a l y 
s i s solver = solver shrinkage = None lda 
. fit X _ train y _ train print Score 
at solver = % s % . 2f % solver 
lda . score X _ test y _ test # 
调用 test _ L i n e a r D 
i s c r i m i n a n 
t A n a l y s i s _ 
solver test _ L i n e a r D 
i s c r i m i n a n 
t A n a l y s i s _ 
solver X _ train X _ test y _ train 
y _ test def test _ L i n e 
a r D i s c r i m i 
n a n t A n a l y s 
i s _ shrinkage * data 测试 L i n 
e a r D i s c r i m 
i n a n t A n a l y 
s i s 的 预测 性能 随 shrinkage 参数 的 
影响 X _ train X _ test y _ train 
y _ test = data shrinkages = np . linspace 
0.0 1.0 num = 20 scores = for shrinkage in 
shrinkages lda = discriminant _ analysis . L i n 
e a r D i s c r i m 
i n a n t A n a l y 
s i s solver = lsqr shrinkage = shrinkage lda 
. fit X _ train y _ train scores . 
append lda . score X _ test y _ test 
# # 绘图 fig = plt . figure ax = 
fig . add _ subplot 1 1 1 ax . 
plot shrinkages scores ax . set _ xlabel r shrinkage 
ax . set _ ylabel r score ax . set 
_ ylim 0 1.05 ax . set _ title L 
i n e a r D i s c r 
i m i n a n t A n a 
l y s i s plt . show # 调用 
test _ LinearDiscr test _ L i n e a 
r D i s c r i m i n 
a n t A n a l y s i 
s _ shrinkage X _ train X _ test y 
_ train y _ test 