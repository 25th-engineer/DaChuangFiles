类别 不 平衡 就是指 分类 任务 中 不同 类别 的 
训练 样例 数目 差别 很大 的 情况 常用 的 做法 
有三种 分别 是 1 . 欠 采样 2 . 过 
采样 3 . 阈值 移动 由于 这 几天 做 的 
project 的 target 为 正值 的 概率 不到 4% 且 
数据量 足够 大 所以 我 采用 了 欠 采样 欠 
采样 即 去除 一些 反例 使得 正 反例 数目 接近 
然后 再 进行 学习 基本 的 算法 如下 def undersampling 
train desired _ apriori # Get the indices per target 
value idx _ 0 = train train . target = 
= 0 . index idx _ 1 = train train 
. target = = 1 . index # Get original 
number of records per target value nb _ 0 = 
len train . loc idx _ 0 nb _ 1 
= len train . loc idx _ 1 # Calculate 
the undersampling rate and resulting number of records with target 
= 0 undersampling _ rate = 1 desired _ apriori 
* nb _ 1 / nb _ 0 * desired 
_ apriori undersampled _ nb _ 0 = int undersampling 
_ rate * nb _ 0 print Rate to undersample 
records with target = 0 { } . format undersampling 
_ rate print Number of records with target = 0 
after undersampling { } . format undersampled _ nb _ 
0 # Randomly select records with target = 0 to 
get at the desired a priori undersampled _ idx = 
shuffle idx _ 0 n _ samples = undersampled _ 
nb _ 0 # Construct list with remaining indices idx 
_ list = list undersampled _ idx + list idx 
_ 1 # Return undersample data frame train = train 
. loc idx _ list . reset _ index drop 
= True return train 因为 对应 具体 的 project 所以 
里面 欠 采样 的 为 反例 如果 要 使用 的话 
需要 做 一些 改动 欠 采样法 若 随机 丢弃 反例 
可能会 丢失 一些 重要 信息 为此 周志华 实验室 提出 了 
欠 采样 的 算法 EasyEnsemble 利用 集成 学习 机制 将 
反例 划分 为 若干 个 集合 供 不同 学习 器 
使用 这样 对 每个 学习 器 来看 都 进行 了 
欠 采样 但在 全局 来看 却不会 丢失 重要 信息 其实 
这个 方法 可以 再 基本 欠 采样 方法 上 进行 
些许 改动 即可 def easyensemble df desired _ apriori n 
_ subsets = 10 train _ resample = for _ 
in range n _ subsets sel _ train = undersampling 
df desired _ apriori train _ resample . append sel 
_ train return train _ resample 仔细 来看 下图 是 
原始 论文 Exploratory Undersampling for Class Imbalance Learning 里 的 
算法 介绍 PS 对于 类别 不 平衡 的 时候 采用 
CV 进行 交叉 验证 时 由于 分 类 问题 在 
目标 分布 上 表现 出 很大 的 不平衡性 如果 用 
sklearn 库 中的 函数 进行 交叉 验证 的话 建议 采用 
如 StratifiedKFold 和 t r a t i f i 
e d h u f f l e p l 
i t 中 实现 的 分层 抽 样方法 确保 相对 
的 类别 概率 在 每个 训练 和 验证 折叠 中 
大致 保留 Reference 机器学习 . 周志华 https / / www 
. kaggle . com / bertcarremans / data preparation explorationhttp 
/ / contrib . scikit learn . org / imbalanced 
learn / stable / generated / imblearn . ensemble . 
BalanceCascade . html # imblearn . ensemble . BalanceCascade 