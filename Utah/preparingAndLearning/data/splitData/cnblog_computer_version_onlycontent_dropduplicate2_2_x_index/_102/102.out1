Python3 下 OpenCV 的 安装 http / / blog . 
csdn . net / lwplwf / article / details / 
616164931 . 读 / 写 图像文件 OpenCV 的 imread 函数 
和 imwrite 函数 能 支持 各种 静态 图像 文件格式 不同 
系统 支持 的 文件 格式 不一样 但 都 支持 BMP 
格式 通常 还 应该 支持 PNG JPEG 和 TIFF 格式 
无论 哪种 格式 每个 像素 都会 有一个 值 但 不同 
格式 表示 像素 的 方式 有所 不同 如 import cv2import 
numpy as npimg = np . zeros 3 3 dtype 
= np . uint8 # 通过 二维 NumPy 数组 来 
简单 创建 一个 黑色 的 正方形 图像 print img # 
在 控制台 打印 该 图像 print img . shape # 
通过 shape 属性 来 查看 图像 的 结构 返回 行 
和列/nr 如果 有 一个 以上 的 通道 还会 返回 通 
道数 img = cv2 . cvtColor img cv2 . COLOR 
_ GRAY2BGR # 利用 cv2 . cvtColor 函数 将该 图像 
转换 成 BGR 格式 print img print img . shape 
cv2 . namedWindow Image # 显示 该 图像 cv2 . 
imshow Image img cv2 . waitKey 0 结果 为 0 
0 0 0 0 0 0 0 0 # 每个 
像素 都由 一个 8位 整数 来 表示 即 每个 像素 
值 的 范围 是 0 ~ 255 3 3 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 # 现在 每个 像素 
都由 一个 三元 数组 表示 并且 每个 整型 向量 分别 
表示 一个 B G 和R/nr 通道 其他 色彩 空间 如 
HSV 也 以 同样 的 方式 来 表示 像素 只是 
取值 范围 和 通道 数目 不同 例如 HSV 色彩 空间 
的 色度 值 范围 为 0 ~ 180 3 3 
3 # 此时 每个 像 素有 3 通道 可 读取 
一种 格式 的 图像文件 然后 将其 保存为 另一种 格式 如 
import cv2image = cv2 . imread flower . jpg # 
将 flower . jpg 的 图片 与 . py 文件 
放在 同 一目 录下 或者 使用 绝对路径 cv2 . imwrite 
flower . png image 程序运行 后 可 看到 文件夹 中 
多了 flower . png 的 图片 在 默认 情况 下 
即使 图像文件 为 灰度 格式 imread 函数 也会 返回 BGR 
格式 的 图像 BGR 与 RGB 表示 的 色彩 空间 
相同 但 字节 顺序 相反 下面 列出 的 选项 可 
作为 imread 函数 的 参数 IMREAD _ ANYCOLOR = 4IMREAD 
_ ANYDEPTH = 2IMREAD _ COLOR = 1IMREAD _ GARYSCALE 
= 0IMREAD _ LOAD _ GDAL = 8IMREAD _ UNCHANGED 
= 1cv2 . imread 图像 名称 可选 参数 可选 参数 
决定 读入 图像 的 模式 0 读入 的 为 灰度 
图像 即使 图像 为 彩色 的 1 读入 的 图像 
为 彩色 的 默认 如 下面 的 例子 将 加载 
的 PNG 文件 作为 灰度 图像 在 这个 过程 中 
会 丢失 所有 的 颜色 信息 然后又 将其 保存为 灰度 
的 PNG 图像 import cv2 import numpy as np garyImage 
= cv2 . imread flower . jpg cv2 . IMREAD 
_ GRAYSCALE cv2 . imwrite flower . png garyImage 程序运行 
后 文件夹 中 出现 了 灰度 图像 无论 采用 哪种 
模式 imread 函数 会 删除 所有 alpha 通道 的 信息 
透明度 imwrite 函数 要求 图像 为 BGR 或 灰度 格式 
并且 每个 通道 要 有 一定 的 位 bit 输出 
格式 要 支持 这些 通道 例如 bmp 格式 要求 每个 
通道 有 8位 而 PNG 允许 每个 通道 有8/nr 位或 
16位 储存 图像 函数 cv2 . imwrite 保存 的 图像 
名 图像 参数 正常 的 图像 储存 使用 就是 cv2 
. imwrite 保存 的 图像 名 图像 后面 一个 参数 
默认 保存 的 图像 名 还得 带 类型 比如 jpg 
bmp 等等 OpenCV 目前 支持 读取 bmp jpg png tiff 
等 常用 格式 第三个 参数 较 复杂 还 得分 是 
jpg bmp 等等 图像 的 类型 不同 而 不同 其实 
就是 决定 了 图像 储存 大小 清晰度 的 默认 的 
就 很好 此外 还有 一种 显示 图像 的 方式 import 
cv2 from matplotlib import pyplot as plt img = cv2 
. imread flower . jpg 0 # 打开 为 灰度 
图像 plt . imshow img gray # 必须 规定 为 
显示 的 为什么 图像 # plt . xticks plt . 
yticks # 隐藏 坐 标线 plt . show # 显示出来 
不要 也 可以 但是 一般 都 要了 Python3 下 OpenCV 的 安装 http / / blog . 
csdn . net / lwplwf / article / details / 
616164931 . 读 / 写 图像文件 OpenCV 的 imread 函数 
和 imwrite 函数 能 支持 各种 静态 图像 文件格式 不同 
系统 支持 的 文件 格式 不一样 但 都 支持 BMP 
格式 通常 还 应该 支持 PNG JPEG 和 TIFF 格式 
无论 哪种 格式 每个 像素 都会 有一个 值 但 不同 
格式 表示 像素 的 方式 有所 不同 如 import cv2import 
numpy as npimg = np . zeros 3 3 dtype 
= np . uint8 # 通过 二维 NumPy 数组 来 
简单 创建 一个 黑色 的 正方形 图像 print img # 
在 控制台 打印 该 图像 print img . shape # 
通过 shape 属性 来 查看 图像 的 结构 返回 行 
和列/nr 如果 有 一个 以上 的 通道 还会 返回 通 
道数 img = cv2 . cvtColor img cv2 . COLOR 
_ GRAY2BGR # 利用 cv2 . cvtColor 函数 将该 图像 
转换 成 BGR 格式 print img print img . shape 
cv2 . namedWindow Image # 显示 该 图像 cv2 . 
imshow Image img cv2 . waitKey 0 结果 为 0 
0 0 0 0 0 0 0 0 # 每个 
像素 都由 一个 8位 整数 来 表示 即 每个 像素 
值 的 范围 是 0 ~ 255 3 3 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 # 现在 每个 像素 
都由 一个 三元 数组 表示 并且 每个 整型 向量 分别 
表示 一个 B G 和R/nr 通道 其他 色彩 空间 如 
HSV 也 以 同样 的 方式 来 表示 像素 只是 
取值 范围 和 通道 数目 不同 例如 HSV 色彩 空间 
的 色度 值 范围 为 0 ~ 180 3 3 
3 # 此时 每个 像 素有 3 通道 可 读取 
一种 格式 的 图像文件 然后 将其 保存为 另一种 格式 如 
import cv2image = cv2 . imread flower . jpg # 
将 flower . jpg 的 图片 与 . py 文件 
放在 同 一目 录下 或者 使用 绝对路径 cv2 . imwrite 
flower . png image 程序运行 后 可 看到 文件夹 中 
多了 flower . png 的 图片 在 默认 情况 下 
即使 图像文件 为 灰度 格式 imread 函数 也会 返回 BGR 
格式 的 图像 BGR 与 RGB 表示 的 色彩 空间 
相同 但 字节 顺序 相反 下面 列出 的 选项 可 
作为 imread 函数 的 参数 IMREAD _ ANYCOLOR = 4IMREAD 
_ ANYDEPTH = 2IMREAD _ COLOR = 1IMREAD _ GARYSCALE 
= 0IMREAD _ LOAD _ GDAL = 8IMREAD _ UNCHANGED 
= 1cv2 . imread 图像 名称 可选 参数 可选 参数 
决定 读入 图像 的 模式 0 读入 的 为 灰度 
图像 即使 图像 为 彩色 的 1 读入 的 图像 
为 彩色 的 默认 如 下面 的 例子 将 加载 
的 PNG 文件 作为 灰度 图像 在 这个 过程 中 
会 丢失 所有 的 颜色 信息 然后又 将其 保存为 灰度 
的 PNG 图像 import cv2 import numpy as np garyImage 
= cv2 . imread flower . jpg cv2 . IMREAD 
_ GRAYSCALE cv2 . imwrite flower . png garyImage 程序运行 
后 文件夹 中 出现 了 灰度 图像 无论 采用 哪种 
模式 imread 函数 会 删除 所有 alpha 通道 的 信息 
透明度 imwrite 函数 要求 图像 为 BGR 或 灰度 格式 
并且 每个 通道 要 有 一定 的 位 bit 输出 
格式 要 支持 这些 通道 例如 bmp 格式 要求 每个 
通道 有 8位 而 PNG 允许 每个 通道 有8/nr 位或 
16位 储存 图像 函数 cv2 . imwrite 保存 的 图像 
名 图像 参数 正常 的 图像 储存 使用 就是 cv2 
. imwrite 保存 的 图像 名 图像 后面 一个 参数 
默认 保存 的 图像 名 还得 带 类型 比如 jpg 
bmp 等等 OpenCV 目前 支持 读取 bmp jpg png tiff 
等 常用 格式 第三个 参数 较 复杂 还 得分 是 
jpg bmp 等等 图像 的 类型 不同 而 不同 其实 
就是 决定 了 图像 储存 大小 清晰度 的 默认 的 
就 很好 此外 还有 一种 显示 图像 的 方式 import 
cv2 from matplotlib import pyplot as plt img = cv2 
. imread flower . jpg 0 # 打开 为 灰度 
图像 plt . imshow img gray # 必须 规定 为 
显示 的 为什么 图像 # plt . xticks plt . 
yticks # 隐藏 坐 标线 plt . show # 显示出来 
不要 也 可以 但是 一般 都 要了 Python3 下 OpenCV 的 安装 http / / blog . 
csdn . net / lwplwf / article / details / 
616164931 . 读 / 写 图像文件 OpenCV 的 imread 函数 
和 imwrite 函数 能 支持 各种 静态 图像 文件格式 不同 
系统 支持 的 文件 格式 不一样 但 都 支持 BMP 
格式 通常 还 应该 支持 PNG JPEG 和 TIFF 格式 
无论 哪种 格式 每个 像素 都会 有一个 值 但 不同 
格式 表示 像素 的 方式 有所 不同 如 import cv2import 
numpy as npimg = np . zeros 3 3 dtype 
= np . uint8 # 通过 二维 NumPy 数组 来 
简单 创建 一个 黑色 的 正方形 图像 print img # 
在 控制台 打印 该 图像 print img . shape # 
通过 shape 属性 来 查看 图像 的 结构 返回 行 
和列/nr 如果 有 一个 以上 的 通道 还会 返回 通 
道数 img = cv2 . cvtColor img cv2 . COLOR 
_ GRAY2BGR # 利用 cv2 . cvtColor 函数 将该 图像 
转换 成 BGR 格式 print img print img . shape 
cv2 . namedWindow Image # 显示 该 图像 cv2 . 
imshow Image img cv2 . waitKey 0 结果 为 0 
0 0 0 0 0 0 0 0 # 每个 
像素 都由 一个 8位 整数 来 表示 即 每个 像素 
值 的 范围 是 0 ~ 255 3 3 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 # 现在 每个 像素 
都由 一个 三元 数组 表示 并且 每个 整型 向量 分别 
表示 一个 B G 和R/nr 通道 其他 色彩 空间 如 
HSV 也 以 同样 的 方式 来 表示 像素 只是 
取值 范围 和 通道 数目 不同 例如 HSV 色彩 空间 
的 色度 值 范围 为 0 ~ 180 3 3 
3 # 此时 每个 像 素有 3 通道 可 读取 
一种 格式 的 图像文件 然后 将其 保存为 另一种 格式 如 
import cv2image = cv2 . imread flower . jpg # 
将 flower . jpg 的 图片 与 . py 文件 
放在 同 一目 录下 或者 使用 绝对路径 cv2 . imwrite 
flower . png image 程序运行 后 可 看到 文件夹 中 
多了 flower . png 的 图片 在 默认 情况 下 
即使 图像文件 为 灰度 格式 imread 函数 也会 返回 BGR 
格式 的 图像 BGR 与 RGB 表示 的 色彩 空间 
相同 但 字节 顺序 相反 下面 列出 的 选项 可 
作为 imread 函数 的 参数 IMREAD _ ANYCOLOR = 4IMREAD 
_ ANYDEPTH = 2IMREAD _ COLOR = 1IMREAD _ GARYSCALE 
= 0IMREAD _ LOAD _ GDAL = 8IMREAD _ UNCHANGED 
= 1cv2 . imread 图像 名称 可选 参数 可选 参数 
决定 读入 图像 的 模式 0 读入 的 为 灰度 
图像 即使 图像 为 彩色 的 1 读入 的 图像 
为 彩色 的 默认 如 下面 的 例子 将 加载 
的 PNG 文件 作为 灰度 图像 在 这个 过程 中 
会 丢失 所有 的 颜色 信息 然后又 将其 保存为 灰度 
的 PNG 图像 import cv2 import numpy as np garyImage 
= cv2 . imread flower . jpg cv2 . IMREAD 
_ GRAYSCALE cv2 . imwrite flower . png garyImage 程序运行 
后 文件夹 中 出现 了 灰度 图像 无论 采用 哪种 
模式 imread 函数 会 删除 所有 alpha 通道 的 信息 
透明度 imwrite 函数 要求 图像 为 BGR 或 灰度 格式 
并且 每个 通道 要 有 一定 的 位 bit 输出 
格式 要 支持 这些 通道 例如 bmp 格式 要求 每个 
通道 有 8位 而 PNG 允许 每个 通道 有8/nr 位或 
16位 储存 图像 函数 cv2 . imwrite 保存 的 图像 
名 图像 参数 正常 的 图像 储存 使用 就是 cv2 
. imwrite 保存 的 图像 名 图像 后面 一个 参数 
默认 保存 的 图像 名 还得 带 类型 比如 jpg 
bmp 等等 OpenCV 目前 支持 读取 bmp jpg png tiff 
等 常用 格式 第三个 参数 较 复杂 还 得分 是 
jpg bmp 等等 图像 的 类型 不同 而 不同 其实 
就是 决定 了 图像 储存 大小 清晰度 的 默认 的 
就 很好 此外 还有 一种 显示 图像 的 方式 import 
cv2 from matplotlib import pyplot as plt img = cv2 
. imread flower . jpg 0 # 打开 为 灰度 
图像 plt . imshow img gray # 必须 规定 为 
显示 的 为什么 图像 # plt . xticks plt . 
yticks # 隐藏 坐 标线 plt . show # 显示出来 
不要 也 可以 但是 一般 都 要了 