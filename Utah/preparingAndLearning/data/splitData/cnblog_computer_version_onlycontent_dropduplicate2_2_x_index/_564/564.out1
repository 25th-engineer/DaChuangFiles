横看成 岭 侧 成峰/nr 计算 视觉 大不同 观看 的 角度 
不同 成像 自然 不同 这对 计算机 视觉 来说 是个 大麻烦 
但 计算机 视觉 应用 如此 广泛 却 又有 不得不 研究 
的 理由 指纹机 大家 都 用过 吧 这 不过 是 
冰山 之 一角 产品 检测 机器人 医学 成像 等等 都有 
计算机 视觉 的 身影 学习 计算机 视觉 OpenCV 是个 不错 
的 选择 下载 安装 到 指定 位置 后 会 发现 
有 3.5 G 之多 初步 看看 重复 太多 32位 64位 
各 有一套 而 vc10 vc11 vc12 再次 重复 只需 把 
要 用到 的 build x86 vc12 调试 版 提取 出来 
即可 我 是 编译 源代码 将 生成 的 bin * 
. dll lib * . lib 和 原来 OpenCV 安装 
目录 build include 提取 出来 放入 新建 文件夹 中 约 
60MB 平时 学习 使用 这个 即可 1 . 配置 系统 
环境变量 将 bin 加入 Path 变量 注销 一下 使其 有效 
2 . 启动 VS2013 新建 Win32 Console 空 项目 在 
项目 属性 VC + + 目录 包含 目录 添加 include 
库 目录 添加 lib 3 . 新建 头文件 x01CV . 
h 内容 如下 # pragma once # pragma comment lib 
opencv _ calib3d249d . lib # pragma comment lib opencv 
_ contrib249d . lib # pragma comment lib opencv _ 
core249d . lib # pragma comment lib opencv _ features2d249d 
. lib # pragma comment lib opencv _ flann249d . 
lib # pragma comment lib opencv _ gpu249d . lib 
# pragma comment lib opencv _ highgui249d . lib # 
pragma comment lib opencv _ imgproc249d . lib # pragma 
comment lib opencv _ legacy249d . lib # pragma comment 
lib opencv _ ml249d . lib # pragma comment lib 
opencv _ nonfree249d . lib # pragma comment lib opencv 
_ objdetect249d . lib # pragma comment lib opencv _ 
ocl249d . lib # pragma comment lib opencv _ photo249d 
. lib # pragma comment lib opencv _ stitching249d . 
lib # pragma comment lib opencv _ superres249d . lib 
# pragma comment lib opencv _ ts249d . lib # 
pragma comment lib opencv _ video249d . lib # pragma 
comment lib opencv _ videostab249d . lib # include opencv2 
/ core / core . hpp # include opencv2 / 
highgui / highgui . hpp # include opencv2 / imgproc 
/ imgproc . hpp # include opencv / cv . 
h x01CV . h4 . 新建 源文件 Main . cpp 
内容 如下 # include iostream # include x01CV . h 
using namespace cv using namespace std namespace { const string 
AppTitle = x01 Lab OpenCV Demo int g _ filterValue 
= 3 Mat g _ srcImage g _ destImage void 
OnBoxFilter int void * { boxFilter g _ srcImage g 
_ destImage 1 Size g _ filterValue + 1 g 
_ filterValue + 1 imshow AppTitle g _ destImage } 
void OnBlur int void * { blur g _ srcImage 
g _ destImage Size g _ filterValue + 1 g 
_ filterValue + 1 Point 1 1 imshow AppTitle g 
_ destImage } void OnGaussianBlur int void * { int 
v = g _ filterValue * 2 + 1 GaussianBlur 
g _ srcImage g _ destImage Size v v 0 
0 imshow AppTitle g _ destImage } void OnMediaBlur int 
void * { medianBlur g _ srcImage g _ destImage 
g _ filterValue * 2 + 1 imshow AppTitle g 
_ destImage } void O n B i l a 
t e r a l F i l t e 
r int void * { int v = g _ 
filterValue + 7 bilateralFilter g _ srcImage g _ destImage 
v v * 2 v / 2 imshow AppTitle g 
_ destImage } } int main { g _ srcImage 
= imread 1 . jpg / / For erode and 
dilate demo / * Mat kernel = g e t 
t r u c t u r i n g 
E l e m e n t MORPH _ RECT 
Size 15 15 Mat dest erode g _ srcImage dest 
kernel namedWindow AppTitle imshow AppTitle dest * / g _ 
destImage = g _ srcImage . clone while true { 
char c = char waitKey if c = = q 
break namedWindow AppTitle if c = = a | | 
c = = A createTrackbar Kernel Value AppTitle & g 
_ filterValue 40 OnBlur else if c = = b 
| | c = = B createTrackbar Kernel Value AppTitle 
& g _ filterValue 40 OnBoxFilter else if c = 
= c | | c = = C createTrackbar Kernel 
Value AppTitle & g _ filterValue 40 OnGaussianBlur else if 
c = = d | | c = = D 
createTrackbar Kernel Value AppTitle & g _ filterValue 40 OnMediaBlur 
else if c = = e | | c = 
= E createTrackbar Kernel Value AppTitle & g _ filterValue 
40 O n B i l a t e r 
a l F i l t e r imshow AppTitle 
g _ destImage } return 0 } Main . cpp5 
. F5 运行 无误 按 a 或 b c d 
e 等 可 进行 模糊 处理 效果图 如下 横看成 岭 侧 成峰/nr 计算 视觉 大不同 观看 的 角度 
不同 成像 自然 不同 这对 计算机 视觉 来说 是个 大麻烦 
但 计算机 视觉 应用 如此 广泛 却 又有 不得不 研究 
的 理由 指纹机 大家 都 用过 吧 这 不过 是 
冰山 之 一角 产品 检测 机器人 医学 成像 等等 都有 
计算机 视觉 的 身影 学习 计算机 视觉 OpenCV 是个 不错 
的 选择 下载 安装 到 指定 位置 后 会 发现 
有 3.5 G 之多 初步 看看 重复 太多 32位 64位 
各 有一套 而 vc10 vc11 vc12 再次 重复 只需 把 
要 用到 的 build x86 vc12 调试 版 提取 出来 
即可 我 是 编译 源代码 将 生成 的 bin * 
. dll lib * . lib 和 原来 OpenCV 安装 
目录 build include 提取 出来 放入 新建 文件夹 中 约 
60MB 平时 学习 使用 这个 即可 1 . 配置 系统 
环境变量 将 bin 加入 Path 变量 注销 一下 使其 有效 
2 . 启动 VS2013 新建 Win32 Console 空 项目 在 
项目 属性 VC + + 目录 包含 目录 添加 include 
库 目录 添加 lib 3 . 新建 头文件 x01CV . 
h 内容 如下 # pragma once # pragma comment lib 
opencv _ calib3d249d . lib # pragma comment lib opencv 
_ contrib249d . lib # pragma comment lib opencv _ 
core249d . lib # pragma comment lib opencv _ features2d249d 
. lib # pragma comment lib opencv _ flann249d . 
lib # pragma comment lib opencv _ gpu249d . lib 
# pragma comment lib opencv _ highgui249d . lib # 
pragma comment lib opencv _ imgproc249d . lib # pragma 
comment lib opencv _ legacy249d . lib # pragma comment 
lib opencv _ ml249d . lib # pragma comment lib 
opencv _ nonfree249d . lib # pragma comment lib opencv 
_ objdetect249d . lib # pragma comment lib opencv _ 
ocl249d . lib # pragma comment lib opencv _ photo249d 
. lib # pragma comment lib opencv _ stitching249d . 
lib # pragma comment lib opencv _ superres249d . lib 
# pragma comment lib opencv _ ts249d . lib # 
pragma comment lib opencv _ video249d . lib # pragma 
comment lib opencv _ videostab249d . lib # include opencv2 
/ core / core . hpp # include opencv2 / 
highgui / highgui . hpp # include opencv2 / imgproc 
/ imgproc . hpp # include opencv / cv . 
h x01CV . h4 . 新建 源文件 Main . cpp 
内容 如下 # include iostream # include x01CV . h 
using namespace cv using namespace std namespace { const string 
AppTitle = x01 Lab OpenCV Demo int g _ filterValue 
= 3 Mat g _ srcImage g _ destImage void 
OnBoxFilter int void * { boxFilter g _ srcImage g 
_ destImage 1 Size g _ filterValue + 1 g 
_ filterValue + 1 imshow AppTitle g _ destImage } 
void OnBlur int void * { blur g _ srcImage 
g _ destImage Size g _ filterValue + 1 g 
_ filterValue + 1 Point 1 1 imshow AppTitle g 
_ destImage } void OnGaussianBlur int void * { int 
v = g _ filterValue * 2 + 1 GaussianBlur 
g _ srcImage g _ destImage Size v v 0 
0 imshow AppTitle g _ destImage } void OnMediaBlur int 
void * { medianBlur g _ srcImage g _ destImage 
g _ filterValue * 2 + 1 imshow AppTitle g 
_ destImage } void O n B i l a 
t e r a l F i l t e 
r int void * { int v = g _ 
filterValue + 7 bilateralFilter g _ srcImage g _ destImage 
v v * 2 v / 2 imshow AppTitle g 
_ destImage } } int main { g _ srcImage 
= imread 1 . jpg / / For erode and 
dilate demo / * Mat kernel = g e t 
t r u c t u r i n g 
E l e m e n t MORPH _ RECT 
Size 15 15 Mat dest erode g _ srcImage dest 
kernel namedWindow AppTitle imshow AppTitle dest * / g _ 
destImage = g _ srcImage . clone while true { 
char c = char waitKey if c = = q 
break namedWindow AppTitle if c = = a | | 
c = = A createTrackbar Kernel Value AppTitle & g 
_ filterValue 40 OnBlur else if c = = b 
| | c = = B createTrackbar Kernel Value AppTitle 
& g _ filterValue 40 OnBoxFilter else if c = 
= c | | c = = C createTrackbar Kernel 
Value AppTitle & g _ filterValue 40 OnGaussianBlur else if 
c = = d | | c = = D 
createTrackbar Kernel Value AppTitle & g _ filterValue 40 OnMediaBlur 
else if c = = e | | c = 
= E createTrackbar Kernel Value AppTitle & g _ filterValue 
40 O n B i l a t e r 
a l F i l t e r imshow AppTitle 
g _ destImage } return 0 } Main . cpp5 
. F5 运行 无误 按 a 或 b c d 
e 等 可 进行 模糊 处理 效果图 如下 横看成 岭 侧 成峰/nr 计算 视觉 大不同 观看 的 角度 
不同 成像 自然 不同 这对 计算机 视觉 来说 是个 大麻烦 
但 计算机 视觉 应用 如此 广泛 却 又有 不得不 研究 
的 理由 指纹机 大家 都 用过 吧 这 不过 是 
冰山 之 一角 产品 检测 机器人 医学 成像 等等 都有 
计算机 视觉 的 身影 学习 计算机 视觉 OpenCV 是个 不错 
的 选择 下载 安装 到 指定 位置 后 会 发现 
有 3.5 G 之多 初步 看看 重复 太多 32位 64位 
各 有一套 而 vc10 vc11 vc12 再次 重复 只需 把 
要 用到 的 build x86 vc12 调试 版 提取 出来 
即可 我 是 编译 源代码 将 生成 的 bin * 
. dll lib * . lib 和 原来 OpenCV 安装 
目录 build include 提取 出来 放入 新建 文件夹 中 约 
60MB 平时 学习 使用 这个 即可 1 . 配置 系统 
环境变量 将 bin 加入 Path 变量 注销 一下 使其 有效 
2 . 启动 VS2013 新建 Win32 Console 空 项目 在 
项目 属性 VC + + 目录 包含 目录 添加 include 
库 目录 添加 lib 3 . 新建 头文件 x01CV . 
h 内容 如下 # pragma once # pragma comment lib 
opencv _ calib3d249d . lib # pragma comment lib opencv 
_ contrib249d . lib # pragma comment lib opencv _ 
core249d . lib # pragma comment lib opencv _ features2d249d 
. lib # pragma comment lib opencv _ flann249d . 
lib # pragma comment lib opencv _ gpu249d . lib 
# pragma comment lib opencv _ highgui249d . lib # 
pragma comment lib opencv _ imgproc249d . lib # pragma 
comment lib opencv _ legacy249d . lib # pragma comment 
lib opencv _ ml249d . lib # pragma comment lib 
opencv _ nonfree249d . lib # pragma comment lib opencv 
_ objdetect249d . lib # pragma comment lib opencv _ 
ocl249d . lib # pragma comment lib opencv _ photo249d 
. lib # pragma comment lib opencv _ stitching249d . 
lib # pragma comment lib opencv _ superres249d . lib 
# pragma comment lib opencv _ ts249d . lib # 
pragma comment lib opencv _ video249d . lib # pragma 
comment lib opencv _ videostab249d . lib # include opencv2 
/ core / core . hpp # include opencv2 / 
highgui / highgui . hpp # include opencv2 / imgproc 
/ imgproc . hpp # include opencv / cv . 
h x01CV . h4 . 新建 源文件 Main . cpp 
内容 如下 # include iostream # include x01CV . h 
using namespace cv using namespace std namespace { const string 
AppTitle = x01 Lab OpenCV Demo int g _ filterValue 
= 3 Mat g _ srcImage g _ destImage void 
OnBoxFilter int void * { boxFilter g _ srcImage g 
_ destImage 1 Size g _ filterValue + 1 g 
_ filterValue + 1 imshow AppTitle g _ destImage } 
void OnBlur int void * { blur g _ srcImage 
g _ destImage Size g _ filterValue + 1 g 
_ filterValue + 1 Point 1 1 imshow AppTitle g 
_ destImage } void OnGaussianBlur int void * { int 
v = g _ filterValue * 2 + 1 GaussianBlur 
g _ srcImage g _ destImage Size v v 0 
0 imshow AppTitle g _ destImage } void OnMediaBlur int 
void * { medianBlur g _ srcImage g _ destImage 
g _ filterValue * 2 + 1 imshow AppTitle g 
_ destImage } void O n B i l a 
t e r a l F i l t e 
r int void * { int v = g _ 
filterValue + 7 bilateralFilter g _ srcImage g _ destImage 
v v * 2 v / 2 imshow AppTitle g 
_ destImage } } int main { g _ srcImage 
= imread 1 . jpg / / For erode and 
dilate demo / * Mat kernel = g e t 
t r u c t u r i n g 
E l e m e n t MORPH _ RECT 
Size 15 15 Mat dest erode g _ srcImage dest 
kernel namedWindow AppTitle imshow AppTitle dest * / g _ 
destImage = g _ srcImage . clone while true { 
char c = char waitKey if c = = q 
break namedWindow AppTitle if c = = a | | 
c = = A createTrackbar Kernel Value AppTitle & g 
_ filterValue 40 OnBlur else if c = = b 
| | c = = B createTrackbar Kernel Value AppTitle 
& g _ filterValue 40 OnBoxFilter else if c = 
= c | | c = = C createTrackbar Kernel 
Value AppTitle & g _ filterValue 40 OnGaussianBlur else if 
c = = d | | c = = D 
createTrackbar Kernel Value AppTitle & g _ filterValue 40 OnMediaBlur 
else if c = = e | | c = 
= E createTrackbar Kernel Value AppTitle & g _ filterValue 
40 O n B i l a t e r 
a l F i l t e r imshow AppTitle 
g _ destImage } return 0 } Main . cpp5 
. F5 运行 无误 按 a 或 b c d 
e 等 可 进行 模糊 处理 效果图 如下 