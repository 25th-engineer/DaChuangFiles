本文 主要 内容 来源 于 书籍 python 计算机 视觉 编程 
我 是 一名 初学者 如果 你 发现 文中 有错误 请 
留言 告诉 我 谢谢 PIL 模块 PIL 模块 全程 为 
Python Imaging Library 是 python 中 一个 免费 的 图像 
处理 模块 打开 图像 PIL 模块 常 用到 它 的 
Image 类 打开 图像 首先要 导入 Image 类 from PIL 
import Image 然后 调用 Image 的 open 方法 例如 from 
PIL import Image image = Image . open smallpi . 
jpg # 返回 一个 Image 图像 对象 print image # 
结果 PIL . JpegImagePlugin . JpegImageFile image mode = RGB 
size = 800x450 at 0x4731348 图像 的 保存 及 格式 
转换 图像 保存 用 的 是 Image 对象 的 save 
方法 传入 的 参数 为 保存 图像文件 的 名字 当 
传入 不同 的 扩展名 时 它 会 根据 扩展名 自动 
转换 图像 的 格式 例如 from PIL import Image image 
= Image . open smallpi . jpg # 打开 jpg 
图像文件 image . save smallpi . png # 保存 图像 
并 转换成 png 格式 转化成 灰度 图像 获得 Image 对象 
后 调用 其 convert 方法 传入 参数 L 即 可以 
返回 该 图像 的 灰度 图像 对象 from PIL import 
Image image = Image . open smallpi . jpg image 
_ gray = image . convert L # 转化成 灰度 
图像 print image _ gray # 结果 PIL . Image 
. Image image mode = L size = 800x450 at 
0x46AD648 Image 对象 与 图像 矩阵 相互 转化 Image 对象 
转化成 图像 矩阵 Image 对象 转化成 图像 矩阵 只要 将 
Image 对象 作为 numpy . array 参数 即可 import numpy 
as np from PIL import Image image = Image . 
open smallpi . jpg image _ array = np . 
array image print image _ array # 结果 177 177 
177 177 177 177 176 176 176 . . . 
# 此处 省略 . . . 232 232 232 232 
232 232 232 232 232 图像 矩阵 转化成 Image 对象 
图像 矩阵 转化成 Image 对象 通过 Image 模块 的 fromarray 
方法 import numpy as np from PIL import Image image 
= Image . open smallpi . jpg image _ array 
= np . array image . convert L image _ 
array = 255 image _ array # 图像 矩阵 处理 
将 灰度 图像 反相 # 反相 指 的 是 黑 
变白 白 变黑 image2 = Image . fromarray image _ 
array print image2 # 结果 PIL . Image . Image 
image mode = RGB size = 800x450 at 0x4753748 图像 
的 显示 图像 的 显示 需要 用到 matplotlib 模块 首先 
需要 导入 matplotlib . pyplotimport matplotlib . pyplot as plt 
然后 调用 pyplot 的 imshow 方法 传入 Image 对象 即可 
from PIL import Image import matplotlib . pyplot as plt 
image = Image . open smallpi . jpg plt . 
imshow image # 绘制 图像 image plt . show # 
需要 调用 show 方法 不然 图像 只会在 内存 中 而不 
显示出来 图像 显示 结果 带 坐标轴 如果 想把 坐标轴 去掉 
只需要 调用 pyplot 的 axis 方法 传入 off 参数 from 
PIL import Image import matplotlib . pyplot as plt image 
= Image . open smallpi . jpg plt . imshow 
image # 绘制 图像 image plt . axis off # 
去掉 坐标轴 plt . show # 需要 调用 show 方法 
不然 图像 只会在 内存 中 而不 显示出来 图像 显示 结果 
不带 坐标轴 如果 要 显示 灰度 图像 需要 导入 matplotlib 
的 cm 模块 import matplotlib . cm as cm 然后 
在 调用 pyplot . show 时 传入 关键字 参数 cmap 
= cm . gray from PIL import Image import matplotlib 
. pyplot as plt import matplotlib . cm as cm 
image = Image . open smallpi . jpg # 打开 
图像 image _ gray = image . convert L # 
转化成 灰度 图像 plt . subplot 2 1 1 plt 
. imshow image _ gray # 没 传入 关键字 参数 
cmap = cm . gray plt . axis off # 
去掉 坐标轴 plt . subplot 2 1 2 plt . 
imshow image _ gray cmap = cm . gray # 
指明 cmap = cm . gray plt . axis off 
# 去掉 坐标轴 plt . show # 显示 图像 显示 
结果 上 没 指定 cmap 下 指定 cmap = cm 
. gray 创建 缩略图 创建 图像 缩略图 可以 通过 Image 
的 thumbnail 方法 参数 传入 一个 元组 指明 缩略图 的 
大小 如 thumbnail 128 128 例如 from PIL import Image 
image = Image . open smallpi . jpg image _ 
thumbnail = image . thumbnail 128 128 image . save 
thumbnail . jpg 结果 为 复制 和 粘贴 区域 复制 
区域 是 指 截取 图像 中 的 一部分 并将 这 
一 部分 作为 一个 新的 Image 对象 复制 区域 的 
方法 为 crop 参数 为 一个 含 4个 元素 的 
元组 用来 指定 截取 区域 的 左上角 点 和 右下角 
点 from PIL import Image image = Image . open 
smallpi . jpg # 打开 图像 box = 300 100 
500 300 # 截取 区域 image _ crop = image 
. crop box # 按 指定 截取 区域 对 图像 
进行 截取 复制 image _ crop . save image _ 
crop . jpg # 保存 保存 的 截取 区域 图像 
为 粘贴 区域 是 指在 指定 图像 中 放入 另一个 
图像 其 方法 为 paste 该 方法 有 两个 参数 
第一 个 参数 为 需要 粘贴 进去 的 图像 第二个 
参数 为 粘贴 区域 from PIL import Image image = 
Image . open smallpi . jpg box = 300 100 
500 300 # 先 截取 一部分 image _ crop = 
image . crop box # 为了 看到 粘贴 效果 现将 
截取 部分 转 180度 image _ crop = image _ 
crop . transpose Image . ROTATE _ 180 # 转 
180度 image . paste image _ crop box # 将 
转 180度 后的/nr 图像 粘 贴到 原 图像 image . 
save image _ paste . jpg 粘贴/n 后原/nr 图像/n 变成/v 
图像/n 的/uj 尺寸/n 调整/vn 和/c 旋转/v 尺寸/n 调整/vn 方法/n 为/p 
resize/w 参数 为 一 元组 指定 调整 后的/nr 大小 如 
resize 128 128 图像 旋转 的 方法 为 rotate 参数 
为 旋转 角度 数值 单位 为度 逆时针 方向 如 rotate 
45 ` from PIL import Image image = Image . 
open smallpi . jpg image _ resize = image . 
resize 200 200 # 尺寸 调整 image _ rotate = 
image . rotate 45 # 图像 旋转 # image . 
transpose 也 可以 旋转 图像 但 只能 旋转 90度 的 
整数 倍 # 参数 为 Image . ROTATE _ 90 
旋转 90度 # 180度 270度 可 类推 image _ resize 
. save image _ resize . jpg image _ rotate 
. save image _ rotate . jpg 尺寸 调整 为 
200 * 200 图像 逆时针 旋转 45度 图像 直方图 图像 
直方图 用来 统计 图像 中 像素 值 的 分布 情况 
即 统计 不同 像素 值 出现 的 次数 方法 为 
调用 matplotlib . pyplot 的 hist 方法 参数 传入 图像 
像素 序列 和 统计 区间 个数 from PIL import Image 
import matplotlib . pyplot as plt import matplotlib . cm 
as cm # 打开 图像 并 转化 成 灰度 图像 
image = Image . open smallpi . jpg . convert 
L image _ array = np . array image plt 
. subplot 2 1 1 plt . imshow image cmap 
= cm . gray plt . axis off plt . 
subplot 2 1 2 plt . hist image _ array 
. flatten 256 # flatten 可以 将 矩阵 转化成 一维 
序列 plt . show 结果 为 灰度变换 对于 一张 灰度 
图像 其 每个 像素点 都用 一个 0 255 之间 的 
值 表示 0 表示 黑色 越/d 接近/v 0/m 越黑/nr 255 
表示 白色 越/d 接近/v 255/m 越白/nr 灰度变换 就是 通过 一个 
特定 的 函数 使 灰度 值 从 一个 值 转换成 
另外 一个 值 这里 列出 3种 灰度变换 1 . 反相 
变换 后的/nr 灰度 值 =   255 − 原 灰度 
值 2 . 转换 到 100 200 变换 后的/nr 灰度 
值 = 原 灰度 值 / 255 * 100 + 
1003 . 像素 平方 变换 后的/nr 灰度 值 = 255 
* 原 灰度 值 / 255 22from PIL import Image 
import matplotlib . pyplot as plt import matplotlib . cm 
as cm image = Image . open smallpi . jpg 
. convert L image _ array = np . array 
image x = np . arange 255 # 反相 plt 
. subplot 3 2 1 plt . plot x 255 
x # 画出 变换 函数 图像 plt . subplot 3 
2 2 plt . imshow Image . fromarray 255 image 
_ array cmap = cm . gray plt . axis 
off # 转换 到 100 200 plt . subplot 3 
2 3 plt . plot x x / 255.0 * 
100 + 100 # 画出 变换 函数 图像 plt . 
subplot 3 2 4 plt . imshow Image . fromarray 
image _ array / 255.0 * 100 + 100 cmap 
= cm . gray plt . axis off # 像素 
平方 plt . subplot 3 2 5 plt . plot 
x 255 * x / 255.0 * * 2 # 
画出 变换 函数 图像 plt . subplot 3 2 6 
plt . imshow Image . fromarray 255 * image _ 
array / 255.0 * * 2 cmap = cm . 
gray plt . axis off plt . show ` 结果 
如下 左边 是 变换 函数 右边 是 图像 变换 结果 
直方图 均衡化 由上 面 图像 的 直方图 可以 看出 一般 
情况 下 图像 上 某些 灰度 值 较多 有些 灰度 
值 较少 直方图 均衡化 为的是 使 灰度 值 较为 均衡 
直方图 均衡化 是 利用 直方图 的 累积 函数 作为 灰度变换 
函数 对 图像 进行 转换 直方图 均衡化 可以 增强 图像 
的 对比度 累积 函数 和 概率论 中的 累积 分布 函数 
类似 例如 对于 还有 5 个数 的 序列 1 2 
3 4 5 其 累积 函数 含有 5 个数 第一 
个 数 是 1 第二个 是 1 + 2 = 
3 第五 个数 是 1 + 2 + 3 + 
4 + 5 = 15 所以 其 累积 函数 是 
1 3 6 10 15 我们 把 直方图 均衡化 的 
过程 封装 在 一个 函数 里面 函数 名字 叫做 histeq 
输 入原 图像 矩阵 和 直方图 分 块数 输出/v 均衡化/n 
后的/nr 图像/n 矩阵/n 和/c 累积/v 函数/n import numpy as np 
from PIL import Image import matplotlib . pyplot as plt 
import matplotlib . cm as cm def histeq image _ 
array image _ bins = 256 # 将 图像 矩阵 
转化成 直方图 数据 返回 元组 频数 直方图 区间 坐标 image 
_ array2 bins = np . histogram image _ array 
. flatten image _ bins # 计算 直方图 的 累积 
函数 cdf = image _ array2 . cumsum # 将 
累积 函数 转化 到 区间 0 255 cdf = 255.0 
/ cdf 1 * cdf # 原 图像 矩阵 利用 
累积 函数 进行 转化 插值 过程 image2 _ array = 
np . interp image _ array . flatten bins 1 
cdf # 返回/v 均衡化/n 后的/nr 图像/n 矩阵/n 和/c 累积/v 函数/n 
return image2 _ array . reshape image _ array . 
shape cdf image = Image . open pika . jpg 
. convert L image _ array = np . array 
image plt . subplot 2 2 1 plt . hist 
image _ array . flatten 256 plt . subplot 2 
2 2 plt . imshow image cmap = cm . 
gray plt . axis off a = histeq image _ 
array # 利用 刚 定义 的 直方图 均衡化 函数 对 
图像 进行 均衡 化 处理 plt . subplot 2 2 
3 plt . hist a 0 . flatten 256 plt 
. subplot 2 2 4 plt . imshow Image . 
fromarray a 0 cmap = cm . gray plt . 
axis off plt . show 结果 如下 图 所示 第一 
行为 原 图像 直方图 和原/nr 图像 第二行/m 为/p 均衡/a 化/n 
后的/nr 直方图/n 和/c 图像/n 可以 看出 均衡化 后 图像 对比度 
增强 了 原先 灰色 区域 的 细节 变得 清晰 本文 主要 内容 来源 于 书籍 python 计算机 视觉 编程 
我 是 一名 初学者 如果 你 发现 文中 有错误 请 
留言 告诉 我 谢谢 PIL 模块 PIL 模块 全程 为 
Python Imaging Library 是 python 中 一个 免费 的 图像 
处理 模块 打开 图像 PIL 模块 常 用到 它 的 
Image 类 打开 图像 首先要 导入 Image 类 from PIL 
import Image 然后 调用 Image 的 open 方法 例如 from 
PIL import Image image = Image . open smallpi . 
jpg # 返回 一个 Image 图像 对象 print image # 
结果 PIL . JpegImagePlugin . JpegImageFile image mode = RGB 
size = 800x450 at 0x4731348 图像 的 保存 及 格式 
转换 图像 保存 用 的 是 Image 对象 的 save 
方法 传入 的 参数 为 保存 图像文件 的 名字 当 
传入 不同 的 扩展名 时 它 会 根据 扩展名 自动 
转换 图像 的 格式 例如 from PIL import Image image 
= Image . open smallpi . jpg # 打开 jpg 
图像文件 image . save smallpi . png # 保存 图像 
并 转换成 png 格式 转化成 灰度 图像 获得 Image 对象 
后 调用 其 convert 方法 传入 参数 L 即 可以 
返回 该 图像 的 灰度 图像 对象 from PIL import 
Image image = Image . open smallpi . jpg image 
_ gray = image . convert L # 转化成 灰度 
图像 print image _ gray # 结果 PIL . Image 
. Image image mode = L size = 800x450 at 
0x46AD648 Image 对象 与 图像 矩阵 相互 转化 Image 对象 
转化成 图像 矩阵 Image 对象 转化成 图像 矩阵 只要 将 
Image 对象 作为 numpy . array 参数 即可 import numpy 
as np from PIL import Image image = Image . 
open smallpi . jpg image _ array = np . 
array image print image _ array # 结果 177 177 
177 177 177 177 176 176 176 . . . 
# 此处 省略 . . . 232 232 232 232 
232 232 232 232 232 图像 矩阵 转化成 Image 对象 
图像 矩阵 转化成 Image 对象 通过 Image 模块 的 fromarray 
方法 import numpy as np from PIL import Image image 
= Image . open smallpi . jpg image _ array 
= np . array image . convert L image _ 
array = 255 image _ array # 图像 矩阵 处理 
将 灰度 图像 反相 # 反相 指 的 是 黑 
变白 白 变黑 image2 = Image . fromarray image _ 
array print image2 # 结果 PIL . Image . Image 
image mode = RGB size = 800x450 at 0x4753748 图像 
的 显示 图像 的 显示 需要 用到 matplotlib 模块 首先 
需要 导入 matplotlib . pyplotimport matplotlib . pyplot as plt 
然后 调用 pyplot 的 imshow 方法 传入 Image 对象 即可 
from PIL import Image import matplotlib . pyplot as plt 
image = Image . open smallpi . jpg plt . 
imshow image # 绘制 图像 image plt . show # 
需要 调用 show 方法 不然 图像 只会在 内存 中 而不 
显示出来 图像 显示 结果 带 坐标轴 如果 想把 坐标轴 去掉 
只需要 调用 pyplot 的 axis 方法 传入 off 参数 from 
PIL import Image import matplotlib . pyplot as plt image 
= Image . open smallpi . jpg plt . imshow 
image # 绘制 图像 image plt . axis off # 
去掉 坐标轴 plt . show # 需要 调用 show 方法 
不然 图像 只会在 内存 中 而不 显示出来 图像 显示 结果 
不带 坐标轴 如果 要 显示 灰度 图像 需要 导入 matplotlib 
的 cm 模块 import matplotlib . cm as cm 然后 
在 调用 pyplot . show 时 传入 关键字 参数 cmap 
= cm . gray from PIL import Image import matplotlib 
. pyplot as plt import matplotlib . cm as cm 
image = Image . open smallpi . jpg # 打开 
图像 image _ gray = image . convert L # 
转化成 灰度 图像 plt . subplot 2 1 1 plt 
. imshow image _ gray # 没 传入 关键字 参数 
cmap = cm . gray plt . axis off # 
去掉 坐标轴 plt . subplot 2 1 2 plt . 
imshow image _ gray cmap = cm . gray # 
指明 cmap = cm . gray plt . axis off 
# 去掉 坐标轴 plt . show # 显示 图像 显示 
结果 上 没 指定 cmap 下 指定 cmap = cm 
. gray 创建 缩略图 创建 图像 缩略图 可以 通过 Image 
的 thumbnail 方法 参数 传入 一个 元组 指明 缩略图 的 
大小 如 thumbnail 128 128 例如 from PIL import Image 
image = Image . open smallpi . jpg image _ 
thumbnail = image . thumbnail 128 128 image . save 
thumbnail . jpg 结果 为 复制 和 粘贴 区域 复制 
区域 是 指 截取 图像 中 的 一部分 并将 这 
一 部分 作为 一个 新的 Image 对象 复制 区域 的 
方法 为 crop 参数 为 一个 含 4个 元素 的 
元组 用来 指定 截取 区域 的 左上角 点 和 右下角 
点 from PIL import Image image = Image . open 
smallpi . jpg # 打开 图像 box = 300 100 
500 300 # 截取 区域 image _ crop = image 
. crop box # 按 指定 截取 区域 对 图像 
进行 截取 复制 image _ crop . save image _ 
crop . jpg # 保存 保存 的 截取 区域 图像 
为 粘贴 区域 是 指在 指定 图像 中 放入 另一个 
图像 其 方法 为 paste 该 方法 有 两个 参数 
第一 个 参数 为 需要 粘贴 进去 的 图像 第二个 
参数 为 粘贴 区域 from PIL import Image image = 
Image . open smallpi . jpg box = 300 100 
500 300 # 先 截取 一部分 image _ crop = 
image . crop box # 为了 看到 粘贴 效果 现将 
截取 部分 转 180度 image _ crop = image _ 
crop . transpose Image . ROTATE _ 180 # 转 
180度 image . paste image _ crop box # 将 
转 180度 后的/nr 图像 粘 贴到 原 图像 image . 
save image _ paste . jpg 粘贴/n 后原/nr 图像/n 变成/v 
图像/n 的/uj 尺寸/n 调整/vn 和/c 旋转/v 尺寸/n 调整/vn 方法/n 为/p 
resize/w 参数 为 一 元组 指定 调整 后的/nr 大小 如 
resize 128 128 图像 旋转 的 方法 为 rotate 参数 
为 旋转 角度 数值 单位 为度 逆时针 方向 如 rotate 
45 ` from PIL import Image image = Image . 
open smallpi . jpg image _ resize = image . 
resize 200 200 # 尺寸 调整 image _ rotate = 
image . rotate 45 # 图像 旋转 # image . 
transpose 也 可以 旋转 图像 但 只能 旋转 90度 的 
整数 倍 # 参数 为 Image . ROTATE _ 90 
旋转 90度 # 180度 270度 可 类推 image _ resize 
. save image _ resize . jpg image _ rotate 
. save image _ rotate . jpg 尺寸 调整 为 
200 * 200 图像 逆时针 旋转 45度 图像 直方图 图像 
直方图 用来 统计 图像 中 像素 值 的 分布 情况 
即 统计 不同 像素 值 出现 的 次数 方法 为 
调用 matplotlib . pyplot 的 hist 方法 参数 传入 图像 
像素 序列 和 统计 区间 个数 from PIL import Image 
import matplotlib . pyplot as plt import matplotlib . cm 
as cm # 打开 图像 并 转化 成 灰度 图像 
image = Image . open smallpi . jpg . convert 
L image _ array = np . array image plt 
. subplot 2 1 1 plt . imshow image cmap 
= cm . gray plt . axis off plt . 
subplot 2 1 2 plt . hist image _ array 
. flatten 256 # flatten 可以 将 矩阵 转化成 一维 
序列 plt . show 结果 为 灰度变换 对于 一张 灰度 
图像 其 每个 像素点 都用 一个 0 255 之间 的 
值 表示 0 表示 黑色 越/d 接近/v 0/m 越黑/nr 255 
表示 白色 越/d 接近/v 255/m 越白/nr 灰度变换 就是 通过 一个 
特定 的 函数 使 灰度 值 从 一个 值 转换成 
另外 一个 值 这里 列出 3种 灰度变换 1 . 反相 
变换 后的/nr 灰度 值 =   255 − 原 灰度 
值 2 . 转换 到 100 200 变换 后的/nr 灰度 
值 = 原 灰度 值 / 255 * 100 + 
1003 . 像素 平方 变换 后的/nr 灰度 值 = 255 
* 原 灰度 值 / 255 22from PIL import Image 
import matplotlib . pyplot as plt import matplotlib . cm 
as cm image = Image . open smallpi . jpg 
. convert L image _ array = np . array 
image x = np . arange 255 # 反相 plt 
. subplot 3 2 1 plt . plot x 255 
x # 画出 变换 函数 图像 plt . subplot 3 
2 2 plt . imshow Image . fromarray 255 image 
_ array cmap = cm . gray plt . axis 
off # 转换 到 100 200 plt . subplot 3 
2 3 plt . plot x x / 255.0 * 
100 + 100 # 画出 变换 函数 图像 plt . 
subplot 3 2 4 plt . imshow Image . fromarray 
image _ array / 255.0 * 100 + 100 cmap 
= cm . gray plt . axis off # 像素 
平方 plt . subplot 3 2 5 plt . plot 
x 255 * x / 255.0 * * 2 # 
画出 变换 函数 图像 plt . subplot 3 2 6 
plt . imshow Image . fromarray 255 * image _ 
array / 255.0 * * 2 cmap = cm . 
gray plt . axis off plt . show ` 结果 
如下 左边 是 变换 函数 右边 是 图像 变换 结果 
直方图 均衡化 由上 面 图像 的 直方图 可以 看出 一般 
情况 下 图像 上 某些 灰度 值 较多 有些 灰度 
值 较少 直方图 均衡化 为的是 使 灰度 值 较为 均衡 
直方图 均衡化 是 利用 直方图 的 累积 函数 作为 灰度变换 
函数 对 图像 进行 转换 直方图 均衡化 可以 增强 图像 
的 对比度 累积 函数 和 概率论 中的 累积 分布 函数 
类似 例如 对于 还有 5 个数 的 序列 1 2 
3 4 5 其 累积 函数 含有 5 个数 第一 
个 数 是 1 第二个 是 1 + 2 = 
3 第五 个数 是 1 + 2 + 3 + 
4 + 5 = 15 所以 其 累积 函数 是 
1 3 6 10 15 我们 把 直方图 均衡化 的 
过程 封装 在 一个 函数 里面 函数 名字 叫做 histeq 
输 入原 图像 矩阵 和 直方图 分 块数 输出/v 均衡化/n 
后的/nr 图像/n 矩阵/n 和/c 累积/v 函数/n import numpy as np 
from PIL import Image import matplotlib . pyplot as plt 
import matplotlib . cm as cm def histeq image _ 
array image _ bins = 256 # 将 图像 矩阵 
转化成 直方图 数据 返回 元组 频数 直方图 区间 坐标 image 
_ array2 bins = np . histogram image _ array 
. flatten image _ bins # 计算 直方图 的 累积 
函数 cdf = image _ array2 . cumsum # 将 
累积 函数 转化 到 区间 0 255 cdf = 255.0 
/ cdf 1 * cdf # 原 图像 矩阵 利用 
累积 函数 进行 转化 插值 过程 image2 _ array = 
np . interp image _ array . flatten bins 1 
cdf # 返回/v 均衡化/n 后的/nr 图像/n 矩阵/n 和/c 累积/v 函数/n 
return image2 _ array . reshape image _ array . 
shape cdf image = Image . open pika . jpg 
. convert L image _ array = np . array 
image plt . subplot 2 2 1 plt . hist 
image _ array . flatten 256 plt . subplot 2 
2 2 plt . imshow image cmap = cm . 
gray plt . axis off a = histeq image _ 
array # 利用 刚 定义 的 直方图 均衡化 函数 对 
图像 进行 均衡 化 处理 plt . subplot 2 2 
3 plt . hist a 0 . flatten 256 plt 
. subplot 2 2 4 plt . imshow Image . 
fromarray a 0 cmap = cm . gray plt . 
axis off plt . show 结果 如下 图 所示 第一 
行为 原 图像 直方图 和原/nr 图像 第二行/m 为/p 均衡/a 化/n 
后的/nr 直方图/n 和/c 图像/n 可以 看出 均衡化 后 图像 对比度 
增强 了 原先 灰色 区域 的 细节 变得 清晰 本文 主要 内容 来源 于 书籍 python 计算机 视觉 编程 
我 是 一名 初学者 如果 你 发现 文中 有错误 请 
留言 告诉 我 谢谢 PIL 模块 PIL 模块 全程 为 
Python Imaging Library 是 python 中 一个 免费 的 图像 
处理 模块 打开 图像 PIL 模块 常 用到 它 的 
Image 类 打开 图像 首先要 导入 Image 类 from PIL 
import Image 然后 调用 Image 的 open 方法 例如 from 
PIL import Image image = Image . open smallpi . 
jpg # 返回 一个 Image 图像 对象 print image # 
结果 PIL . JpegImagePlugin . JpegImageFile image mode = RGB 
size = 800x450 at 0x4731348 图像 的 保存 及 格式 
转换 图像 保存 用 的 是 Image 对象 的 save 
方法 传入 的 参数 为 保存 图像文件 的 名字 当 
传入 不同 的 扩展名 时 它 会 根据 扩展名 自动 
转换 图像 的 格式 例如 from PIL import Image image 
= Image . open smallpi . jpg # 打开 jpg 
图像文件 image . save smallpi . png # 保存 图像 
并 转换成 png 格式 转化成 灰度 图像 获得 Image 对象 
后 调用 其 convert 方法 传入 参数 L 即 可以 
返回 该 图像 的 灰度 图像 对象 from PIL import 
Image image = Image . open smallpi . jpg image 
_ gray = image . convert L # 转化成 灰度 
图像 print image _ gray # 结果 PIL . Image 
. Image image mode = L size = 800x450 at 
0x46AD648 Image 对象 与 图像 矩阵 相互 转化 Image 对象 
转化成 图像 矩阵 Image 对象 转化成 图像 矩阵 只要 将 
Image 对象 作为 numpy . array 参数 即可 import numpy 
as np from PIL import Image image = Image . 
open smallpi . jpg image _ array = np . 
array image print image _ array # 结果 177 177 
177 177 177 177 176 176 176 . . . 
# 此处 省略 . . . 232 232 232 232 
232 232 232 232 232 图像 矩阵 转化成 Image 对象 
图像 矩阵 转化成 Image 对象 通过 Image 模块 的 fromarray 
方法 import numpy as np from PIL import Image image 
= Image . open smallpi . jpg image _ array 
= np . array image . convert L image _ 
array = 255 image _ array # 图像 矩阵 处理 
将 灰度 图像 反相 # 反相 指 的 是 黑 
变白 白 变黑 image2 = Image . fromarray image _ 
array print image2 # 结果 PIL . Image . Image 
image mode = RGB size = 800x450 at 0x4753748 图像 
的 显示 图像 的 显示 需要 用到 matplotlib 模块 首先 
需要 导入 matplotlib . pyplotimport matplotlib . pyplot as plt 
然后 调用 pyplot 的 imshow 方法 传入 Image 对象 即可 
from PIL import Image import matplotlib . pyplot as plt 
image = Image . open smallpi . jpg plt . 
imshow image # 绘制 图像 image plt . show # 
需要 调用 show 方法 不然 图像 只会在 内存 中 而不 
显示出来 图像 显示 结果 带 坐标轴 如果 想把 坐标轴 去掉 
只需要 调用 pyplot 的 axis 方法 传入 off 参数 from 
PIL import Image import matplotlib . pyplot as plt image 
= Image . open smallpi . jpg plt . imshow 
image # 绘制 图像 image plt . axis off # 
去掉 坐标轴 plt . show # 需要 调用 show 方法 
不然 图像 只会在 内存 中 而不 显示出来 图像 显示 结果 
不带 坐标轴 如果 要 显示 灰度 图像 需要 导入 matplotlib 
的 cm 模块 import matplotlib . cm as cm 然后 
在 调用 pyplot . show 时 传入 关键字 参数 cmap 
= cm . gray from PIL import Image import matplotlib 
. pyplot as plt import matplotlib . cm as cm 
image = Image . open smallpi . jpg # 打开 
图像 image _ gray = image . convert L # 
转化成 灰度 图像 plt . subplot 2 1 1 plt 
. imshow image _ gray # 没 传入 关键字 参数 
cmap = cm . gray plt . axis off # 
去掉 坐标轴 plt . subplot 2 1 2 plt . 
imshow image _ gray cmap = cm . gray # 
指明 cmap = cm . gray plt . axis off 
# 去掉 坐标轴 plt . show # 显示 图像 显示 
结果 上 没 指定 cmap 下 指定 cmap = cm 
. gray 创建 缩略图 创建 图像 缩略图 可以 通过 Image 
的 thumbnail 方法 参数 传入 一个 元组 指明 缩略图 的 
大小 如 thumbnail 128 128 例如 from PIL import Image 
image = Image . open smallpi . jpg image _ 
thumbnail = image . thumbnail 128 128 image . save 
thumbnail . jpg 结果 为 复制 和 粘贴 区域 复制 
区域 是 指 截取 图像 中 的 一部分 并将 这 
一 部分 作为 一个 新的 Image 对象 复制 区域 的 
方法 为 crop 参数 为 一个 含 4个 元素 的 
元组 用来 指定 截取 区域 的 左上角 点 和 右下角 
点 from PIL import Image image = Image . open 
smallpi . jpg # 打开 图像 box = 300 100 
500 300 # 截取 区域 image _ crop = image 
. crop box # 按 指定 截取 区域 对 图像 
进行 截取 复制 image _ crop . save image _ 
crop . jpg # 保存 保存 的 截取 区域 图像 
为 粘贴 区域 是 指在 指定 图像 中 放入 另一个 
图像 其 方法 为 paste 该 方法 有 两个 参数 
第一 个 参数 为 需要 粘贴 进去 的 图像 第二个 
参数 为 粘贴 区域 from PIL import Image image = 
Image . open smallpi . jpg box = 300 100 
500 300 # 先 截取 一部分 image _ crop = 
image . crop box # 为了 看到 粘贴 效果 现将 
截取 部分 转 180度 image _ crop = image _ 
crop . transpose Image . ROTATE _ 180 # 转 
180度 image . paste image _ crop box # 将 
转 180度 后的/nr 图像 粘 贴到 原 图像 image . 
save image _ paste . jpg 粘贴/n 后原/nr 图像/n 变成/v 
图像/n 的/uj 尺寸/n 调整/vn 和/c 旋转/v 尺寸/n 调整/vn 方法/n 为/p 
resize/w 参数 为 一 元组 指定 调整 后的/nr 大小 如 
resize 128 128 图像 旋转 的 方法 为 rotate 参数 
为 旋转 角度 数值 单位 为度 逆时针 方向 如 rotate 
45 ` from PIL import Image image = Image . 
open smallpi . jpg image _ resize = image . 
resize 200 200 # 尺寸 调整 image _ rotate = 
image . rotate 45 # 图像 旋转 # image . 
transpose 也 可以 旋转 图像 但 只能 旋转 90度 的 
整数 倍 # 参数 为 Image . ROTATE _ 90 
旋转 90度 # 180度 270度 可 类推 image _ resize 
. save image _ resize . jpg image _ rotate 
. save image _ rotate . jpg 尺寸 调整 为 
200 * 200 图像 逆时针 旋转 45度 图像 直方图 图像 
直方图 用来 统计 图像 中 像素 值 的 分布 情况 
即 统计 不同 像素 值 出现 的 次数 方法 为 
调用 matplotlib . pyplot 的 hist 方法 参数 传入 图像 
像素 序列 和 统计 区间 个数 from PIL import Image 
import matplotlib . pyplot as plt import matplotlib . cm 
as cm # 打开 图像 并 转化 成 灰度 图像 
image = Image . open smallpi . jpg . convert 
L image _ array = np . array image plt 
. subplot 2 1 1 plt . imshow image cmap 
= cm . gray plt . axis off plt . 
subplot 2 1 2 plt . hist image _ array 
. flatten 256 # flatten 可以 将 矩阵 转化成 一维 
序列 plt . show 结果 为 灰度变换 对于 一张 灰度 
图像 其 每个 像素点 都用 一个 0 255 之间 的 
值 表示 0 表示 黑色 越/d 接近/v 0/m 越黑/nr 255 
表示 白色 越/d 接近/v 255/m 越白/nr 灰度变换 就是 通过 一个 
特定 的 函数 使 灰度 值 从 一个 值 转换成 
另外 一个 值 这里 列出 3种 灰度变换 1 . 反相 
变换 后的/nr 灰度 值 =   255 − 原 灰度 
值 2 . 转换 到 100 200 变换 后的/nr 灰度 
值 = 原 灰度 值 / 255 * 100 + 
1003 . 像素 平方 变换 后的/nr 灰度 值 = 255 
* 原 灰度 值 / 255 22from PIL import Image 
import matplotlib . pyplot as plt import matplotlib . cm 
as cm image = Image . open smallpi . jpg 
. convert L image _ array = np . array 
image x = np . arange 255 # 反相 plt 
. subplot 3 2 1 plt . plot x 255 
x # 画出 变换 函数 图像 plt . subplot 3 
2 2 plt . imshow Image . fromarray 255 image 
_ array cmap = cm . gray plt . axis 
off # 转换 到 100 200 plt . subplot 3 
2 3 plt . plot x x / 255.0 * 
100 + 100 # 画出 变换 函数 图像 plt . 
subplot 3 2 4 plt . imshow Image . fromarray 
image _ array / 255.0 * 100 + 100 cmap 
= cm . gray plt . axis off # 像素 
平方 plt . subplot 3 2 5 plt . plot 
x 255 * x / 255.0 * * 2 # 
画出 变换 函数 图像 plt . subplot 3 2 6 
plt . imshow Image . fromarray 255 * image _ 
array / 255.0 * * 2 cmap = cm . 
gray plt . axis off plt . show ` 结果 
如下 左边 是 变换 函数 右边 是 图像 变换 结果 
直方图 均衡化 由上 面 图像 的 直方图 可以 看出 一般 
情况 下 图像 上 某些 灰度 值 较多 有些 灰度 
值 较少 直方图 均衡化 为的是 使 灰度 值 较为 均衡 
直方图 均衡化 是 利用 直方图 的 累积 函数 作为 灰度变换 
函数 对 图像 进行 转换 直方图 均衡化 可以 增强 图像 
的 对比度 累积 函数 和 概率论 中的 累积 分布 函数 
类似 例如 对于 还有 5 个数 的 序列 1 2 
3 4 5 其 累积 函数 含有 5 个数 第一 
个 数 是 1 第二个 是 1 + 2 = 
3 第五 个数 是 1 + 2 + 3 + 
4 + 5 = 15 所以 其 累积 函数 是 
1 3 6 10 15 我们 把 直方图 均衡化 的 
过程 封装 在 一个 函数 里面 函数 名字 叫做 histeq 
输 入原 图像 矩阵 和 直方图 分 块数 输出/v 均衡化/n 
后的/nr 图像/n 矩阵/n 和/c 累积/v 函数/n import numpy as np 
from PIL import Image import matplotlib . pyplot as plt 
import matplotlib . cm as cm def histeq image _ 
array image _ bins = 256 # 将 图像 矩阵 
转化成 直方图 数据 返回 元组 频数 直方图 区间 坐标 image 
_ array2 bins = np . histogram image _ array 
. flatten image _ bins # 计算 直方图 的 累积 
函数 cdf = image _ array2 . cumsum # 将 
累积 函数 转化 到 区间 0 255 cdf = 255.0 
/ cdf 1 * cdf # 原 图像 矩阵 利用 
累积 函数 进行 转化 插值 过程 image2 _ array = 
np . interp image _ array . flatten bins 1 
cdf # 返回/v 均衡化/n 后的/nr 图像/n 矩阵/n 和/c 累积/v 函数/n 
return image2 _ array . reshape image _ array . 
shape cdf image = Image . open pika . jpg 
. convert L image _ array = np . array 
image plt . subplot 2 2 1 plt . hist 
image _ array . flatten 256 plt . subplot 2 
2 2 plt . imshow image cmap = cm . 
gray plt . axis off a = histeq image _ 
array # 利用 刚 定义 的 直方图 均衡化 函数 对 
图像 进行 均衡 化 处理 plt . subplot 2 2 
3 plt . hist a 0 . flatten 256 plt 
. subplot 2 2 4 plt . imshow Image . 
fromarray a 0 cmap = cm . gray plt . 
axis off plt . show 结果 如下 图 所示 第一 
行为 原 图像 直方图 和原/nr 图像 第二行/m 为/p 均衡/a 化/n 
后的/nr 直方图/n 和/c 图像/n 可以 看出 均衡化 后 图像 对比度 
增强 了 原先 灰色 区域 的 细节 变得 清晰 