更多 精彩 内容 请 关注 微信 公众 号 听 潮 
庭 计算机 视觉 的 深度 学习 实战 四 图像 特征提取 
综述 颜色 特征 量化 颜色 直方图 聚 类 颜色 直方图 
几何 特征 Edge Corner Blob 基于 关键点 的 特征描述 子 
SIFT SURF ORB 其他 特征提取 LBP Gabor 代码 实践 一 
颜色 特征 1 量化 颜色 直方图 适用 颜色 空间 RGB 
HSV 等 颜色 空间 操作 颜色 空间 量化 单元 bin 
由 单元 中心 代表 统计 落在 量化 单元 上 的 
像素 数量 最 常用 的 方法 是 将 颜色 空间 
的 各个 分量 维度 均匀 地 进行 划分 HSV 空间 
优势 计算 高效 劣势 量化 问题 稀疏 2 聚 类 
颜色 直方图 适用 颜色 空间 Lab 等 颜色 空间 操作 
使用 聚 类 算法 对 所有 像素点 颜色 空间 进行 
聚 类 单元 bin 由 聚 类 中心 代表 聚 
类 算 法则 考虑到 图像 颜色 特征 在 整个 空间 
的 分布 情况 避免 出现 大量 的 bin 中的 像素 
数量 非常 稀疏 的 情况 lab 空间 是 用 数字化 
的 方法 来 描述 人 的 视觉 感应 Lab 颜色 
空间 中 L 分量 用于 表示 像素 的 亮度 取值 
范围 是 1 100 表示 从纯黑/nr 到 纯白 a 表示 
从 品红色 到 深绿色 的 范围 取值 范围 是 127 
128 b 表示 从 黄色 到 蓝色 的 范围 取值 
范围 是 127 128 . 3 设想 两幅 图像 的 
颜色 直方图 几乎 相同 只是 互相 错开 了 一个 bin 
这时 如果 采用 L1 距离 或者 欧拉 距离 计算 两者 
的 相似 度 会 得到 很小 的 相似 度 值 
为了 克服 这个 缺陷 需要 考虑到 相似 但不 相同 的 
颜色 之间 的 相似 度 一种 方法 是 采用 二次 
式 距离 另一种 方法 是 对 颜色 直方图 事先 进行 
平滑 过滤 即 每个 bin 中的 像素 对于 相邻 的 
几个 bin 也 有贡献 二 几何 特征 1 边缘 Edge 
像素 明显 变化 的 区域 具有 丰富 的 语义 信息 
用于 物体 识别 几何 视 角变换 边缘 定义 像素 值 
函数 快速 变化 的 区域 一 阶 导数 的 极值 
区域 边缘 提取 先 高斯 高斯 平滑 去 噪 再用 
一 阶 导数 获取 极值 导数 对 噪声 敏感 高斯滤波 
yijiedao 标准差 尺度 梯度 幅 值 / 强度 梯度 增加 
最快 方向 边缘 提取 尺度 问题 不同 标准差 的 滤波 
x 方向 能 捕捉 到 不同 尺度 的 边缘 三 
基于 特征点 的 特征描述 子 从 不同 的 距离 不同 
的 方向 角度 不同 的 光照 条件 下 观察 一个 
物体 时 物体 的 大小 形状 敏感 都会 有所 不同 
但 我们 依然 可以 判断 它 是 同一 物体 理想 
的 特征 描述 子 应该 具备 这些 性质 即 在 
大小 方向 明暗 不同 的 图像 中 同一 特征点 应 
具有 足够 相似 的 描述 子 称之为 描述 子 的 
可 复现 性 1 几何 特征 特征点 / 关键 点 
不同 视角 图片 之间 的 映射 稳定 局部 特征点 可重复性 
显著性 抗 图片 变换 外貌 变换 亮度 光照 几何变换 平移 
选择 尺度 兴趣 点 / 关键点 Interest point / Key 
point 图片 配 准 / 拼接 运动 跟踪 物体 识别 
机器人 导航 3D 重建 2 几何 特征 Harris 角 点 
Harris 角 点 Corner 一种 显著 点在 任何 方向 上 
移动 小 观察窗 导致 大 的 像素 变动 数学模型 偏移 
u v 后窗 内 图像 变化 取 E u v 
大 的 patch 其中 w x y 相当于 权重 判断 
Harris 角 点 图像 中 直线 一个 特征值 大 另一个 
特征值 小 图像 中 平面 两个 特征值 都小/nr 且 近似 
相等 图像 中 角 点 两个 特征值 都大/nr 且 近似 
相等 3 FAST 角 点 检测 FAST 角 点 检测 
是 一种 快速 角 点 特征 检测 算法 FAST 角 
点 定义 为 若 某 像素点 与其 周围 领域内 足够 
多 的 像素点 处于 不同 的 区域 则 该 像素点 
可能 为 角 点 也 就是 某些 属性 与众不同 FAST 
特征点 检测 是 对 兴趣 点 所在 圆周 上 的 
16个 像素点 进行 判断 若 判 断后 的 当前 中心 
像素点 为 暗 或 亮 将 决定 其 是否 为 
角 点 确定 一个 阈值 t 观察 某 像素点 为 
中心 的 一个 半径 等于 3 像素 的 离散化 的 
圆 这个 圆 的 边界 上有 16个 像素 如果 在 
这个 大小 为 16个 像素 的 圆 上有 N 12 
个 连续 的 像素点 他们 的 像素 值 要么 都比 
I _ p + tIp + t 大 要么 都比 
I _ p tIp − t 小 则 p 他 
就是 一个 角 点 4 几何 特征 斑点 拉普拉斯 梯度 
一 阶 导 极值 点 → 二阶 导数 零点 梯度 
/ 边缘 可以 通过 寻找 二阶 导数 接近 零 但对 
噪声 很 敏感 首先 对 图像 进行 高斯 卷积 滤波 
进行 降噪 出路 再 采用 Laplace 算子 进行 边缘 检测 
高斯 拉普拉斯 滤波 / Laplacian of Ganssian LoG 当 sigma 
较 小时 将 识别 出 更为 细节 的 边缘 斑点 
Blob LoG 图 找 极值 点 → 斑点 局部 特征 
SIFT 尺度 不变 特征 变换 Scale invariant feature transform 基于 
尺度空间 不变 的 特征 SIFT 特征 计算 步骤 在 DoG 
尺度空间 中 获取 极值 点 即 关键点 LoG 尺度空间 和 
DoG 差分 高斯 尺度空间 对 关键 点 处理 位置 插值 
获得 精确 的 关键 点 去除 边缘 点 关键点 的 
方向 估计 关键点 描述 子 的 生成 区域 坐标 旋转 
计算 采样 区域 的 直方图 特点 具有 良好 的 不变性 
旋转 尺度 缩放 平移 亮度 变化 对 视角 变化 仿射变换/v 
和/c 噪声/n 也/d 有/v 一定/d 程度/n 的/uj 稳定性/n 独特/a 性好/i 
信息量 丰富 适用于 在 海量 特征 数据库 中 进行 快速 
准确 的 匹配 多 量性 即使 少数 物体 也 可以 
产生 大量 的 SIFT 特征 计算 快 经 优化 的 
SIFT 匹配 算法 甚至 可以 达到 实时性 可扩展性 可以 很 
方便 的 与 其他 形式 的 特征向量 进行 联合 尺度空间 
使用 不同 σ 的 LoG 对 图片 进行 滤波 使用 
LoG 则 后续 计算 量大 故 使用 DoG 来 代替 
LoG 用 差分 代替 微分 高斯 金字塔 就是 在 传统 
金字塔 的 基础 上 对 每 一层 用 不同 的 
参数 σ 做 高斯 模糊 是的 每 一层 金字塔 有 
多张 高斯 模糊 图像 这样 一组 图像 是 一个 octave 
SIFT 计算 高斯 差分 DoG 空间 SIFt DoG 空间 极值 
点 就是 关键点 圆/n 半径/n →/i 特征点/i 尺度/n 圆心/n →/i 
特征点/i 坐标/v 通/v 过拟合/i 三维/m 二次函数/i 来/v 精确/a 确定/v 关键点/n 
的/uj 位置/v 和/c 尺度/n 离散/v 空间/n 的/uj 极值/n 点/m 并/c 
不是/c 真正/d 的/uj 极值/n 点/m 上图 显示 了 二维 函数 
离散 空间 得到 的 极值 点 与 连续 空间 极值 
点 的 差别 利用 已知 的 离散 空间 点 插值 
得到 的 连续 空间 极值 点 的 方法 叫做 子 
像素 插值 同时/c 去除/v 低/a 对比度/l 的/uj 关键/n 点/m 和不/nr 
稳定/a 的/uj 边缘/n 相/v 应点/i 因为 DoG 算子 会 产生 
较强 的 边缘 响应 以 增强 匹配 稳定性 提 高抗 
噪声 能力 DoG 算子 会 产生 较强 的 边缘 响应 
需要 剔除 不 稳定 的 边缘 相 应点 获取 特征点 
处 的 Hessian 矩阵 主 曲率 通过 一个 2 × 
2 的 Hessian 矩阵 H 求出 SIFT 特征点 方向 估计 
在 尺度 上 计算 梯度 直方图 8 方向 以 特征点 
为中心 以 3 × 1.5 σ 为 半径 活 取 
最高值 方向 为 关键 点主 方向 为了 匹配 的 稳定性 
将 超过 最高 值 80% 的 方向 称 为辅 方向 
为了 保证 特征 矢量 具有 旋转 不变性 需要 以 特征点 
为中心 将 特征点 附 近邻 域内 的 图像 旋转 一个 
方向 角 θ 即将 原 图像 x 轴 转到 与 
主 方向 相同 的 方向 SIFT 计算/v 特征点/i 描述/v 子/ng 
在/p 旋转/v 后的/nr 坐标/v 上/f 采样/v 16/m ×/i 16/m 的/uj 
像素/n 窗/s 在/p 旋转/v 后的/nr 坐标/v 上/f 采样/v 16/m ×/i 
16/m 的/uj 像素/n 床/n 4/m ×/i 4/m 网格/n 8/m 方向/n 
直方图/n 总共/b 128/m 维/v SIFT/w 的/uj 缺点/n 是/v 计算 太 
复杂 如果 不 借助 硬件加速 或 专门 的 图像 处理器 
很难 实现 改进 方式 Haar like 特征 Haar like 特征 
分为 边缘 检测 线性 特征 中心 特征 和 对角线 特征 
这些/r 特征/n 组合成/l 特征/n 模板/n 特征/n 模板/n 有/v 白色/n 和/c 
黑色/n 两种/m 矩形/n 并 定义 该 模板 的 特征值 为 
白色 矩形 像素 和 减去 黑色 矩形 像素 和 Haar 
特征值 反映 了 图像 的 灰度 变化 情况 Haar like 
特征 的 快速 计算 积分 图 同一 个 像素 如果 
被 包含 在 不同 的 Haar like 的 特征 模板 
中 会被 重复 计算 多次 积分 图 是 根据 四个 
角 点 就能 计算 区域内 的 像素 之和 的 方法 
5 局部 特征 SURFSURF Speed Up Robust Features 算子 是 
Herbert Bay 等 人在 2006年 提出 的 它 是 对 
SIFT 的 改进 可将 速度 提高 三倍 SURF 只 要是 
把 SIFT 中的 某些 运算 做了 简化 SURF 把 SIFT 
中的 高斯 二阶 微分 的 模板 进行 了 简化 使得 
卷积 平滑 操作 仅 需要 转换成 加减 运算 在 方向 
确定 阶段 在 圆形 区域 计算 x y 方向 的 
haar 小波 响应 找到 模 最大 的 扇形 方向 为了 
找出 图像 中的 特征点 需要 对 原图 进行 变换 变换 
图 就是 原图 每个 像素 的 Hessian 矩阵 行列式 的 
近似值 构成 的 求 Hessian 时要先/nr 高斯 平滑 然后 求 
二阶 导数 这 对于 离散 的 像素 点 而言 是 
用 模板 卷积 形成 的 这两种 操 作合 在 一起 
用 一个 Haar 模板 代替 就 可以 了 小 造型 
为了 保证 旋转 不变性 在 SURF 中 统计 特征点 领域内 
的 Haar 小波 特征 即 以 特征点 为中心 计算 半径 
为 6s s 为特征 点 所在 的 尺度 值 的 
邻 域内 统计 60度 扇形 内 所有 点在 x 水平 
和y/nr 垂直 方向 的 Haar 小波 响应 总和 然后 60度 
扇形 以 一定 间隔 进行 旋转 最后 将 最大值 那个 
扇形 的 方向 作为 该 特征点 的 主 方向 在 
特征点 周围 取 一个 正 方形 框 框 的 边 
长为 20s 是 所 检测 到 该 特征点 所在 的 
尺度 该 框 的 方向 就是 检测 出来 的 主 
方向 最终 SURF 的 特征点 特征向量 的 维度 为 64 
维 然后 把 该 框 分为 16 个子 区域 每 
个子 区域 统计 25个 像素 的 水平 方向 和 垂直 
方向 的 Haar 小波 特征 这里/r 的/uj 水平/n 和/c 垂直/v 
方向/n 都是/nr 相对/d 主/b 方向/n 而言/c 的/uj 近似 SIFT 算法 
实现 快速 版 先 确定 后 选点 再找 最大值 Haar 
模板 加速 三倍 亮度 效果 下 效果 好 模糊 方面 
优于 SIFT 尺度 不 变上 不及 SIFT 旋转 不 变上 
差 很多 6 ORB 特征描述 SIFT 和 SURF 计算 复杂 
难以 用于 实时性 特征 检测 更何况 SIFT 与 SURF 以前 
还 是 收费 的 ORB 特征 基于 FAST 角 点 
的 特征点 检测 与 BRIEF 特征描述 技术 ORB 的 基本 
思路 它 是 对 FAST 角 点 与 BRIEF 特征描述 
子 的 一种 结合 与 改进 FAST 角 点 检测 
的 缺点 是 缺乏 尺度 不变性 可以 通告 构建 高斯 
金字塔 然后 在 每 一层 金字塔 图像 上 检测 角 
点 来 实现 尺度 不变性 BRIEF 的 缺点 是 缺乏 
旋转 不变性 需要 给 BRIEF 加上 旋转 不变性 7 BRIEFBRIEF 
需要 先 平滑 图片 然后 在 特征点 周围 选择 一个 
Patch 在 这个 Patch 内 通过 一种 选定 的 方法 
来 挑选 Nd 个 点 对 比较 点 对 中 
两点 像素 的 大小 进行 如下 赋值 所有 Nd 个 
点 对 都 进行 比较 之间 我们 就 生成 了 
一个 Nd 长 的 二进制 串 点 对 的 生成 
方式 共有 五种 1 X Y 都 服从 在 s 
/ 2 s / 2 范围内 的 均匀分布 且 相互 
独立 2 X Y 都 服从 均值 为 0 方差 
为 ² / 25d 的 高斯分布 且 相互 独立 即 
X 和Y/nr 都已 原点 为中心 进行 同 方差 的 高斯分布 
点 对 的 位置 一旦 随机 选定 就 不能 再 
更改 ORB 对 BRIEF 的 改进 ORB 在 计算 BRIEF 
描述 子时 建立 的 坐标系 是以 关键点 为 圆心 以 
关键点 和取点/nr 区域 的 形心 圆形 的 连线 为 X 
轴 建立 坐标系 计算 形心 时 圆形 区域 上 每个 
点 的 质量 是 其 对应 的 像素 值 四 
LBPLBP 局部 二 值 模式 将 每个 像素点 与 周围 
点 大小 比较 半径 为 R 的 圆 上 均匀 
采样 P 个 点 大小 量化 为 0 或 1 
多个 bit 组成 一个 数 统计 每 个数 的 直方图 
为 解决 旋转 不变性 的 问题 将 LBP 周围 的 
二进制码 如 11110001 按 位 旋转 取 二进制码 最小 的 
值 为 最终 LBP 值 如 对于 11110001 情况 我们 
按 位 旋转 得到 11100011 11000111 10001111 0001111 00111110 01111100 
11111000 七个 不同 的 二进制 数 最小值 为 00011111 . 
改进 的 LBP 将 3 × 3 邻域 扩展 到 
任意 邻域 并用 圆形 邻域 代替 了 正方向 邻域 这种 
LBP 特征 叫做 Extended LBP 也叫 Circular LBP LBP 特征 
具有 灰度 不变性 和 旋转 不变性 等 显著 优点 五 
GaborGabor 是 一个 用于 边缘 提取 的 线性 滤波器 其 
频率 和 方向 表达 与 人类 视觉 系统 类似 能够 
提供 良好 的 方向 选择 和 尺度 选择 特性 而且 
对于 光照 变化 不 敏感 十分 适合 纹理 分析 使用 
一个 三角函数 与 一个 高斯 函数 叠加 就 得到 了 
一个 Gabor 滤波器 Gabor 滤波器 组 Gabor 滤波器 组 类似于 
人类 的 视觉 系统 多 频率 / 尺度 多 方向 
Gabor 滤波器 频域 属于 加 窗 傅里叶 变换 空域 一个 
高斯 核 函数 和 正弦 平面波 的 乘积 三 尺度 
八 方向 六 代码 实现 1 Haaris Corner1 import numpy 
as np 2 import cv2 as cv 3 filename = 
picture / chessboard . png 4 img = cv . 
imread filename 5 gray = cv . cvtColor img cv 
. COLOR _ BGR2GRAY 6 gray = np . float32 
gray 7 dst = cv . cornerHarris gray 2 3 
0.04 8 # result is dilated for marking the corners 
not important 9 dst = cv . dilate dst None 
10 # Threshold for an optimal value it may vary 
depending on the image . 11 img dst 0.01 * 
dst . max = 0 0 255 12 cv . 
imshow dst img 13 if cv . waitKey 0 & 
0xff = = 27 14 cv . d e s 
t r o y A l l W i n 
d o w s 2 ORB1 import numpy as np 
2 import cv2 as cv 3 import matplotlib . pyplot 
as plt 4 img1 = cv . imread picture / 
box . png 0 # queryImage 5 img2 = cv 
. imread picture / box _ in _ scene . 
png 0 # trainImage 6 # Initiate ORB detector 7 
orb = cv . ORB _ create 8 # find 
the keypoints and descriptors with ORB 9 kp1 des1 = 
orb . detectAndCompute img1 None 10 kp2 des2 = orb 
. detectAndCompute img2 None 11 12 # create BFMatcher object 
13 bf = cv . BFMatcher cv . NORM _ 
HAMMING crossCheck = True 14 # Match descriptors . 15 
matches = bf . match des1 des2 16 # Sort 
them in the order of their distance . 17 matches 
= sorted matches key = lambda x x . distance 
18 # Draw first 10 matches . 19 img3 = 
cv . drawMatches img1 kp1 img2 kp2 matches 20 None 
flags = 2 20 plt . imshow img3 plt . 
show 3 图片 拼接 注意 原始 图片 不能 过大 否则 
报错 此处 500 * 375 1 from Stitcher import Stitcher 
2 import cv2 3 4 # 读取 拼接 图片 5 
imageA = cv2 . imread image / 3 . png 
6 imageB = cv2 . imread image / 4 . 
png 7 8 # 把 图片 拼接 成 全景图 9 
stitcher = Stitcher 10 result vis = stitcher . stitch 
imageA imageB showMatches = True 11 12 # 显示 所有 
图片 13 cv2 . imshow Image A imageA 14 cv2 
. imshow Image B imageB 15 cv2 . imshow Keypoint 
Matches vis 16 cv2 . imshow Result result 17 cv2 
. waitKey 0 18 cv2 . d e s t 
r o y A l l W i n d 
o w s 1 import numpy as np 2 import 
cv2 3 4 class Stitcher 5 6 # 拼接 函数 
7 def stitch self images ratio = 0.75 reprojThresh = 
4.0 showMatches = False 8 # 获取 输入 图片 9 
imageB imageA = images 10 # 检测 A B 图片 
的 SIFT 关键 特征点 并 计算 特征描述 子 11 kpsA 
featuresA = self . d e t e c t 
A n d D e s c r i b 
e imageA 12 kpsB featuresB = self . d e 
t e c t A n d D e s 
c r i b e imageB 13 14 # 匹配 
两张 图片 的 所有 特征点 返回 匹配 结果 15 M 
= self . matchKeypoints kpsA kpsB featuresA featuresB ratio reprojThresh 
16 17 # 如果 返回 结果 为 空 没有 匹配 
成功 的 特征点 退出 算法 18 if M is None 
19 return None 20 21 # 否则 提取 匹配 结果 
22 # H 是 3x3 视 角变换 矩阵 23 matches 
H status = M 24 # 将 图片 A 进行 
视 角变换 result 是 变换 后 图片 25 result = 
cv2 . warpPerspective imageA H imageA . shape 1 + 
imageB . shape 1 imageA . shape 0 26 # 
将 图片 B 传入 result 图片 最 左端 27 result 
0 imageB . shape 0 0 imageB . shape 1 
= imageB 28 29 # 检测 是否 需要 显示 图片 
匹配 30 if showMatches 31 # 生成 匹配 图片 32 
vis = self . drawMatches imageA imageB kpsA kpsB matches 
status 33 # 返回 结果 34 return result vis 35 
36 # 返回 匹配 结果 37 return result 38 39 
def d e t e c t A n d 
D e s c r i b e self image 
40 # 将 彩色图片 转换成 灰度 图 41 gray = 
cv2 . cvtColor image cv2 . COLOR _ BGR2GRAY 42 
43 # 建立 SIFT 生成器 44 descriptor = cv2 . 
xfeatures2d . SIFT _ create 45 # 检测 SIFT 特征点 
并 计算 描述 子 46 kps features = descriptor . 
detectAndCompute image None 47 48 # 将 结果 转换成 NumPy 
数组 49 kps = np . float32 kp . pt 
for kp in kps 50 51 # 返回 特征点 集 
及 对应 的 描述 特征 52 return kps features 53 
54 def matchKeypoints self kpsA kpsB featuresA featuresB ratio reprojThresh 
55 # 建立 暴力 匹 配器 56 matcher = cv2 
. D e s c r i p t o 
r M a t c h e r _ create 
BruteForce 57 58 # 使用 KNN 检测 来自 A B 
图 的 SIFT 特征 匹 配对 K = 2 59 
rawMatches = matcher . knnMatch featuresA featuresB 2 60 61 
matches = 62 for m in rawMatches 63 # 当 
最近 距离 跟 次 近距离 的 比值 小于 ratio 值 
时 保留 此 匹 配对 64 if len m = 
= 2 and m 0 . distance m 1 . 
distance * ratio 65 # 存储 两个 点在 featuresA featuresB 
中的 索引 值 66 matches . append m 0 . 
trainIdx m 0 . queryIdx 67 68 # 当 筛选 
后的/nr 匹配 对 大于 4时 计算 视 角变换 矩阵 69 
if len matches 4 70 # 获取 匹 配对 的 
点 坐标 71 ptsA = np . float32 kpsA i 
for _ i in matches 72 ptsB = np . 
float32 kpsB i for i _ in matches 73 74 
# 计算 视 角变换 矩阵 75 H status = cv2 
. findHomography ptsA ptsB cv2 . RANSAC reprojThresh 76 77 
# 返回 结果 78 return matches H status 79 80 
# 如果 匹 配对 小于 4时 返回 None 81 return 
None 82 83 def drawMatches self imageA imageB kpsA kpsB 
matches status 84 # 初始化 可视化 图片 将 A B 
图 左右 连接 到 一起 85 hA wA = imageA 
. shape 2 86 hB wB = imageB . shape 
2 87 vis = np . zeros max hA hB 
wA + wB 3 dtype = uint8 88 vis 0 
hA 0 wA = imageA 89 vis 0 hB wA 
= imageB 90 91 # 联合 遍历 画出 匹 配对 
92 for trainIdx queryIdx s in zip matches status 93 
# 当 点 对 匹配 成功 时 画到 可视化 图上 
94 if s = = 1 95 # 画出 匹 
配对 96 ptA = int kpsA queryIdx 0 int kpsA 
queryIdx 1 97 ptB = int kpsB trainIdx 0 + 
wA int kpsB trainIdx 1 98 cv2 . line vis 
ptA ptB 0 255 0 1 99 100 # 返回 
可视化 结果 101 return vis 更多 精彩 内容 请 关注 微信 公众 号 听 潮 
庭 计算机 视觉 的 深度 学习 实战 四 图像 特征提取 
综述 颜色 特征 量化 颜色 直方图 聚 类 颜色 直方图 
几何 特征 Edge Corner Blob 基于 关键点 的 特征描述 子 
SIFT SURF ORB 其他 特征提取 LBP Gabor 代码 实践 一 
颜色 特征 1 量化 颜色 直方图 适用 颜色 空间 RGB 
HSV 等 颜色 空间 操作 颜色 空间 量化 单元 bin 
由 单元 中心 代表 统计 落在 量化 单元 上 的 
像素 数量 最 常用 的 方法 是 将 颜色 空间 
的 各个 分量 维度 均匀 地 进行 划分 HSV 空间 
优势 计算 高效 劣势 量化 问题 稀疏 2 聚 类 
颜色 直方图 适用 颜色 空间 Lab 等 颜色 空间 操作 
使用 聚 类 算法 对 所有 像素点 颜色 空间 进行 
聚 类 单元 bin 由 聚 类 中心 代表 聚 
类 算 法则 考虑到 图像 颜色 特征 在 整个 空间 
的 分布 情况 避免 出现 大量 的 bin 中的 像素 
数量 非常 稀疏 的 情况 lab 空间 是 用 数字化 
的 方法 来 描述 人 的 视觉 感应 Lab 颜色 
空间 中 L 分量 用于 表示 像素 的 亮度 取值 
范围 是 1 100 表示 从纯黑/nr 到 纯白 a 表示 
从 品红色 到 深绿色 的 范围 取值 范围 是 127 
128 b 表示 从 黄色 到 蓝色 的 范围 取值 
范围 是 127 128 . 3 设想 两幅 图像 的 
颜色 直方图 几乎 相同 只是 互相 错开 了 一个 bin 
这时 如果 采用 L1 距离 或者 欧拉 距离 计算 两者 
的 相似 度 会 得到 很小 的 相似 度 值 
为了 克服 这个 缺陷 需要 考虑到 相似 但不 相同 的 
颜色 之间 的 相似 度 一种 方法 是 采用 二次 
式 距离 另一种 方法 是 对 颜色 直方图 事先 进行 
平滑 过滤 即 每个 bin 中的 像素 对于 相邻 的 
几个 bin 也 有贡献 二 几何 特征 1 边缘 Edge 
像素 明显 变化 的 区域 具有 丰富 的 语义 信息 
用于 物体 识别 几何 视 角变换 边缘 定义 像素 值 
函数 快速 变化 的 区域 一 阶 导数 的 极值 
区域 边缘 提取 先 高斯 高斯 平滑 去 噪 再用 
一 阶 导数 获取 极值 导数 对 噪声 敏感 高斯滤波 
yijiedao 标准差 尺度 梯度 幅 值 / 强度 梯度 增加 
最快 方向 边缘 提取 尺度 问题 不同 标准差 的 滤波 
x 方向 能 捕捉 到 不同 尺度 的 边缘 三 
基于 特征点 的 特征描述 子 从 不同 的 距离 不同 
的 方向 角度 不同 的 光照 条件 下 观察 一个 
物体 时 物体 的 大小 形状 敏感 都会 有所 不同 
但 我们 依然 可以 判断 它 是 同一 物体 理想 
的 特征 描述 子 应该 具备 这些 性质 即 在 
大小 方向 明暗 不同 的 图像 中 同一 特征点 应 
具有 足够 相似 的 描述 子 称之为 描述 子 的 
可 复现 性 1 几何 特征 特征点 / 关键 点 
不同 视角 图片 之间 的 映射 稳定 局部 特征点 可重复性 
显著性 抗 图片 变换 外貌 变换 亮度 光照 几何变换 平移 
选择 尺度 兴趣 点 / 关键点 Interest point / Key 
point 图片 配 准 / 拼接 运动 跟踪 物体 识别 
机器人 导航 3D 重建 2 几何 特征 Harris 角 点 
Harris 角 点 Corner 一种 显著 点在 任何 方向 上 
移动 小 观察窗 导致 大 的 像素 变动 数学模型 偏移 
u v 后窗 内 图像 变化 取 E u v 
大 的 patch 其中 w x y 相当于 权重 判断 
Harris 角 点 图像 中 直线 一个 特征值 大 另一个 
特征值 小 图像 中 平面 两个 特征值 都小/nr 且 近似 
相等 图像 中 角 点 两个 特征值 都大/nr 且 近似 
相等 3 FAST 角 点 检测 FAST 角 点 检测 
是 一种 快速 角 点 特征 检测 算法 FAST 角 
点 定义 为 若 某 像素点 与其 周围 领域内 足够 
多 的 像素点 处于 不同 的 区域 则 该 像素点 
可能 为 角 点 也 就是 某些 属性 与众不同 FAST 
特征点 检测 是 对 兴趣 点 所在 圆周 上 的 
16个 像素点 进行 判断 若 判 断后 的 当前 中心 
像素点 为 暗 或 亮 将 决定 其 是否 为 
角 点 确定 一个 阈值 t 观察 某 像素点 为 
中心 的 一个 半径 等于 3 像素 的 离散化 的 
圆 这个 圆 的 边界 上有 16个 像素 如果 在 
这个 大小 为 16个 像素 的 圆 上有 N 12 
个 连续 的 像素点 他们 的 像素 值 要么 都比 
I _ p + tIp + t 大 要么 都比 
I _ p tIp − t 小 则 p 他 
就是 一个 角 点 4 几何 特征 斑点 拉普拉斯 梯度 
一 阶 导 极值 点 → 二阶 导数 零点 梯度 
/ 边缘 可以 通过 寻找 二阶 导数 接近 零 但对 
噪声 很 敏感 首先 对 图像 进行 高斯 卷积 滤波 
进行 降噪 出路 再 采用 Laplace 算子 进行 边缘 检测 
高斯 拉普拉斯 滤波 / Laplacian of Ganssian LoG 当 sigma 
较 小时 将 识别 出 更为 细节 的 边缘 斑点 
Blob LoG 图 找 极值 点 → 斑点 局部 特征 
SIFT 尺度 不变 特征 变换 Scale invariant feature transform 基于 
尺度空间 不变 的 特征 SIFT 特征 计算 步骤 在 DoG 
尺度空间 中 获取 极值 点 即 关键点 LoG 尺度空间 和 
DoG 差分 高斯 尺度空间 对 关键 点 处理 位置 插值 
获得 精确 的 关键 点 去除 边缘 点 关键点 的 
方向 估计 关键点 描述 子 的 生成 区域 坐标 旋转 
计算 采样 区域 的 直方图 特点 具有 良好 的 不变性 
旋转 尺度 缩放 平移 亮度 变化 对 视角 变化 仿射变换/v 
和/c 噪声/n 也/d 有/v 一定/d 程度/n 的/uj 稳定性/n 独特/a 性好/i 
信息量 丰富 适用于 在 海量 特征 数据库 中 进行 快速 
准确 的 匹配 多 量性 即使 少数 物体 也 可以 
产生 大量 的 SIFT 特征 计算 快 经 优化 的 
SIFT 匹配 算法 甚至 可以 达到 实时性 可扩展性 可以 很 
方便 的 与 其他 形式 的 特征向量 进行 联合 尺度空间 
使用 不同 σ 的 LoG 对 图片 进行 滤波 使用 
LoG 则 后续 计算 量大 故 使用 DoG 来 代替 
LoG 用 差分 代替 微分 高斯 金字塔 就是 在 传统 
金字塔 的 基础 上 对 每 一层 用 不同 的 
参数 σ 做 高斯 模糊 是的 每 一层 金字塔 有 
多张 高斯 模糊 图像 这样 一组 图像 是 一个 octave 
SIFT 计算 高斯 差分 DoG 空间 SIFt DoG 空间 极值 
点 就是 关键点 圆/n 半径/n →/i 特征点/i 尺度/n 圆心/n →/i 
特征点/i 坐标/v 通/v 过拟合/i 三维/m 二次函数/i 来/v 精确/a 确定/v 关键点/n 
的/uj 位置/v 和/c 尺度/n 离散/v 空间/n 的/uj 极值/n 点/m 并/c 
不是/c 真正/d 的/uj 极值/n 点/m 上图 显示 了 二维 函数 
离散 空间 得到 的 极值 点 与 连续 空间 极值 
点 的 差别 利用 已知 的 离散 空间 点 插值 
得到 的 连续 空间 极值 点 的 方法 叫做 子 
像素 插值 同时/c 去除/v 低/a 对比度/l 的/uj 关键/n 点/m 和不/nr 
稳定/a 的/uj 边缘/n 相/v 应点/i 因为 DoG 算子 会 产生 
较强 的 边缘 响应 以 增强 匹配 稳定性 提 高抗 
噪声 能力 DoG 算子 会 产生 较强 的 边缘 响应 
需要 剔除 不 稳定 的 边缘 相 应点 获取 特征点 
处 的 Hessian 矩阵 主 曲率 通过 一个 2 × 
2 的 Hessian 矩阵 H 求出 SIFT 特征点 方向 估计 
在 尺度 上 计算 梯度 直方图 8 方向 以 特征点 
为中心 以 3 × 1.5 σ 为 半径 活 取 
最高值 方向 为 关键 点主 方向 为了 匹配 的 稳定性 
将 超过 最高 值 80% 的 方向 称 为辅 方向 
为了 保证 特征 矢量 具有 旋转 不变性 需要 以 特征点 
为中心 将 特征点 附 近邻 域内 的 图像 旋转 一个 
方向 角 θ 即将 原 图像 x 轴 转到 与 
主 方向 相同 的 方向 SIFT 计算/v 特征点/i 描述/v 子/ng 
在/p 旋转/v 后的/nr 坐标/v 上/f 采样/v 16/m ×/i 16/m 的/uj 
像素/n 窗/s 在/p 旋转/v 后的/nr 坐标/v 上/f 采样/v 16/m ×/i 
16/m 的/uj 像素/n 床/n 4/m ×/i 4/m 网格/n 8/m 方向/n 
直方图/n 总共/b 128/m 维/v SIFT/w 的/uj 缺点/n 是/v 计算 太 
复杂 如果 不 借助 硬件加速 或 专门 的 图像 处理器 
很难 实现 改进 方式 Haar like 特征 Haar like 特征 
分为 边缘 检测 线性 特征 中心 特征 和 对角线 特征 
这些/r 特征/n 组合成/l 特征/n 模板/n 特征/n 模板/n 有/v 白色/n 和/c 
黑色/n 两种/m 矩形/n 并 定义 该 模板 的 特征值 为 
白色 矩形 像素 和 减去 黑色 矩形 像素 和 Haar 
特征值 反映 了 图像 的 灰度 变化 情况 Haar like 
特征 的 快速 计算 积分 图 同一 个 像素 如果 
被 包含 在 不同 的 Haar like 的 特征 模板 
中 会被 重复 计算 多次 积分 图 是 根据 四个 
角 点 就能 计算 区域内 的 像素 之和 的 方法 
5 局部 特征 SURFSURF Speed Up Robust Features 算子 是 
Herbert Bay 等 人在 2006年 提出 的 它 是 对 
SIFT 的 改进 可将 速度 提高 三倍 SURF 只 要是 
把 SIFT 中的 某些 运算 做了 简化 SURF 把 SIFT 
中的 高斯 二阶 微分 的 模板 进行 了 简化 使得 
卷积 平滑 操作 仅 需要 转换成 加减 运算 在 方向 
确定 阶段 在 圆形 区域 计算 x y 方向 的 
haar 小波 响应 找到 模 最大 的 扇形 方向 为了 
找出 图像 中的 特征点 需要 对 原图 进行 变换 变换 
图 就是 原图 每个 像素 的 Hessian 矩阵 行列式 的 
近似值 构成 的 求 Hessian 时要先/nr 高斯 平滑 然后 求 
二阶 导数 这 对于 离散 的 像素 点 而言 是 
用 模板 卷积 形成 的 这两种 操 作合 在 一起 
用 一个 Haar 模板 代替 就 可以 了 小 造型 
为了 保证 旋转 不变性 在 SURF 中 统计 特征点 领域内 
的 Haar 小波 特征 即 以 特征点 为中心 计算 半径 
为 6s s 为特征 点 所在 的 尺度 值 的 
邻 域内 统计 60度 扇形 内 所有 点在 x 水平 
和y/nr 垂直 方向 的 Haar 小波 响应 总和 然后 60度 
扇形 以 一定 间隔 进行 旋转 最后 将 最大值 那个 
扇形 的 方向 作为 该 特征点 的 主 方向 在 
特征点 周围 取 一个 正 方形 框 框 的 边 
长为 20s 是 所 检测 到 该 特征点 所在 的 
尺度 该 框 的 方向 就是 检测 出来 的 主 
方向 最终 SURF 的 特征点 特征向量 的 维度 为 64 
维 然后 把 该 框 分为 16 个子 区域 每 
个子 区域 统计 25个 像素 的 水平 方向 和 垂直 
方向 的 Haar 小波 特征 这里/r 的/uj 水平/n 和/c 垂直/v 
方向/n 都是/nr 相对/d 主/b 方向/n 而言/c 的/uj 近似 SIFT 算法 
实现 快速 版 先 确定 后 选点 再找 最大值 Haar 
模板 加速 三倍 亮度 效果 下 效果 好 模糊 方面 
优于 SIFT 尺度 不 变上 不及 SIFT 旋转 不 变上 
差 很多 6 ORB 特征描述 SIFT 和 SURF 计算 复杂 
难以 用于 实时性 特征 检测 更何况 SIFT 与 SURF 以前 
还 是 收费 的 ORB 特征 基于 FAST 角 点 
的 特征点 检测 与 BRIEF 特征描述 技术 ORB 的 基本 
思路 它 是 对 FAST 角 点 与 BRIEF 特征描述 
子 的 一种 结合 与 改进 FAST 角 点 检测 
的 缺点 是 缺乏 尺度 不变性 可以 通告 构建 高斯 
金字塔 然后 在 每 一层 金字塔 图像 上 检测 角 
点 来 实现 尺度 不变性 BRIEF 的 缺点 是 缺乏 
旋转 不变性 需要 给 BRIEF 加上 旋转 不变性 7 BRIEFBRIEF 
需要 先 平滑 图片 然后 在 特征点 周围 选择 一个 
Patch 在 这个 Patch 内 通过 一种 选定 的 方法 
来 挑选 Nd 个 点 对 比较 点 对 中 
两点 像素 的 大小 进行 如下 赋值 所有 Nd 个 
点 对 都 进行 比较 之间 我们 就 生成 了 
一个 Nd 长 的 二进制 串 点 对 的 生成 
方式 共有 五种 1 X Y 都 服从 在 s 
/ 2 s / 2 范围内 的 均匀分布 且 相互 
独立 2 X Y 都 服从 均值 为 0 方差 
为 ² / 25d 的 高斯分布 且 相互 独立 即 
X 和Y/nr 都已 原点 为中心 进行 同 方差 的 高斯分布 
点 对 的 位置 一旦 随机 选定 就 不能 再 
更改 ORB 对 BRIEF 的 改进 ORB 在 计算 BRIEF 
描述 子时 建立 的 坐标系 是以 关键点 为 圆心 以 
关键点 和取点/nr 区域 的 形心 圆形 的 连线 为 X 
轴 建立 坐标系 计算 形心 时 圆形 区域 上 每个 
点 的 质量 是 其 对应 的 像素 值 四 
LBPLBP 局部 二 值 模式 将 每个 像素点 与 周围 
点 大小 比较 半径 为 R 的 圆 上 均匀 
采样 P 个 点 大小 量化 为 0 或 1 
多个 bit 组成 一个 数 统计 每 个数 的 直方图 
为 解决 旋转 不变性 的 问题 将 LBP 周围 的 
二进制码 如 11110001 按 位 旋转 取 二进制码 最小 的 
值 为 最终 LBP 值 如 对于 11110001 情况 我们 
按 位 旋转 得到 11100011 11000111 10001111 0001111 00111110 01111100 
11111000 七个 不同 的 二进制 数 最小值 为 00011111 . 
改进 的 LBP 将 3 × 3 邻域 扩展 到 
任意 邻域 并用 圆形 邻域 代替 了 正方向 邻域 这种 
LBP 特征 叫做 Extended LBP 也叫 Circular LBP LBP 特征 
具有 灰度 不变性 和 旋转 不变性 等 显著 优点 五 
GaborGabor 是 一个 用于 边缘 提取 的 线性 滤波器 其 
频率 和 方向 表达 与 人类 视觉 系统 类似 能够 
提供 良好 的 方向 选择 和 尺度 选择 特性 而且 
对于 光照 变化 不 敏感 十分 适合 纹理 分析 使用 
一个 三角函数 与 一个 高斯 函数 叠加 就 得到 了 
一个 Gabor 滤波器 Gabor 滤波器 组 Gabor 滤波器 组 类似于 
人类 的 视觉 系统 多 频率 / 尺度 多 方向 
Gabor 滤波器 频域 属于 加 窗 傅里叶 变换 空域 一个 
高斯 核 函数 和 正弦 平面波 的 乘积 三 尺度 
八 方向 六 代码 实现 1 Haaris Corner1 import numpy 
as np 2 import cv2 as cv 3 filename = 
picture / chessboard . png 4 img = cv . 
imread filename 5 gray = cv . cvtColor img cv 
. COLOR _ BGR2GRAY 6 gray = np . float32 
gray 7 dst = cv . cornerHarris gray 2 3 
0.04 8 # result is dilated for marking the corners 
not important 9 dst = cv . dilate dst None 
10 # Threshold for an optimal value it may vary 
depending on the image . 11 img dst 0.01 * 
dst . max = 0 0 255 12 cv . 
imshow dst img 13 if cv . waitKey 0 & 
0xff = = 27 14 cv . d e s 
t r o y A l l W i n 
d o w s 2 ORB1 import numpy as np 
2 import cv2 as cv 3 import matplotlib . pyplot 
as plt 4 img1 = cv . imread picture / 
box . png 0 # queryImage 5 img2 = cv 
. imread picture / box _ in _ scene . 
png 0 # trainImage 6 # Initiate ORB detector 7 
orb = cv . ORB _ create 8 # find 
the keypoints and descriptors with ORB 9 kp1 des1 = 
orb . detectAndCompute img1 None 10 kp2 des2 = orb 
. detectAndCompute img2 None 11 12 # create BFMatcher object 
13 bf = cv . BFMatcher cv . NORM _ 
HAMMING crossCheck = True 14 # Match descriptors . 15 
matches = bf . match des1 des2 16 # Sort 
them in the order of their distance . 17 matches 
= sorted matches key = lambda x x . distance 
18 # Draw first 10 matches . 19 img3 = 
cv . drawMatches img1 kp1 img2 kp2 matches 20 None 
flags = 2 20 plt . imshow img3 plt . 
show 3 图片 拼接 注意 原始 图片 不能 过大 否则 
报错 此处 500 * 375 1 from Stitcher import Stitcher 
2 import cv2 3 4 # 读取 拼接 图片 5 
imageA = cv2 . imread image / 3 . png 
6 imageB = cv2 . imread image / 4 . 
png 7 8 # 把 图片 拼接 成 全景图 9 
stitcher = Stitcher 10 result vis = stitcher . stitch 
imageA imageB showMatches = True 11 12 # 显示 所有 
图片 13 cv2 . imshow Image A imageA 14 cv2 
. imshow Image B imageB 15 cv2 . imshow Keypoint 
Matches vis 16 cv2 . imshow Result result 17 cv2 
. waitKey 0 18 cv2 . d e s t 
r o y A l l W i n d 
o w s 1 import numpy as np 2 import 
cv2 3 4 class Stitcher 5 6 # 拼接 函数 
7 def stitch self images ratio = 0.75 reprojThresh = 
4.0 showMatches = False 8 # 获取 输入 图片 9 
imageB imageA = images 10 # 检测 A B 图片 
的 SIFT 关键 特征点 并 计算 特征描述 子 11 kpsA 
featuresA = self . d e t e c t 
A n d D e s c r i b 
e imageA 12 kpsB featuresB = self . d e 
t e c t A n d D e s 
c r i b e imageB 13 14 # 匹配 
两张 图片 的 所有 特征点 返回 匹配 结果 15 M 
= self . matchKeypoints kpsA kpsB featuresA featuresB ratio reprojThresh 
16 17 # 如果 返回 结果 为 空 没有 匹配 
成功 的 特征点 退出 算法 18 if M is None 
19 return None 20 21 # 否则 提取 匹配 结果 
22 # H 是 3x3 视 角变换 矩阵 23 matches 
H status = M 24 # 将 图片 A 进行 
视 角变换 result 是 变换 后 图片 25 result = 
cv2 . warpPerspective imageA H imageA . shape 1 + 
imageB . shape 1 imageA . shape 0 26 # 
将 图片 B 传入 result 图片 最 左端 27 result 
0 imageB . shape 0 0 imageB . shape 1 
= imageB 28 29 # 检测 是否 需要 显示 图片 
匹配 30 if showMatches 31 # 生成 匹配 图片 32 
vis = self . drawMatches imageA imageB kpsA kpsB matches 
status 33 # 返回 结果 34 return result vis 35 
36 # 返回 匹配 结果 37 return result 38 39 
def d e t e c t A n d 
D e s c r i b e self image 
40 # 将 彩色图片 转换成 灰度 图 41 gray = 
cv2 . cvtColor image cv2 . COLOR _ BGR2GRAY 42 
43 # 建立 SIFT 生成器 44 descriptor = cv2 . 
xfeatures2d . SIFT _ create 45 # 检测 SIFT 特征点 
并 计算 描述 子 46 kps features = descriptor . 
detectAndCompute image None 47 48 # 将 结果 转换成 NumPy 
数组 49 kps = np . float32 kp . pt 
for kp in kps 50 51 # 返回 特征点 集 
及 对应 的 描述 特征 52 return kps features 53 
54 def matchKeypoints self kpsA kpsB featuresA featuresB ratio reprojThresh 
55 # 建立 暴力 匹 配器 56 matcher = cv2 
. D e s c r i p t o 
r M a t c h e r _ create 
BruteForce 57 58 # 使用 KNN 检测 来自 A B 
图 的 SIFT 特征 匹 配对 K = 2 59 
rawMatches = matcher . knnMatch featuresA featuresB 2 60 61 
matches = 62 for m in rawMatches 63 # 当 
最近 距离 跟 次 近距离 的 比值 小于 ratio 值 
时 保留 此 匹 配对 64 if len m = 
= 2 and m 0 . distance m 1 . 
distance * ratio 65 # 存储 两个 点在 featuresA featuresB 
中的 索引 值 66 matches . append m 0 . 
trainIdx m 0 . queryIdx 67 68 # 当 筛选 
后的/nr 匹配 对 大于 4时 计算 视 角变换 矩阵 69 
if len matches 4 70 # 获取 匹 配对 的 
点 坐标 71 ptsA = np . float32 kpsA i 
for _ i in matches 72 ptsB = np . 
float32 kpsB i for i _ in matches 73 74 
# 计算 视 角变换 矩阵 75 H status = cv2 
. findHomography ptsA ptsB cv2 . RANSAC reprojThresh 76 77 
# 返回 结果 78 return matches H status 79 80 
# 如果 匹 配对 小于 4时 返回 None 81 return 
None 82 83 def drawMatches self imageA imageB kpsA kpsB 
matches status 84 # 初始化 可视化 图片 将 A B 
图 左右 连接 到 一起 85 hA wA = imageA 
. shape 2 86 hB wB = imageB . shape 
2 87 vis = np . zeros max hA hB 
wA + wB 3 dtype = uint8 88 vis 0 
hA 0 wA = imageA 89 vis 0 hB wA 
= imageB 90 91 # 联合 遍历 画出 匹 配对 
92 for trainIdx queryIdx s in zip matches status 93 
# 当 点 对 匹配 成功 时 画到 可视化 图上 
94 if s = = 1 95 # 画出 匹 
配对 96 ptA = int kpsA queryIdx 0 int kpsA 
queryIdx 1 97 ptB = int kpsB trainIdx 0 + 
wA int kpsB trainIdx 1 98 cv2 . line vis 
ptA ptB 0 255 0 1 99 100 # 返回 
可视化 结果 101 return vis 更多 精彩 内容 请 关注 微信 公众 号 听 潮 
庭 计算机 视觉 的 深度 学习 实战 四 图像 特征提取 
综述 颜色 特征 量化 颜色 直方图 聚 类 颜色 直方图 
几何 特征 Edge Corner Blob 基于 关键点 的 特征描述 子 
SIFT SURF ORB 其他 特征提取 LBP Gabor 代码 实践 一 
颜色 特征 1 量化 颜色 直方图 适用 颜色 空间 RGB 
HSV 等 颜色 空间 操作 颜色 空间 量化 单元 bin 
由 单元 中心 代表 统计 落在 量化 单元 上 的 
像素 数量 最 常用 的 方法 是 将 颜色 空间 
的 各个 分量 维度 均匀 地 进行 划分 HSV 空间 
优势 计算 高效 劣势 量化 问题 稀疏 2 聚 类 
颜色 直方图 适用 颜色 空间 Lab 等 颜色 空间 操作 
使用 聚 类 算法 对 所有 像素点 颜色 空间 进行 
聚 类 单元 bin 由 聚 类 中心 代表 聚 
类 算 法则 考虑到 图像 颜色 特征 在 整个 空间 
的 分布 情况 避免 出现 大量 的 bin 中的 像素 
数量 非常 稀疏 的 情况 lab 空间 是 用 数字化 
的 方法 来 描述 人 的 视觉 感应 Lab 颜色 
空间 中 L 分量 用于 表示 像素 的 亮度 取值 
范围 是 1 100 表示 从纯黑/nr 到 纯白 a 表示 
从 品红色 到 深绿色 的 范围 取值 范围 是 127 
128 b 表示 从 黄色 到 蓝色 的 范围 取值 
范围 是 127 128 . 3 设想 两幅 图像 的 
颜色 直方图 几乎 相同 只是 互相 错开 了 一个 bin 
这时 如果 采用 L1 距离 或者 欧拉 距离 计算 两者 
的 相似 度 会 得到 很小 的 相似 度 值 
为了 克服 这个 缺陷 需要 考虑到 相似 但不 相同 的 
颜色 之间 的 相似 度 一种 方法 是 采用 二次 
式 距离 另一种 方法 是 对 颜色 直方图 事先 进行 
平滑 过滤 即 每个 bin 中的 像素 对于 相邻 的 
几个 bin 也 有贡献 二 几何 特征 1 边缘 Edge 
像素 明显 变化 的 区域 具有 丰富 的 语义 信息 
用于 物体 识别 几何 视 角变换 边缘 定义 像素 值 
函数 快速 变化 的 区域 一 阶 导数 的 极值 
区域 边缘 提取 先 高斯 高斯 平滑 去 噪 再用 
一 阶 导数 获取 极值 导数 对 噪声 敏感 高斯滤波 
yijiedao 标准差 尺度 梯度 幅 值 / 强度 梯度 增加 
最快 方向 边缘 提取 尺度 问题 不同 标准差 的 滤波 
x 方向 能 捕捉 到 不同 尺度 的 边缘 三 
基于 特征点 的 特征描述 子 从 不同 的 距离 不同 
的 方向 角度 不同 的 光照 条件 下 观察 一个 
物体 时 物体 的 大小 形状 敏感 都会 有所 不同 
但 我们 依然 可以 判断 它 是 同一 物体 理想 
的 特征 描述 子 应该 具备 这些 性质 即 在 
大小 方向 明暗 不同 的 图像 中 同一 特征点 应 
具有 足够 相似 的 描述 子 称之为 描述 子 的 
可 复现 性 1 几何 特征 特征点 / 关键 点 
不同 视角 图片 之间 的 映射 稳定 局部 特征点 可重复性 
显著性 抗 图片 变换 外貌 变换 亮度 光照 几何变换 平移 
选择 尺度 兴趣 点 / 关键点 Interest point / Key 
point 图片 配 准 / 拼接 运动 跟踪 物体 识别 
机器人 导航 3D 重建 2 几何 特征 Harris 角 点 
Harris 角 点 Corner 一种 显著 点在 任何 方向 上 
移动 小 观察窗 导致 大 的 像素 变动 数学模型 偏移 
u v 后窗 内 图像 变化 取 E u v 
大 的 patch 其中 w x y 相当于 权重 判断 
Harris 角 点 图像 中 直线 一个 特征值 大 另一个 
特征值 小 图像 中 平面 两个 特征值 都小/nr 且 近似 
相等 图像 中 角 点 两个 特征值 都大/nr 且 近似 
相等 3 FAST 角 点 检测 FAST 角 点 检测 
是 一种 快速 角 点 特征 检测 算法 FAST 角 
点 定义 为 若 某 像素点 与其 周围 领域内 足够 
多 的 像素点 处于 不同 的 区域 则 该 像素点 
可能 为 角 点 也 就是 某些 属性 与众不同 FAST 
特征点 检测 是 对 兴趣 点 所在 圆周 上 的 
16个 像素点 进行 判断 若 判 断后 的 当前 中心 
像素点 为 暗 或 亮 将 决定 其 是否 为 
角 点 确定 一个 阈值 t 观察 某 像素点 为 
中心 的 一个 半径 等于 3 像素 的 离散化 的 
圆 这个 圆 的 边界 上有 16个 像素 如果 在 
这个 大小 为 16个 像素 的 圆 上有 N 12 
个 连续 的 像素点 他们 的 像素 值 要么 都比 
I _ p + tIp + t 大 要么 都比 
I _ p tIp − t 小 则 p 他 
就是 一个 角 点 4 几何 特征 斑点 拉普拉斯 梯度 
一 阶 导 极值 点 → 二阶 导数 零点 梯度 
/ 边缘 可以 通过 寻找 二阶 导数 接近 零 但对 
噪声 很 敏感 首先 对 图像 进行 高斯 卷积 滤波 
进行 降噪 出路 再 采用 Laplace 算子 进行 边缘 检测 
高斯 拉普拉斯 滤波 / Laplacian of Ganssian LoG 当 sigma 
较 小时 将 识别 出 更为 细节 的 边缘 斑点 
Blob LoG 图 找 极值 点 → 斑点 局部 特征 
SIFT 尺度 不变 特征 变换 Scale invariant feature transform 基于 
尺度空间 不变 的 特征 SIFT 特征 计算 步骤 在 DoG 
尺度空间 中 获取 极值 点 即 关键点 LoG 尺度空间 和 
DoG 差分 高斯 尺度空间 对 关键 点 处理 位置 插值 
获得 精确 的 关键 点 去除 边缘 点 关键点 的 
方向 估计 关键点 描述 子 的 生成 区域 坐标 旋转 
计算 采样 区域 的 直方图 特点 具有 良好 的 不变性 
旋转 尺度 缩放 平移 亮度 变化 对 视角 变化 仿射变换/v 
和/c 噪声/n 也/d 有/v 一定/d 程度/n 的/uj 稳定性/n 独特/a 性好/i 
信息量 丰富 适用于 在 海量 特征 数据库 中 进行 快速 
准确 的 匹配 多 量性 即使 少数 物体 也 可以 
产生 大量 的 SIFT 特征 计算 快 经 优化 的 
SIFT 匹配 算法 甚至 可以 达到 实时性 可扩展性 可以 很 
方便 的 与 其他 形式 的 特征向量 进行 联合 尺度空间 
使用 不同 σ 的 LoG 对 图片 进行 滤波 使用 
LoG 则 后续 计算 量大 故 使用 DoG 来 代替 
LoG 用 差分 代替 微分 高斯 金字塔 就是 在 传统 
金字塔 的 基础 上 对 每 一层 用 不同 的 
参数 σ 做 高斯 模糊 是的 每 一层 金字塔 有 
多张 高斯 模糊 图像 这样 一组 图像 是 一个 octave 
SIFT 计算 高斯 差分 DoG 空间 SIFt DoG 空间 极值 
点 就是 关键点 圆/n 半径/n →/i 特征点/i 尺度/n 圆心/n →/i 
特征点/i 坐标/v 通/v 过拟合/i 三维/m 二次函数/i 来/v 精确/a 确定/v 关键点/n 
的/uj 位置/v 和/c 尺度/n 离散/v 空间/n 的/uj 极值/n 点/m 并/c 
不是/c 真正/d 的/uj 极值/n 点/m 上图 显示 了 二维 函数 
离散 空间 得到 的 极值 点 与 连续 空间 极值 
点 的 差别 利用 已知 的 离散 空间 点 插值 
得到 的 连续 空间 极值 点 的 方法 叫做 子 
像素 插值 同时/c 去除/v 低/a 对比度/l 的/uj 关键/n 点/m 和不/nr 
稳定/a 的/uj 边缘/n 相/v 应点/i 因为 DoG 算子 会 产生 
较强 的 边缘 响应 以 增强 匹配 稳定性 提 高抗 
噪声 能力 DoG 算子 会 产生 较强 的 边缘 响应 
需要 剔除 不 稳定 的 边缘 相 应点 获取 特征点 
处 的 Hessian 矩阵 主 曲率 通过 一个 2 × 
2 的 Hessian 矩阵 H 求出 SIFT 特征点 方向 估计 
在 尺度 上 计算 梯度 直方图 8 方向 以 特征点 
为中心 以 3 × 1.5 σ 为 半径 活 取 
最高值 方向 为 关键 点主 方向 为了 匹配 的 稳定性 
将 超过 最高 值 80% 的 方向 称 为辅 方向 
为了 保证 特征 矢量 具有 旋转 不变性 需要 以 特征点 
为中心 将 特征点 附 近邻 域内 的 图像 旋转 一个 
方向 角 θ 即将 原 图像 x 轴 转到 与 
主 方向 相同 的 方向 SIFT 计算/v 特征点/i 描述/v 子/ng 
在/p 旋转/v 后的/nr 坐标/v 上/f 采样/v 16/m ×/i 16/m 的/uj 
像素/n 窗/s 在/p 旋转/v 后的/nr 坐标/v 上/f 采样/v 16/m ×/i 
16/m 的/uj 像素/n 床/n 4/m ×/i 4/m 网格/n 8/m 方向/n 
直方图/n 总共/b 128/m 维/v SIFT/w 的/uj 缺点/n 是/v 计算 太 
复杂 如果 不 借助 硬件加速 或 专门 的 图像 处理器 
很难 实现 改进 方式 Haar like 特征 Haar like 特征 
分为 边缘 检测 线性 特征 中心 特征 和 对角线 特征 
这些/r 特征/n 组合成/l 特征/n 模板/n 特征/n 模板/n 有/v 白色/n 和/c 
黑色/n 两种/m 矩形/n 并 定义 该 模板 的 特征值 为 
白色 矩形 像素 和 减去 黑色 矩形 像素 和 Haar 
特征值 反映 了 图像 的 灰度 变化 情况 Haar like 
特征 的 快速 计算 积分 图 同一 个 像素 如果 
被 包含 在 不同 的 Haar like 的 特征 模板 
中 会被 重复 计算 多次 积分 图 是 根据 四个 
角 点 就能 计算 区域内 的 像素 之和 的 方法 
5 局部 特征 SURFSURF Speed Up Robust Features 算子 是 
Herbert Bay 等 人在 2006年 提出 的 它 是 对 
SIFT 的 改进 可将 速度 提高 三倍 SURF 只 要是 
把 SIFT 中的 某些 运算 做了 简化 SURF 把 SIFT 
中的 高斯 二阶 微分 的 模板 进行 了 简化 使得 
卷积 平滑 操作 仅 需要 转换成 加减 运算 在 方向 
确定 阶段 在 圆形 区域 计算 x y 方向 的 
haar 小波 响应 找到 模 最大 的 扇形 方向 为了 
找出 图像 中的 特征点 需要 对 原图 进行 变换 变换 
图 就是 原图 每个 像素 的 Hessian 矩阵 行列式 的 
近似值 构成 的 求 Hessian 时要先/nr 高斯 平滑 然后 求 
二阶 导数 这 对于 离散 的 像素 点 而言 是 
用 模板 卷积 形成 的 这两种 操 作合 在 一起 
用 一个 Haar 模板 代替 就 可以 了 小 造型 
为了 保证 旋转 不变性 在 SURF 中 统计 特征点 领域内 
的 Haar 小波 特征 即 以 特征点 为中心 计算 半径 
为 6s s 为特征 点 所在 的 尺度 值 的 
邻 域内 统计 60度 扇形 内 所有 点在 x 水平 
和y/nr 垂直 方向 的 Haar 小波 响应 总和 然后 60度 
扇形 以 一定 间隔 进行 旋转 最后 将 最大值 那个 
扇形 的 方向 作为 该 特征点 的 主 方向 在 
特征点 周围 取 一个 正 方形 框 框 的 边 
长为 20s 是 所 检测 到 该 特征点 所在 的 
尺度 该 框 的 方向 就是 检测 出来 的 主 
方向 最终 SURF 的 特征点 特征向量 的 维度 为 64 
维 然后 把 该 框 分为 16 个子 区域 每 
个子 区域 统计 25个 像素 的 水平 方向 和 垂直 
方向 的 Haar 小波 特征 这里/r 的/uj 水平/n 和/c 垂直/v 
方向/n 都是/nr 相对/d 主/b 方向/n 而言/c 的/uj 近似 SIFT 算法 
实现 快速 版 先 确定 后 选点 再找 最大值 Haar 
模板 加速 三倍 亮度 效果 下 效果 好 模糊 方面 
优于 SIFT 尺度 不 变上 不及 SIFT 旋转 不 变上 
差 很多 6 ORB 特征描述 SIFT 和 SURF 计算 复杂 
难以 用于 实时性 特征 检测 更何况 SIFT 与 SURF 以前 
还 是 收费 的 ORB 特征 基于 FAST 角 点 
的 特征点 检测 与 BRIEF 特征描述 技术 ORB 的 基本 
思路 它 是 对 FAST 角 点 与 BRIEF 特征描述 
子 的 一种 结合 与 改进 FAST 角 点 检测 
的 缺点 是 缺乏 尺度 不变性 可以 通告 构建 高斯 
金字塔 然后 在 每 一层 金字塔 图像 上 检测 角 
点 来 实现 尺度 不变性 BRIEF 的 缺点 是 缺乏 
旋转 不变性 需要 给 BRIEF 加上 旋转 不变性 7 BRIEFBRIEF 
需要 先 平滑 图片 然后 在 特征点 周围 选择 一个 
Patch 在 这个 Patch 内 通过 一种 选定 的 方法 
来 挑选 Nd 个 点 对 比较 点 对 中 
两点 像素 的 大小 进行 如下 赋值 所有 Nd 个 
点 对 都 进行 比较 之间 我们 就 生成 了 
一个 Nd 长 的 二进制 串 点 对 的 生成 
方式 共有 五种 1 X Y 都 服从 在 s 
/ 2 s / 2 范围内 的 均匀分布 且 相互 
独立 2 X Y 都 服从 均值 为 0 方差 
为 ² / 25d 的 高斯分布 且 相互 独立 即 
X 和Y/nr 都已 原点 为中心 进行 同 方差 的 高斯分布 
点 对 的 位置 一旦 随机 选定 就 不能 再 
更改 ORB 对 BRIEF 的 改进 ORB 在 计算 BRIEF 
描述 子时 建立 的 坐标系 是以 关键点 为 圆心 以 
关键点 和取点/nr 区域 的 形心 圆形 的 连线 为 X 
轴 建立 坐标系 计算 形心 时 圆形 区域 上 每个 
点 的 质量 是 其 对应 的 像素 值 四 
LBPLBP 局部 二 值 模式 将 每个 像素点 与 周围 
点 大小 比较 半径 为 R 的 圆 上 均匀 
采样 P 个 点 大小 量化 为 0 或 1 
多个 bit 组成 一个 数 统计 每 个数 的 直方图 
为 解决 旋转 不变性 的 问题 将 LBP 周围 的 
二进制码 如 11110001 按 位 旋转 取 二进制码 最小 的 
值 为 最终 LBP 值 如 对于 11110001 情况 我们 
按 位 旋转 得到 11100011 11000111 10001111 0001111 00111110 01111100 
11111000 七个 不同 的 二进制 数 最小值 为 00011111 . 
改进 的 LBP 将 3 × 3 邻域 扩展 到 
任意 邻域 并用 圆形 邻域 代替 了 正方向 邻域 这种 
LBP 特征 叫做 Extended LBP 也叫 Circular LBP LBP 特征 
具有 灰度 不变性 和 旋转 不变性 等 显著 优点 五 
GaborGabor 是 一个 用于 边缘 提取 的 线性 滤波器 其 
频率 和 方向 表达 与 人类 视觉 系统 类似 能够 
提供 良好 的 方向 选择 和 尺度 选择 特性 而且 
对于 光照 变化 不 敏感 十分 适合 纹理 分析 使用 
一个 三角函数 与 一个 高斯 函数 叠加 就 得到 了 
一个 Gabor 滤波器 Gabor 滤波器 组 Gabor 滤波器 组 类似于 
人类 的 视觉 系统 多 频率 / 尺度 多 方向 
Gabor 滤波器 频域 属于 加 窗 傅里叶 变换 空域 一个 
高斯 核 函数 和 正弦 平面波 的 乘积 三 尺度 
八 方向 六 代码 实现 1 Haaris Corner1 import numpy 
as np 2 import cv2 as cv 3 filename = 
picture / chessboard . png 4 img = cv . 
imread filename 5 gray = cv . cvtColor img cv 
. COLOR _ BGR2GRAY 6 gray = np . float32 
gray 7 dst = cv . cornerHarris gray 2 3 
0.04 8 # result is dilated for marking the corners 
not important 9 dst = cv . dilate dst None 
10 # Threshold for an optimal value it may vary 
depending on the image . 11 img dst 0.01 * 
dst . max = 0 0 255 12 cv . 
imshow dst img 13 if cv . waitKey 0 & 
0xff = = 27 14 cv . d e s 
t r o y A l l W i n 
d o w s 2 ORB1 import numpy as np 
2 import cv2 as cv 3 import matplotlib . pyplot 
as plt 4 img1 = cv . imread picture / 
box . png 0 # queryImage 5 img2 = cv 
. imread picture / box _ in _ scene . 
png 0 # trainImage 6 # Initiate ORB detector 7 
orb = cv . ORB _ create 8 # find 
the keypoints and descriptors with ORB 9 kp1 des1 = 
orb . detectAndCompute img1 None 10 kp2 des2 = orb 
. detectAndCompute img2 None 11 12 # create BFMatcher object 
13 bf = cv . BFMatcher cv . NORM _ 
HAMMING crossCheck = True 14 # Match descriptors . 15 
matches = bf . match des1 des2 16 # Sort 
them in the order of their distance . 17 matches 
= sorted matches key = lambda x x . distance 
18 # Draw first 10 matches . 19 img3 = 
cv . drawMatches img1 kp1 img2 kp2 matches 20 None 
flags = 2 20 plt . imshow img3 plt . 
show 3 图片 拼接 注意 原始 图片 不能 过大 否则 
报错 此处 500 * 375 1 from Stitcher import Stitcher 
2 import cv2 3 4 # 读取 拼接 图片 5 
imageA = cv2 . imread image / 3 . png 
6 imageB = cv2 . imread image / 4 . 
png 7 8 # 把 图片 拼接 成 全景图 9 
stitcher = Stitcher 10 result vis = stitcher . stitch 
imageA imageB showMatches = True 11 12 # 显示 所有 
图片 13 cv2 . imshow Image A imageA 14 cv2 
. imshow Image B imageB 15 cv2 . imshow Keypoint 
Matches vis 16 cv2 . imshow Result result 17 cv2 
. waitKey 0 18 cv2 . d e s t 
r o y A l l W i n d 
o w s 1 import numpy as np 2 import 
cv2 3 4 class Stitcher 5 6 # 拼接 函数 
7 def stitch self images ratio = 0.75 reprojThresh = 
4.0 showMatches = False 8 # 获取 输入 图片 9 
imageB imageA = images 10 # 检测 A B 图片 
的 SIFT 关键 特征点 并 计算 特征描述 子 11 kpsA 
featuresA = self . d e t e c t 
A n d D e s c r i b 
e imageA 12 kpsB featuresB = self . d e 
t e c t A n d D e s 
c r i b e imageB 13 14 # 匹配 
两张 图片 的 所有 特征点 返回 匹配 结果 15 M 
= self . matchKeypoints kpsA kpsB featuresA featuresB ratio reprojThresh 
16 17 # 如果 返回 结果 为 空 没有 匹配 
成功 的 特征点 退出 算法 18 if M is None 
19 return None 20 21 # 否则 提取 匹配 结果 
22 # H 是 3x3 视 角变换 矩阵 23 matches 
H status = M 24 # 将 图片 A 进行 
视 角变换 result 是 变换 后 图片 25 result = 
cv2 . warpPerspective imageA H imageA . shape 1 + 
imageB . shape 1 imageA . shape 0 26 # 
将 图片 B 传入 result 图片 最 左端 27 result 
0 imageB . shape 0 0 imageB . shape 1 
= imageB 28 29 # 检测 是否 需要 显示 图片 
匹配 30 if showMatches 31 # 生成 匹配 图片 32 
vis = self . drawMatches imageA imageB kpsA kpsB matches 
status 33 # 返回 结果 34 return result vis 35 
36 # 返回 匹配 结果 37 return result 38 39 
def d e t e c t A n d 
D e s c r i b e self image 
40 # 将 彩色图片 转换成 灰度 图 41 gray = 
cv2 . cvtColor image cv2 . COLOR _ BGR2GRAY 42 
43 # 建立 SIFT 生成器 44 descriptor = cv2 . 
xfeatures2d . SIFT _ create 45 # 检测 SIFT 特征点 
并 计算 描述 子 46 kps features = descriptor . 
detectAndCompute image None 47 48 # 将 结果 转换成 NumPy 
数组 49 kps = np . float32 kp . pt 
for kp in kps 50 51 # 返回 特征点 集 
及 对应 的 描述 特征 52 return kps features 53 
54 def matchKeypoints self kpsA kpsB featuresA featuresB ratio reprojThresh 
55 # 建立 暴力 匹 配器 56 matcher = cv2 
. D e s c r i p t o 
r M a t c h e r _ create 
BruteForce 57 58 # 使用 KNN 检测 来自 A B 
图 的 SIFT 特征 匹 配对 K = 2 59 
rawMatches = matcher . knnMatch featuresA featuresB 2 60 61 
matches = 62 for m in rawMatches 63 # 当 
最近 距离 跟 次 近距离 的 比值 小于 ratio 值 
时 保留 此 匹 配对 64 if len m = 
= 2 and m 0 . distance m 1 . 
distance * ratio 65 # 存储 两个 点在 featuresA featuresB 
中的 索引 值 66 matches . append m 0 . 
trainIdx m 0 . queryIdx 67 68 # 当 筛选 
后的/nr 匹配 对 大于 4时 计算 视 角变换 矩阵 69 
if len matches 4 70 # 获取 匹 配对 的 
点 坐标 71 ptsA = np . float32 kpsA i 
for _ i in matches 72 ptsB = np . 
float32 kpsB i for i _ in matches 73 74 
# 计算 视 角变换 矩阵 75 H status = cv2 
. findHomography ptsA ptsB cv2 . RANSAC reprojThresh 76 77 
# 返回 结果 78 return matches H status 79 80 
# 如果 匹 配对 小于 4时 返回 None 81 return 
None 82 83 def drawMatches self imageA imageB kpsA kpsB 
matches status 84 # 初始化 可视化 图片 将 A B 
图 左右 连接 到 一起 85 hA wA = imageA 
. shape 2 86 hB wB = imageB . shape 
2 87 vis = np . zeros max hA hB 
wA + wB 3 dtype = uint8 88 vis 0 
hA 0 wA = imageA 89 vis 0 hB wA 
= imageB 90 91 # 联合 遍历 画出 匹 配对 
92 for trainIdx queryIdx s in zip matches status 93 
# 当 点 对 匹配 成功 时 画到 可视化 图上 
94 if s = = 1 95 # 画出 匹 
配对 96 ptA = int kpsA queryIdx 0 int kpsA 
queryIdx 1 97 ptB = int kpsB trainIdx 0 + 
wA int kpsB trainIdx 1 98 cv2 . line vis 
ptA ptB 0 255 0 1 99 100 # 返回 
可视化 结果 101 return vis 