使用 OpenCV3 处理 图像 下面 要 介绍 的 内容 都与/nr 
图像 处理 有关 这时 需要 修改 图像 比如 要 使用 
具有 艺术性 的 滤镜 外 插 extrapolate 某些 部分 分割 
粘贴 或 其他 需要 的 操作 不同 色彩 空间 的 
转换 OpenCV 中有 数百种 关于 在 不同 色彩 空间 之间 
转换 的 方法 当前 在 计算机 视觉 中 有三种 常用 
的 色彩 空间 灰度 BGR 以及 HSV Hue Saturation Value 
1 . 灰度 色彩 空间 是 通过 去除 彩色 信息 
来 将其 转换成 灰阶 灰度 色彩 空间 对 中间 处理 
特别 有效 比如 人脸 检测 2 . BGR 即 蓝 
绿 红 色彩 空间 每 一个 像素点 都由 一个 三元 
数组 来 表示 分别 代表 蓝 绿 红三/nr 种颜色 网页 
开发 者 可能 熟悉 另 一个 与 之 相似 的 
颜色 空间 RGB 它们 只是 在 颜色 的 顺序 上 
不同 3 . HSV H Hue 是 色调 S Saturation 
是 饱和度 V Value 表示 黑暗 的 程度 或 光谱 
另一端 的 明亮 程度 傅里叶 变换 在 OpenCV 中 对/p 
图像/n 和/c 视频/n 的/uj 大多数/m 处理/v 都/d 或多或少/d 会/v 涉及/v 
傅里叶/nr 变换/v 的/uj 概念/n 傅里叶 观察 到 所有 的 波形 
都 可以 由 一系列 简单 且 频率 不同 的 正弦曲线 
叠加 得到 也 就是说 人们 所 看到 的 波形 都是 
由 其他 波形 叠加 得到 的 这个 概念 也 对 
操作 图像 非常 有 帮助 因为 这样 我们 可以 区分 
图像 里 哪些 区域 的 信号 比如 图像 像素 变化 
特别 强 哪些 区域 的 信号 变化 不 那么 强 
从而 可以 任意 地 标记 噪声 区域 感兴趣 区域 前景 
和 背景 等 原始 图像 由 许多 频率 组成 人们 
能够 分离 这些 频率 来 理解 图像 和 提取 感兴 
趣地 数据 注意 在 OpenCV 环境 中 有 许多 实现 
了 的 算法 让 我们 能够 处理 图像 理解 图像 
中 所 包含 的 意义 这些 算法 在 Numpy 中 
也有 实现 而且 更 容易 使用 Numpy 中有 快速 傅里叶 
变换 FFT 包 它 包含 了 fft2 函数 该 函数 
可以 计算 一幅 图像 的 离散 傅里叶 变换 DFT 下面 
通过 傅里叶 变换 来 介绍 图像 的 幅度 谱 图像 
的 幅度 谱 是 另一种 图像 幅度 谱 图像 呈现 
了 原始 图像 在 变化 方面 的 一种 表示 把 
一幅 图像 中 最 明亮 的 像素 放在 图像 中央 
然后 逐渐 变暗 在 边缘 上 的 像素 最暗 这样/r 
可以/c 发现/v 图像/n 中/f 有/v 多少/m 亮/v 的/uj 像素/n 和暗的/nr 
像素/n 以及 它们 分布 的 百分比 傅里叶 变换 的 概念 
是 许多 常见 的 图像 处理 操作 的 基础 比如 
边缘 检测 或 线段 和 形状 检测 1 . 高通 
滤波器 高通 滤波器 HPF 是 检测 图像 的 某个 区域 
然后 根据 像素 与 周围 像素 的 亮度 差值 来 
提升 boost 该 像素 的 亮度 的 滤波器 核 是 
指 一组 权重 的 集合 他 会 应用在 源 图像 
的 一个 区域 并 由此 生成 目标 图像 的 一个 
像素 比如 大小 为 7 的 核 意味着 每 49 
7 × 7 个 源 图像 的 像素 会 产生 
目标 图像 的 一个 像素 可把 核 看作 一块 覆盖 
在 源 图像 上 可移动 的 毛 玻璃片 玻璃片 覆盖 
区域 的 光线 会 按 某种 方式 进行 扩散 混合 
后 透过去 在 计算 完 中央 像素 与 周围 近邻 
像素 的 亮度 差值 之和 以后 如果 亮度 变化 很大 
中央 像素 的 亮度 会 增加 反之 则 不会 换句话说 
如果 一个 像素 比 它 周围 的 像素 更 突出 
就会 提升 它 的 亮度 这在 边缘 检测 上 尤其 
有效 它 会 采用 一种 称为 高频 提升 滤波器 的 
高通 滤波器 高通/nr 和/c 低通滤波器/n 都有/nr 一个/m 称为/v 半径/n 的/uj 
属性/n 它 决定 了 多 大面积 的 邻近 像素 参与 
滤波 运算 2 . 低通滤波器 低通滤波器 LPF 则是 在 像素 
与 周围 像素 的 亮度 差值 小于 一个 特定 值 
时 平滑 该 像素 的 亮度 它 主要 用于 去 
噪 和 模糊 化 比如说 高斯 模糊 是 最 常用 
的 模糊 滤波器 平滑 滤波器 之一 它 是 一个 削弱 
高频信号 强度 的 低通滤波器 边缘 检测 边缘 在 人类 视觉 
和 计算机 视觉 中 均 起着 重要 的 作用 人类 
能够 仅凭 一张 背景 剪影 或 一个 草图 就 识别 
出 物体 的 类型 和 姿态 OpenCV 提供 了 许多 
边缘 检测 滤波器 包括 Laplacian Sobel 以及 Scharr 这些 滤 
波函数 都会 将 非 边缘 区域 转为 黑色 将 边缘 
区域 转为 白色 或 其他 饱和 的 颜色 但是 这些 
函数 都 很容易 将 噪声 错误 地 识别 为 边缘 
缓解 这个 问题 的 方法 是 在 找到 边缘 之前 
对 图像 进行 模糊 处理 OpenCV 也 提供 了 许多 
模糊 滤 波函数 包括 blur 简单 的 算术 平均 medianBlur 
以及 GaussianBlur 边缘/n 检测/vn 滤/zg 波函数/l 和/c 模糊/a 滤波/n 函数/n 
的/uj 参数/n 有/v 很多/m 但 总会 有 一个 ksize 参数 
它 是 一个 奇数 表示 滤波 核 的 宽和 高 
这里 使用 medianBlur 作为 模糊 函数 它 对 去除 数字化 
的 视频 噪声 非常 有效 特别 是 去除 彩色图像 的 
噪声 使用 Laplacian 作为 边缘 检测 函数 他 会 产生 
明显 的 边缘 线条 灰度 图像 更是如此 在 使用 medianBlur 
函数 之后 将要 使用 Laplacian 函数 之前 需要 将 图像 
从 BGR 色彩 空间 转为 灰度 色彩 空间 用 定制 
内核 做 卷积 OpenCV 预定义 的 许多 滤波器 滤 波函数 
都会 使用 核 其实 核 是 一组 权重 它 决定 
如何 通过 邻近 像素点 来 计算 新的 像素点 核 也 
称为 卷积 矩阵 它 对 一个 区域 的 像素 做 
调和 mix up 或 卷积 运算 通常 基于 核 的 
滤波器 滤 波函数 也 被 称为 卷积 滤波器 滤 波函数 
OpenCV 提供 了 一个 非常 通用 的 filter2D 函数 它 
运用 由 用户 指定 的 任意 核 或 卷积 矩阵 
为了 理解 这个 函数 的 使用 方法 首先 来 了解 
卷积 矩阵 的 格式 卷积 矩阵 是 一个 二维 数组 
有奇/nr 数行 奇 数列 中心 的 元素 对 应于 感兴趣 
的 像素 其他 的 元素 对应 于 这个 像素 周围 
的 邻近 像素 每个 元素 都 有一个 整数 或 浮点数 
的 值 这些 值 就是 应用在 像素 值 上 的 
权重 cv2 . filter2D src 1 kernel dst 第二个 参数 
指定 了 目标 图像 每个 通道 的 位 深度 比如 
位 深度 cv2 . CV _ 8U 表示 每个 通道 
为 8位 如果 为 负值 则/d 表示/v 目标/n 图像/n 和源/nr 
图像/n 有/v 同样/d 的/uj 位/q 深度/ns 注意 对 彩色图像 来说 
filter2D 会对 每个 通道 都用/nr 同样 的 核 如果 要 
对 每个 通道 使用 不同 的 核 就 必须 用 
split 函数 和 merge 函数 锐化 边缘 检测 以及 模糊 
等 滤波器 都 使用 了 高度 对称 的 核 但是 
有时 不 对称 的 核 也会 得到 一些 有趣 的 
效果 Canny 边缘 检测 OpenCV 还 提供 了 一个 非常 
方便 的 Canny 函数 该 算法 非常 流行 不仅 是 
因为 它 的 效果 还 因为 在 OpenCV 程序 中 
实现 时 非常 简单 import cv2 import numpy as np 
img = cv2 . imread 1 . jpg 0 cv2 
. imwrite canny . jpg cv2 . Canny img 200 
300 cv2 . imshow canny cv2 . imread canny . 
jpg cv2 . waitKey cv2 . d e s t 
r o y A l l W i n d 
o w s Canny 边缘 检测 算法 非常复杂 但也 很 
有趣 它 有 5个 步骤 即使 用 高斯 滤波器 对 
图像 进行 去 噪 计算 梯度 在 边缘 上 使用 
非 最大 抑制 NMS 在 检测 到 的 边缘 上 
使用 双 阈值 去除 假 阳性 最后 还 会 分析 
所有 的 边缘 及其 之间 的 连接 以 保留 真正 
的 边缘 并 消除 不 明显 的 边缘 轮廓 检测 
在 计算机 视觉 中 轮廓 检测 是 另一个 比较 重要 
的 任务 不单 是 用来 检测 图像 或者 视频 帧 
中 物体 的 轮廓 而且 还有 其他 操作 与 轮廓 
检测 有关 这些 操作 有 计算 多边形 边界 形状 逼近 
核 计算 感兴趣 区域 这是 与 图像 数据 交互 时的/nr 
简单 操作 因为 Numpy 中的 矩形 区域 可以 使用 数组 
切片 slice 来 定义 在 介绍 物体 检测 包括 人脸 
和/c 物体/n 跟踪/v 的/uj 概念/n 时会/nr 大量/n 使用/v 这种/r 技术/n 
边界 框 最小 矩形 区域 和 最小 闭 圆 的 
轮廓 找到 一个 正方形 轮廓 很简单 要 找到 不规则 歪斜 
的 以及 旋转 的 形状 可用 OpenCV 的 cv2 . 
findContours 函数 它 能 得到 最好 的 结果 现实 的 
应用 会 对 目标 的 边界 框 最小 矩形 面积 
最小 闭 圆 特别 感兴趣 将 cv2 . findContours 函数 
与 少量 的 OpenCV 的 功能 相 结合 就能 非常 
容易 地 实现 这些 功能 import cv2 import numpy as 
np img = cv2 . pyrDown cv2 . imread 1 
. jpg cv2 . IMREAD _ UNCHANGED ret thresh = 
cv2 . threshold cv2 . cvtColor img . copy cv2 
. COLOR _ BGR2GRAY 127 255 cv2 . THRESH _ 
BINARY img contours hier = cv2 . findContours thresh cv2 
. RETR _ EXTERNAL cv2 . CHAIN _ APPROX _ 
SIMPLE for c in contours x y w h = 
cv2 . boundingRect c # 计算 出 一个 简单 地 
边界 框 # 这个 操作 很简单 它 将 轮廓 信息 
转换成 x y 坐标 并 加上 矩形 地 高度 和 
宽度 cv2 . rectangle img x y x + w 
y + h 0 255 0 2 # 画出 该 
矩形 rect = cv2 . minAreaRect c # 计算出 包围 
目标 地 最小 矩形 区域 box = cv2 . boxPoints 
rect box = np . int0 box # 这里 用 
到 一种 非常 有趣 的 机制 Opencv/w 没有/v 函数/n 能/v 
直接/ad 从/p 轮廓/n 信息/n 中/f 计算出/i 最小/a 矩形/n 顶点/n 的/uj 
坐标/v 所以 需要 计算出 最小 矩形 区域 然后 计算 这个 
矩形 的 顶点 注意 计算 出来 的 顶点 坐标 是 
浮点 型 但是 所得 像素 的 坐标值 是 整数 不能 
获取 像素 的 一部分 所以 需要 做 一个 转换 然后 
画出 这个 矩形 可由 cv2 . drawContours 函数 来 实现 
cv2 . drawContours img box 0 0 0 255 3 
x y radius = cv2 . m i n E 
n c l o s i n g C i 
r c l e c # 返回 一个 二 元组 
第一 个 元素 为 圆心 的 坐标 组成 的 元祖 
第二 个 元素 为 圆 的 半径 值 center = 
int x int y radius = int radius img = 
cv2 . circle img center radius 0 255 0 2 
cv2 . drawContours img contours 1 255 0 0 1 
cv2 . imshow contours img cv2 . waitKey cv2 . 
d e s t r o y A l l 
W i n d o w s 使用 OpenCV3 处理 图像 下面 要 介绍 的 内容 都与/nr 
图像 处理 有关 这时 需要 修改 图像 比如 要 使用 
具有 艺术性 的 滤镜 外 插 extrapolate 某些 部分 分割 
粘贴 或 其他 需要 的 操作 不同 色彩 空间 的 
转换 OpenCV 中有 数百种 关于 在 不同 色彩 空间 之间 
转换 的 方法 当前 在 计算机 视觉 中 有三种 常用 
的 色彩 空间 灰度 BGR 以及 HSV Hue Saturation Value 
1 . 灰度 色彩 空间 是 通过 去除 彩色 信息 
来 将其 转换成 灰阶 灰度 色彩 空间 对 中间 处理 
特别 有效 比如 人脸 检测 2 . BGR 即 蓝 
绿 红 色彩 空间 每 一个 像素点 都由 一个 三元 
数组 来 表示 分别 代表 蓝 绿 红三/nr 种颜色 网页 
开发 者 可能 熟悉 另 一个 与 之 相似 的 
颜色 空间 RGB 它们 只是 在 颜色 的 顺序 上 
不同 3 . HSV H Hue 是 色调 S Saturation 
是 饱和度 V Value 表示 黑暗 的 程度 或 光谱 
另一端 的 明亮 程度 傅里叶 变换 在 OpenCV 中 对/p 
图像/n 和/c 视频/n 的/uj 大多数/m 处理/v 都/d 或多或少/d 会/v 涉及/v 
傅里叶/nr 变换/v 的/uj 概念/n 傅里叶 观察 到 所有 的 波形 
都 可以 由 一系列 简单 且 频率 不同 的 正弦曲线 
叠加 得到 也 就是说 人们 所 看到 的 波形 都是 
由 其他 波形 叠加 得到 的 这个 概念 也 对 
操作 图像 非常 有 帮助 因为 这样 我们 可以 区分 
图像 里 哪些 区域 的 信号 比如 图像 像素 变化 
特别 强 哪些 区域 的 信号 变化 不 那么 强 
从而 可以 任意 地 标记 噪声 区域 感兴趣 区域 前景 
和 背景 等 原始 图像 由 许多 频率 组成 人们 
能够 分离 这些 频率 来 理解 图像 和 提取 感兴 
趣地 数据 注意 在 OpenCV 环境 中 有 许多 实现 
了 的 算法 让 我们 能够 处理 图像 理解 图像 
中 所 包含 的 意义 这些 算法 在 Numpy 中 
也有 实现 而且 更 容易 使用 Numpy 中有 快速 傅里叶 
变换 FFT 包 它 包含 了 fft2 函数 该 函数 
可以 计算 一幅 图像 的 离散 傅里叶 变换 DFT 下面 
通过 傅里叶 变换 来 介绍 图像 的 幅度 谱 图像 
的 幅度 谱 是 另一种 图像 幅度 谱 图像 呈现 
了 原始 图像 在 变化 方面 的 一种 表示 把 
一幅 图像 中 最 明亮 的 像素 放在 图像 中央 
然后 逐渐 变暗 在 边缘 上 的 像素 最暗 这样/r 
可以/c 发现/v 图像/n 中/f 有/v 多少/m 亮/v 的/uj 像素/n 和暗的/nr 
像素/n 以及 它们 分布 的 百分比 傅里叶 变换 的 概念 
是 许多 常见 的 图像 处理 操作 的 基础 比如 
边缘 检测 或 线段 和 形状 检测 1 . 高通 
滤波器 高通 滤波器 HPF 是 检测 图像 的 某个 区域 
然后 根据 像素 与 周围 像素 的 亮度 差值 来 
提升 boost 该 像素 的 亮度 的 滤波器 核 是 
指 一组 权重 的 集合 他 会 应用在 源 图像 
的 一个 区域 并 由此 生成 目标 图像 的 一个 
像素 比如 大小 为 7 的 核 意味着 每 49 
7 × 7 个 源 图像 的 像素 会 产生 
目标 图像 的 一个 像素 可把 核 看作 一块 覆盖 
在 源 图像 上 可移动 的 毛 玻璃片 玻璃片 覆盖 
区域 的 光线 会 按 某种 方式 进行 扩散 混合 
后 透过去 在 计算 完 中央 像素 与 周围 近邻 
像素 的 亮度 差值 之和 以后 如果 亮度 变化 很大 
中央 像素 的 亮度 会 增加 反之 则 不会 换句话说 
如果 一个 像素 比 它 周围 的 像素 更 突出 
就会 提升 它 的 亮度 这在 边缘 检测 上 尤其 
有效 它 会 采用 一种 称为 高频 提升 滤波器 的 
高通 滤波器 高通/nr 和/c 低通滤波器/n 都有/nr 一个/m 称为/v 半径/n 的/uj 
属性/n 它 决定 了 多 大面积 的 邻近 像素 参与 
滤波 运算 2 . 低通滤波器 低通滤波器 LPF 则是 在 像素 
与 周围 像素 的 亮度 差值 小于 一个 特定 值 
时 平滑 该 像素 的 亮度 它 主要 用于 去 
噪 和 模糊 化 比如说 高斯 模糊 是 最 常用 
的 模糊 滤波器 平滑 滤波器 之一 它 是 一个 削弱 
高频信号 强度 的 低通滤波器 边缘 检测 边缘 在 人类 视觉 
和 计算机 视觉 中 均 起着 重要 的 作用 人类 
能够 仅凭 一张 背景 剪影 或 一个 草图 就 识别 
出 物体 的 类型 和 姿态 OpenCV 提供 了 许多 
边缘 检测 滤波器 包括 Laplacian Sobel 以及 Scharr 这些 滤 
波函数 都会 将 非 边缘 区域 转为 黑色 将 边缘 
区域 转为 白色 或 其他 饱和 的 颜色 但是 这些 
函数 都 很容易 将 噪声 错误 地 识别 为 边缘 
缓解 这个 问题 的 方法 是 在 找到 边缘 之前 
对 图像 进行 模糊 处理 OpenCV 也 提供 了 许多 
模糊 滤 波函数 包括 blur 简单 的 算术 平均 medianBlur 
以及 GaussianBlur 边缘/n 检测/vn 滤/zg 波函数/l 和/c 模糊/a 滤波/n 函数/n 
的/uj 参数/n 有/v 很多/m 但 总会 有 一个 ksize 参数 
它 是 一个 奇数 表示 滤波 核 的 宽和 高 
这里 使用 medianBlur 作为 模糊 函数 它 对 去除 数字化 
的 视频 噪声 非常 有效 特别 是 去除 彩色图像 的 
噪声 使用 Laplacian 作为 边缘 检测 函数 他 会 产生 
明显 的 边缘 线条 灰度 图像 更是如此 在 使用 medianBlur 
函数 之后 将要 使用 Laplacian 函数 之前 需要 将 图像 
从 BGR 色彩 空间 转为 灰度 色彩 空间 用 定制 
内核 做 卷积 OpenCV 预定义 的 许多 滤波器 滤 波函数 
都会 使用 核 其实 核 是 一组 权重 它 决定 
如何 通过 邻近 像素点 来 计算 新的 像素点 核 也 
称为 卷积 矩阵 它 对 一个 区域 的 像素 做 
调和 mix up 或 卷积 运算 通常 基于 核 的 
滤波器 滤 波函数 也 被 称为 卷积 滤波器 滤 波函数 
OpenCV 提供 了 一个 非常 通用 的 filter2D 函数 它 
运用 由 用户 指定 的 任意 核 或 卷积 矩阵 
为了 理解 这个 函数 的 使用 方法 首先 来 了解 
卷积 矩阵 的 格式 卷积 矩阵 是 一个 二维 数组 
有奇/nr 数行 奇 数列 中心 的 元素 对 应于 感兴趣 
的 像素 其他 的 元素 对应 于 这个 像素 周围 
的 邻近 像素 每个 元素 都 有一个 整数 或 浮点数 
的 值 这些 值 就是 应用在 像素 值 上 的 
权重 cv2 . filter2D src 1 kernel dst 第二个 参数 
指定 了 目标 图像 每个 通道 的 位 深度 比如 
位 深度 cv2 . CV _ 8U 表示 每个 通道 
为 8位 如果 为 负值 则/d 表示/v 目标/n 图像/n 和源/nr 
图像/n 有/v 同样/d 的/uj 位/q 深度/ns 注意 对 彩色图像 来说 
filter2D 会对 每个 通道 都用/nr 同样 的 核 如果 要 
对 每个 通道 使用 不同 的 核 就 必须 用 
split 函数 和 merge 函数 锐化 边缘 检测 以及 模糊 
等 滤波器 都 使用 了 高度 对称 的 核 但是 
有时 不 对称 的 核 也会 得到 一些 有趣 的 
效果 Canny 边缘 检测 OpenCV 还 提供 了 一个 非常 
方便 的 Canny 函数 该 算法 非常 流行 不仅 是 
因为 它 的 效果 还 因为 在 OpenCV 程序 中 
实现 时 非常 简单 import cv2 import numpy as np 
img = cv2 . imread 1 . jpg 0 cv2 
. imwrite canny . jpg cv2 . Canny img 200 
300 cv2 . imshow canny cv2 . imread canny . 
jpg cv2 . waitKey cv2 . d e s t 
r o y A l l W i n d 
o w s Canny 边缘 检测 算法 非常复杂 但也 很 
有趣 它 有 5个 步骤 即使 用 高斯 滤波器 对 
图像 进行 去 噪 计算 梯度 在 边缘 上 使用 
非 最大 抑制 NMS 在 检测 到 的 边缘 上 
使用 双 阈值 去除 假 阳性 最后 还 会 分析 
所有 的 边缘 及其 之间 的 连接 以 保留 真正 
的 边缘 并 消除 不 明显 的 边缘 轮廓 检测 
在 计算机 视觉 中 轮廓 检测 是 另一个 比较 重要 
的 任务 不单 是 用来 检测 图像 或者 视频 帧 
中 物体 的 轮廓 而且 还有 其他 操作 与 轮廓 
检测 有关 这些 操作 有 计算 多边形 边界 形状 逼近 
核 计算 感兴趣 区域 这是 与 图像 数据 交互 时的/nr 
简单 操作 因为 Numpy 中的 矩形 区域 可以 使用 数组 
切片 slice 来 定义 在 介绍 物体 检测 包括 人脸 
和/c 物体/n 跟踪/v 的/uj 概念/n 时会/nr 大量/n 使用/v 这种/r 技术/n 
边界 框 最小 矩形 区域 和 最小 闭 圆 的 
轮廓 找到 一个 正方形 轮廓 很简单 要 找到 不规则 歪斜 
的 以及 旋转 的 形状 可用 OpenCV 的 cv2 . 
findContours 函数 它 能 得到 最好 的 结果 现实 的 
应用 会 对 目标 的 边界 框 最小 矩形 面积 
最小 闭 圆 特别 感兴趣 将 cv2 . findContours 函数 
与 少量 的 OpenCV 的 功能 相 结合 就能 非常 
容易 地 实现 这些 功能 import cv2 import numpy as 
np img = cv2 . pyrDown cv2 . imread 1 
. jpg cv2 . IMREAD _ UNCHANGED ret thresh = 
cv2 . threshold cv2 . cvtColor img . copy cv2 
. COLOR _ BGR2GRAY 127 255 cv2 . THRESH _ 
BINARY img contours hier = cv2 . findContours thresh cv2 
. RETR _ EXTERNAL cv2 . CHAIN _ APPROX _ 
SIMPLE for c in contours x y w h = 
cv2 . boundingRect c # 计算 出 一个 简单 地 
边界 框 # 这个 操作 很简单 它 将 轮廓 信息 
转换成 x y 坐标 并 加上 矩形 地 高度 和 
宽度 cv2 . rectangle img x y x + w 
y + h 0 255 0 2 # 画出 该 
矩形 rect = cv2 . minAreaRect c # 计算出 包围 
目标 地 最小 矩形 区域 box = cv2 . boxPoints 
rect box = np . int0 box # 这里 用 
到 一种 非常 有趣 的 机制 Opencv/w 没有/v 函数/n 能/v 
直接/ad 从/p 轮廓/n 信息/n 中/f 计算出/i 最小/a 矩形/n 顶点/n 的/uj 
坐标/v 所以 需要 计算出 最小 矩形 区域 然后 计算 这个 
矩形 的 顶点 注意 计算 出来 的 顶点 坐标 是 
浮点 型 但是 所得 像素 的 坐标值 是 整数 不能 
获取 像素 的 一部分 所以 需要 做 一个 转换 然后 
画出 这个 矩形 可由 cv2 . drawContours 函数 来 实现 
cv2 . drawContours img box 0 0 0 255 3 
x y radius = cv2 . m i n E 
n c l o s i n g C i 
r c l e c # 返回 一个 二 元组 
第一 个 元素 为 圆心 的 坐标 组成 的 元祖 
第二 个 元素 为 圆 的 半径 值 center = 
int x int y radius = int radius img = 
cv2 . circle img center radius 0 255 0 2 
cv2 . drawContours img contours 1 255 0 0 1 
cv2 . imshow contours img cv2 . waitKey cv2 . 
d e s t r o y A l l 
W i n d o w s 使用 OpenCV3 处理 图像 下面 要 介绍 的 内容 都与/nr 
图像 处理 有关 这时 需要 修改 图像 比如 要 使用 
具有 艺术性 的 滤镜 外 插 extrapolate 某些 部分 分割 
粘贴 或 其他 需要 的 操作 不同 色彩 空间 的 
转换 OpenCV 中有 数百种 关于 在 不同 色彩 空间 之间 
转换 的 方法 当前 在 计算机 视觉 中 有三种 常用 
的 色彩 空间 灰度 BGR 以及 HSV Hue Saturation Value 
1 . 灰度 色彩 空间 是 通过 去除 彩色 信息 
来 将其 转换成 灰阶 灰度 色彩 空间 对 中间 处理 
特别 有效 比如 人脸 检测 2 . BGR 即 蓝 
绿 红 色彩 空间 每 一个 像素点 都由 一个 三元 
数组 来 表示 分别 代表 蓝 绿 红三/nr 种颜色 网页 
开发 者 可能 熟悉 另 一个 与 之 相似 的 
颜色 空间 RGB 它们 只是 在 颜色 的 顺序 上 
不同 3 . HSV H Hue 是 色调 S Saturation 
是 饱和度 V Value 表示 黑暗 的 程度 或 光谱 
另一端 的 明亮 程度 傅里叶 变换 在 OpenCV 中 对/p 
图像/n 和/c 视频/n 的/uj 大多数/m 处理/v 都/d 或多或少/d 会/v 涉及/v 
傅里叶/nr 变换/v 的/uj 概念/n 傅里叶 观察 到 所有 的 波形 
都 可以 由 一系列 简单 且 频率 不同 的 正弦曲线 
叠加 得到 也 就是说 人们 所 看到 的 波形 都是 
由 其他 波形 叠加 得到 的 这个 概念 也 对 
操作 图像 非常 有 帮助 因为 这样 我们 可以 区分 
图像 里 哪些 区域 的 信号 比如 图像 像素 变化 
特别 强 哪些 区域 的 信号 变化 不 那么 强 
从而 可以 任意 地 标记 噪声 区域 感兴趣 区域 前景 
和 背景 等 原始 图像 由 许多 频率 组成 人们 
能够 分离 这些 频率 来 理解 图像 和 提取 感兴 
趣地 数据 注意 在 OpenCV 环境 中 有 许多 实现 
了 的 算法 让 我们 能够 处理 图像 理解 图像 
中 所 包含 的 意义 这些 算法 在 Numpy 中 
也有 实现 而且 更 容易 使用 Numpy 中有 快速 傅里叶 
变换 FFT 包 它 包含 了 fft2 函数 该 函数 
可以 计算 一幅 图像 的 离散 傅里叶 变换 DFT 下面 
通过 傅里叶 变换 来 介绍 图像 的 幅度 谱 图像 
的 幅度 谱 是 另一种 图像 幅度 谱 图像 呈现 
了 原始 图像 在 变化 方面 的 一种 表示 把 
一幅 图像 中 最 明亮 的 像素 放在 图像 中央 
然后 逐渐 变暗 在 边缘 上 的 像素 最暗 这样/r 
可以/c 发现/v 图像/n 中/f 有/v 多少/m 亮/v 的/uj 像素/n 和暗的/nr 
像素/n 以及 它们 分布 的 百分比 傅里叶 变换 的 概念 
是 许多 常见 的 图像 处理 操作 的 基础 比如 
边缘 检测 或 线段 和 形状 检测 1 . 高通 
滤波器 高通 滤波器 HPF 是 检测 图像 的 某个 区域 
然后 根据 像素 与 周围 像素 的 亮度 差值 来 
提升 boost 该 像素 的 亮度 的 滤波器 核 是 
指 一组 权重 的 集合 他 会 应用在 源 图像 
的 一个 区域 并 由此 生成 目标 图像 的 一个 
像素 比如 大小 为 7 的 核 意味着 每 49 
7 × 7 个 源 图像 的 像素 会 产生 
目标 图像 的 一个 像素 可把 核 看作 一块 覆盖 
在 源 图像 上 可移动 的 毛 玻璃片 玻璃片 覆盖 
区域 的 光线 会 按 某种 方式 进行 扩散 混合 
后 透过去 在 计算 完 中央 像素 与 周围 近邻 
像素 的 亮度 差值 之和 以后 如果 亮度 变化 很大 
中央 像素 的 亮度 会 增加 反之 则 不会 换句话说 
如果 一个 像素 比 它 周围 的 像素 更 突出 
就会 提升 它 的 亮度 这在 边缘 检测 上 尤其 
有效 它 会 采用 一种 称为 高频 提升 滤波器 的 
高通 滤波器 高通/nr 和/c 低通滤波器/n 都有/nr 一个/m 称为/v 半径/n 的/uj 
属性/n 它 决定 了 多 大面积 的 邻近 像素 参与 
滤波 运算 2 . 低通滤波器 低通滤波器 LPF 则是 在 像素 
与 周围 像素 的 亮度 差值 小于 一个 特定 值 
时 平滑 该 像素 的 亮度 它 主要 用于 去 
噪 和 模糊 化 比如说 高斯 模糊 是 最 常用 
的 模糊 滤波器 平滑 滤波器 之一 它 是 一个 削弱 
高频信号 强度 的 低通滤波器 边缘 检测 边缘 在 人类 视觉 
和 计算机 视觉 中 均 起着 重要 的 作用 人类 
能够 仅凭 一张 背景 剪影 或 一个 草图 就 识别 
出 物体 的 类型 和 姿态 OpenCV 提供 了 许多 
边缘 检测 滤波器 包括 Laplacian Sobel 以及 Scharr 这些 滤 
波函数 都会 将 非 边缘 区域 转为 黑色 将 边缘 
区域 转为 白色 或 其他 饱和 的 颜色 但是 这些 
函数 都 很容易 将 噪声 错误 地 识别 为 边缘 
缓解 这个 问题 的 方法 是 在 找到 边缘 之前 
对 图像 进行 模糊 处理 OpenCV 也 提供 了 许多 
模糊 滤 波函数 包括 blur 简单 的 算术 平均 medianBlur 
以及 GaussianBlur 边缘/n 检测/vn 滤/zg 波函数/l 和/c 模糊/a 滤波/n 函数/n 
的/uj 参数/n 有/v 很多/m 但 总会 有 一个 ksize 参数 
它 是 一个 奇数 表示 滤波 核 的 宽和 高 
这里 使用 medianBlur 作为 模糊 函数 它 对 去除 数字化 
的 视频 噪声 非常 有效 特别 是 去除 彩色图像 的 
噪声 使用 Laplacian 作为 边缘 检测 函数 他 会 产生 
明显 的 边缘 线条 灰度 图像 更是如此 在 使用 medianBlur 
函数 之后 将要 使用 Laplacian 函数 之前 需要 将 图像 
从 BGR 色彩 空间 转为 灰度 色彩 空间 用 定制 
内核 做 卷积 OpenCV 预定义 的 许多 滤波器 滤 波函数 
都会 使用 核 其实 核 是 一组 权重 它 决定 
如何 通过 邻近 像素点 来 计算 新的 像素点 核 也 
称为 卷积 矩阵 它 对 一个 区域 的 像素 做 
调和 mix up 或 卷积 运算 通常 基于 核 的 
滤波器 滤 波函数 也 被 称为 卷积 滤波器 滤 波函数 
OpenCV 提供 了 一个 非常 通用 的 filter2D 函数 它 
运用 由 用户 指定 的 任意 核 或 卷积 矩阵 
为了 理解 这个 函数 的 使用 方法 首先 来 了解 
卷积 矩阵 的 格式 卷积 矩阵 是 一个 二维 数组 
有奇/nr 数行 奇 数列 中心 的 元素 对 应于 感兴趣 
的 像素 其他 的 元素 对应 于 这个 像素 周围 
的 邻近 像素 每个 元素 都 有一个 整数 或 浮点数 
的 值 这些 值 就是 应用在 像素 值 上 的 
权重 cv2 . filter2D src 1 kernel dst 第二个 参数 
指定 了 目标 图像 每个 通道 的 位 深度 比如 
位 深度 cv2 . CV _ 8U 表示 每个 通道 
为 8位 如果 为 负值 则/d 表示/v 目标/n 图像/n 和源/nr 
图像/n 有/v 同样/d 的/uj 位/q 深度/ns 注意 对 彩色图像 来说 
filter2D 会对 每个 通道 都用/nr 同样 的 核 如果 要 
对 每个 通道 使用 不同 的 核 就 必须 用 
split 函数 和 merge 函数 锐化 边缘 检测 以及 模糊 
等 滤波器 都 使用 了 高度 对称 的 核 但是 
有时 不 对称 的 核 也会 得到 一些 有趣 的 
效果 Canny 边缘 检测 OpenCV 还 提供 了 一个 非常 
方便 的 Canny 函数 该 算法 非常 流行 不仅 是 
因为 它 的 效果 还 因为 在 OpenCV 程序 中 
实现 时 非常 简单 import cv2 import numpy as np 
img = cv2 . imread 1 . jpg 0 cv2 
. imwrite canny . jpg cv2 . Canny img 200 
300 cv2 . imshow canny cv2 . imread canny . 
jpg cv2 . waitKey cv2 . d e s t 
r o y A l l W i n d 
o w s Canny 边缘 检测 算法 非常复杂 但也 很 
有趣 它 有 5个 步骤 即使 用 高斯 滤波器 对 
图像 进行 去 噪 计算 梯度 在 边缘 上 使用 
非 最大 抑制 NMS 在 检测 到 的 边缘 上 
使用 双 阈值 去除 假 阳性 最后 还 会 分析 
所有 的 边缘 及其 之间 的 连接 以 保留 真正 
的 边缘 并 消除 不 明显 的 边缘 轮廓 检测 
在 计算机 视觉 中 轮廓 检测 是 另一个 比较 重要 
的 任务 不单 是 用来 检测 图像 或者 视频 帧 
中 物体 的 轮廓 而且 还有 其他 操作 与 轮廓 
检测 有关 这些 操作 有 计算 多边形 边界 形状 逼近 
核 计算 感兴趣 区域 这是 与 图像 数据 交互 时的/nr 
简单 操作 因为 Numpy 中的 矩形 区域 可以 使用 数组 
切片 slice 来 定义 在 介绍 物体 检测 包括 人脸 
和/c 物体/n 跟踪/v 的/uj 概念/n 时会/nr 大量/n 使用/v 这种/r 技术/n 
边界 框 最小 矩形 区域 和 最小 闭 圆 的 
轮廓 找到 一个 正方形 轮廓 很简单 要 找到 不规则 歪斜 
的 以及 旋转 的 形状 可用 OpenCV 的 cv2 . 
findContours 函数 它 能 得到 最好 的 结果 现实 的 
应用 会 对 目标 的 边界 框 最小 矩形 面积 
最小 闭 圆 特别 感兴趣 将 cv2 . findContours 函数 
与 少量 的 OpenCV 的 功能 相 结合 就能 非常 
容易 地 实现 这些 功能 import cv2 import numpy as 
np img = cv2 . pyrDown cv2 . imread 1 
. jpg cv2 . IMREAD _ UNCHANGED ret thresh = 
cv2 . threshold cv2 . cvtColor img . copy cv2 
. COLOR _ BGR2GRAY 127 255 cv2 . THRESH _ 
BINARY img contours hier = cv2 . findContours thresh cv2 
. RETR _ EXTERNAL cv2 . CHAIN _ APPROX _ 
SIMPLE for c in contours x y w h = 
cv2 . boundingRect c # 计算 出 一个 简单 地 
边界 框 # 这个 操作 很简单 它 将 轮廓 信息 
转换成 x y 坐标 并 加上 矩形 地 高度 和 
宽度 cv2 . rectangle img x y x + w 
y + h 0 255 0 2 # 画出 该 
矩形 rect = cv2 . minAreaRect c # 计算出 包围 
目标 地 最小 矩形 区域 box = cv2 . boxPoints 
rect box = np . int0 box # 这里 用 
到 一种 非常 有趣 的 机制 Opencv/w 没有/v 函数/n 能/v 
直接/ad 从/p 轮廓/n 信息/n 中/f 计算出/i 最小/a 矩形/n 顶点/n 的/uj 
坐标/v 所以 需要 计算出 最小 矩形 区域 然后 计算 这个 
矩形 的 顶点 注意 计算 出来 的 顶点 坐标 是 
浮点 型 但是 所得 像素 的 坐标值 是 整数 不能 
获取 像素 的 一部分 所以 需要 做 一个 转换 然后 
画出 这个 矩形 可由 cv2 . drawContours 函数 来 实现 
cv2 . drawContours img box 0 0 0 255 3 
x y radius = cv2 . m i n E 
n c l o s i n g C i 
r c l e c # 返回 一个 二 元组 
第一 个 元素 为 圆心 的 坐标 组成 的 元祖 
第二 个 元素 为 圆 的 半径 值 center = 
int x int y radius = int radius img = 
cv2 . circle img center radius 0 255 0 2 
cv2 . drawContours img contours 1 255 0 0 1 
cv2 . imshow contours img cv2 . waitKey cv2 . 
d e s t r o y A l l 
W i n d o w s 