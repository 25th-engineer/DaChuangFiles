计算机 视觉 opencv 读取 多个 摄像头 标签 空格 分隔 图像处理 
说明 今天 蹭 了 机器 视觉 课程 讲 到了 stereopsis 
立体 视觉 讲到 了 关于 通过 多 个 摄像头 获取 
object 的 depth 信息 的 事情 因为 想到 从来没有 试过 
打开 多个 摄像头 进行 过 处理 这次 进行 了 测试 
这里 小小 记录 一下 opencv 提供 的 VideoCapture 可以 很 
方便 的 打开 视频 摄像头 设备 而且 直接 输入 对应 
的 摄像头 标号 即可 或者 视频 的 名字 即可 一个 
open 全部 搞定 我 通常 喜欢 用 这个 来 类 
来 获取 图像 数据 下面 是 对应 的 详细 代码 
/ / MultiCAM . cpp 定义 控制台 应用 程序 的 
入口点 / / # include stdafx . h # include 
opencv2 / core / core . hpp # include opencv2 
/ highgui / highgui . hpp # include opencv / 
cv . h using namespace std using namespace cv int 
main int argc _ TCHAR * argv { VideoCapture capture 
capture1 capture2 capture . open 0 capture1 . open 1 
capture2 . open 2 / / Read options / / 
read _ options argc argv capture / / Init camera 
if capture . isOpened { cout capture device 0 failed 
to open endl return 1 } if capture1 . isOpened 
{ cout capture device 1 failed to open endl return 
1 } if capture2 . isOpened { cout capture device 
2 failed to open endl return 1 } / / 
Register mouse callback to draw the tracking box namedWindow 0 
CV _ WINDOW _ AUTOSIZE namedWindow 1 CV _ WINDOW 
_ AUTOSIZE namedWindow 2 CV _ WINDOW _ AUTOSIZE Mat 
frame Mat frame1 Mat frame2 while capture . read frame 
& & capture1 . read frame1 & & capture2 . 
read frame2 { imshow 0 frame imshow 1 frame1 imshow 
2 frame2 if cvWaitKey 33 = = q { break 
} } waitKey return 0 } 笔记本 上 自带 的 
WEBCAM 外接 了 两个 USB CAM 共 三个 摄像头 一般来说 
笔记本 自带 的 WEB CAM 应该 对应 的 标号 为 
0 之后 是 哪个 USB 接上 的 标号 为 1 
以此类推 可以 在 此 工程 上 借助 两 个 摄像头 
或者 3个 摄像头 获取 目标 的 深度 信息 的 测试 
2015 11 12 笔记 整理 张朋 艺 计算机 视觉 opencv 读取 多个 摄像头 标签 空格 分隔 图像处理 
说明 今天 蹭 了 机器 视觉 课程 讲 到了 stereopsis 
立体 视觉 讲到 了 关于 通过 多 个 摄像头 获取 
object 的 depth 信息 的 事情 因为 想到 从来没有 试过 
打开 多个 摄像头 进行 过 处理 这次 进行 了 测试 
这里 小小 记录 一下 opencv 提供 的 VideoCapture 可以 很 
方便 的 打开 视频 摄像头 设备 而且 直接 输入 对应 
的 摄像头 标号 即可 或者 视频 的 名字 即可 一个 
open 全部 搞定 我 通常 喜欢 用 这个 来 类 
来 获取 图像 数据 下面 是 对应 的 详细 代码 
/ / MultiCAM . cpp 定义 控制台 应用 程序 的 
入口点 / / # include stdafx . h # include 
opencv2 / core / core . hpp # include opencv2 
/ highgui / highgui . hpp # include opencv / 
cv . h using namespace std using namespace cv int 
main int argc _ TCHAR * argv { VideoCapture capture 
capture1 capture2 capture . open 0 capture1 . open 1 
capture2 . open 2 / / Read options / / 
read _ options argc argv capture / / Init camera 
if capture . isOpened { cout capture device 0 failed 
to open endl return 1 } if capture1 . isOpened 
{ cout capture device 1 failed to open endl return 
1 } if capture2 . isOpened { cout capture device 
2 failed to open endl return 1 } / / 
Register mouse callback to draw the tracking box namedWindow 0 
CV _ WINDOW _ AUTOSIZE namedWindow 1 CV _ WINDOW 
_ AUTOSIZE namedWindow 2 CV _ WINDOW _ AUTOSIZE Mat 
frame Mat frame1 Mat frame2 while capture . read frame 
& & capture1 . read frame1 & & capture2 . 
read frame2 { imshow 0 frame imshow 1 frame1 imshow 
2 frame2 if cvWaitKey 33 = = q { break 
} } waitKey return 0 } 笔记本 上 自带 的 
WEBCAM 外接 了 两个 USB CAM 共 三个 摄像头 一般来说 
笔记本 自带 的 WEB CAM 应该 对应 的 标号 为 
0 之后 是 哪个 USB 接上 的 标号 为 1 
以此类推 可以 在 此 工程 上 借助 两 个 摄像头 
或者 3个 摄像头 获取 目标 的 深度 信息 的 测试 
2015 11 12 笔记 整理 张朋 艺 计算机 视觉 opencv 读取 多个 摄像头 标签 空格 分隔 图像处理 
说明 今天 蹭 了 机器 视觉 课程 讲 到了 stereopsis 
立体 视觉 讲到 了 关于 通过 多 个 摄像头 获取 
object 的 depth 信息 的 事情 因为 想到 从来没有 试过 
打开 多个 摄像头 进行 过 处理 这次 进行 了 测试 
这里 小小 记录 一下 opencv 提供 的 VideoCapture 可以 很 
方便 的 打开 视频 摄像头 设备 而且 直接 输入 对应 
的 摄像头 标号 即可 或者 视频 的 名字 即可 一个 
open 全部 搞定 我 通常 喜欢 用 这个 来 类 
来 获取 图像 数据 下面 是 对应 的 详细 代码 
/ / MultiCAM . cpp 定义 控制台 应用 程序 的 
入口点 / / # include stdafx . h # include 
opencv2 / core / core . hpp # include opencv2 
/ highgui / highgui . hpp # include opencv / 
cv . h using namespace std using namespace cv int 
main int argc _ TCHAR * argv { VideoCapture capture 
capture1 capture2 capture . open 0 capture1 . open 1 
capture2 . open 2 / / Read options / / 
read _ options argc argv capture / / Init camera 
if capture . isOpened { cout capture device 0 failed 
to open endl return 1 } if capture1 . isOpened 
{ cout capture device 1 failed to open endl return 
1 } if capture2 . isOpened { cout capture device 
2 failed to open endl return 1 } / / 
Register mouse callback to draw the tracking box namedWindow 0 
CV _ WINDOW _ AUTOSIZE namedWindow 1 CV _ WINDOW 
_ AUTOSIZE namedWindow 2 CV _ WINDOW _ AUTOSIZE Mat 
frame Mat frame1 Mat frame2 while capture . read frame 
& & capture1 . read frame1 & & capture2 . 
read frame2 { imshow 0 frame imshow 1 frame1 imshow 
2 frame2 if cvWaitKey 33 = = q { break 
} } waitKey return 0 } 笔记本 上 自带 的 
WEBCAM 外接 了 两个 USB CAM 共 三个 摄像头 一般来说 
笔记本 自带 的 WEB CAM 应该 对应 的 标号 为 
0 之后 是 哪个 USB 接上 的 标号 为 1 
以此类推 可以 在 此 工程 上 借助 两 个 摄像头 
或者 3个 摄像头 获取 目标 的 深度 信息 的 测试 
2015 11 12 笔记 整理 张朋 艺 